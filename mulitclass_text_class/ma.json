{"content": "fixes  35159  x000D \n x000D \nWhen update using nested attributes is performed on the field which has  has rich text  then field value was not getting updated   x000D \n x000D \n    x000D \nclass Message   ApplicationRecord x000D \n      also occurs with  has many  x000D \n    has one  post x000D \n x000D \n    accepts nested attributes for  post x000D \nend x000D \n x000D \nclass Post   ApplicationRecord x000D \n    has rich text  content x000D \nend x000D \n    x000D \n x000D \nFollowing test is failing on master  This PR fixes the issue  x000D \n    x000D \ntest  can update post from within message  do x000D \n    message   Message create  title   Seasons   x000D \n    post   message create post  x000D \n x000D \n      test updating post directly from the message x000D \n    message update  post attributes    content   Test content   id  post id    x000D \n x000D \n      it appears that everything updated  x000D \n    assert equal  Test content   message post content to plain text x000D \n x000D \n      let s reload the model and double check x000D \n    message reload x000D \n x000D \n      this fails  The content is never saved  x000D \n    assert equal  Test content   message post content to plain text x000D \nend x000D \n    x000D \n", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis was a very  positively  impactful change for us with postgres   pgpool  as previously we had to be super careful not to leak connections across various areas like thread pools  puma workers  etc  x000D \n x000D \n   but it s not mentioned in the changelog  so I found it by looking through source code  I think it deserves an honorable mention    x000D \n x000D \n    Other Information x000D \n x000D \n guidelines say that CHANGELOG modifications should go at the top of the file  Let me know if this should be moved to the top of the Active Record section in the 5 2 release notes ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "While looking at the comment https   github com rails rails issues 35417 issuecomment 467826466  on issue  35417 found deprecation message had unnecessary space in it  Fixed that and was checking why  ActiveSupport  Deprecation warn    eowarn  where not indented properly when found unnecessary space in another deprecation message   x000D \n x000D \nDid not add   ci skip   because of changes are to the code   x000D \n x000D \nFeel free to close this PR if this is a cosmetic change ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nIndentation in these examples was set to one space only  in this patch I just fix it to use two spaces since that is the preferred style ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is a small change of guide  x000D \n x000D \nIn addition to    json     xml   I think there is something that changes the content type  x000D \nHowever  I thought that guide would be difficult to see if I added them all  so deleted      and added TIP  x000D \n x000D \nWhat do you think ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "In here  35406  formats  was renamed to  format   Updated the test description for same  x000D \n x000D \n r   tenderlove ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Background x000D \n x000D \nI had first added these changes into a separate commit on https   github com rails rails pull 35390   x000D \n x000D \nWas encouraged by  georgeclaghorn  in this comment  https   github com rails rails pull 35390 discussion r259695792  to open a separate PR for this change   x000D \n x000D \n  Overview x000D \n x000D \nConsider a model with  One  and  Many  attachments configured  x000D \n x000D \n   ruby x000D \nclass User   ActiveRecord  Base x000D \n  has one attached  avatar x000D \n  has many attached  highlights x000D \nend x000D \n    x000D \n x000D \n    One Attachment x000D \n x000D \nAfter attaching  One  attachment    avatar    we can see that the associated x000D \n  blob  record    avatar blob   still returns as  nil   x000D \n x000D \n   ruby x000D \nuser avatar attach blob  x000D \nuser avatar attachment present      true x000D \nuser avatar blob present            false      Incorrect  x000D \n    x000D \n x000D \nThis is a false negative  It happens because after the attachment and blob x000D \nare built  x000D \n x000D \n  1  The record already has its   blob  association loaded  as  nil  x000D \n  2  the    Attachment  is associated with the record but the    Blob  only gets x000D \n    associated with the    Attachment   not the record itself x000D \n x000D \nIn reality  the blob does in fact exist  We can verify this as follows  x000D \n x000D \n   ruby x000D \nuser avatar attach blob  x000D \nuser avatar attachment blob present        true    Blob does exist  x000D \n    x000D \n x000D \nThe fix in this change is to simply assign the    Blob  when assigning x000D \nthe    Attachment   After this fix is applied  we correctly observe  x000D \n x000D \n   ruby x000D \nuser avatar attach blob  x000D \nuser avatar attachment present      true x000D \nuser avatar blob present            true      Woohoo  x000D \n    x000D \n x000D \n    Many Attachments x000D \n x000D \nWe don t see this issue with  Many  attachments because the   blob  association x000D \nis already loaded as part of attaching more newer blobs  x000D \n x000D \n   ruby x000D \nuser highlights attach blob  x000D \nuser highlights attachments any        true x000D \nuser highlights blobs any              true x000D \n    x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This commit ensures that locals are passed in to the template objects x000D \nwhen they are constructed  then removes the  locals   mutator on the x000D \ntemplate object   This means we don t need to mutate Template objects x000D \nwith locals in the  decorate  method  x000D \n x000D \nSimilar to  35408 and  35406", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This converts Template objects to only have one variant because they can only have one variant   Instead of storing a single element array  just store the variant directly on the template object  x000D \n x000D \nSimilar to  35406", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is a quality of life improvement for those developing ActionView itself  cc  tenderlove  x000D \n x000D \nThis PR first renames the existing  inspect  implementation to  short identifier   This improves the \ud83d\udc40 reading of  identifier method name   which used to read  inspect tr   a z           which is a bit awkward because it relies on what  inspect   happens  to return   short identifier tr   a z          conveys what it does better  and allows us to change  inspect  \ud83c\udf89    x000D \n x000D \nInspect used to return a string like  app views home index html erb   which is confusing because I would normally expect to see a type and it isn t immediately obvious that that isn t a string  particularly when in an array  ie    some template  another template   parses to me the same as    some template    another template    on first glance   x000D \n x000D \nThis PR changes inspect to return a string like  x000D \n    x000D \n  ActionView  FileTemplate app views tags  tag html erb locals   name    x000D \n    x000D \n x000D \nIncluding the class name makes it look more like most   inspect  methods  I also added  locals  to this output because it s often different for the same identifier  we need to compile each set of locals separately   It  could  be helpful to include handler  formats  and variants  but they should be inferable by the developer from the identifier  so I didn t include them  x000D \n x000D \nI d guess the reason we override inspect here in the first place is to avoid printing out the whole source code for the template ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Templates only have one format   Before this commit  templates would be x000D \nconstructed with a single element array that contained the format   This x000D \ncommit eliminates the single element array and just implements a x000D \n format  method   This saves one array allocation per template ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "These patches deprecate Template construction  without  a format   In other words  this PR guarantees that a constructed template object will always have an associated format   This allows us to eliminate some nil checks as well as avoid mutations in the  decorate  method  x000D \n", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n 34505 introduced the ability to block writes even if the database allows it  It added a  READ QUERY  regex to help determine if a query was a read or a write  The regex is built using  ActiveRecord  ConnectionAdapters  AbstractAdapter build read query regexp  and it doesn t account for reads with leading parenthesis and or spaces  x000D \n x000D \nhttps   github com rails rails blob 67732efcb658807929be0e968642ee1d90b3c986 activerecord lib active record connection adapters abstract adapter rb L104 L106 x000D \n x000D \nThis would cause read queries like unions    SELECT      UNION  SELECT        to be treated as writes  x000D \n x000D \nIn this PR  I update the regex allow for leading parenthesis and or spaces  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixes issue https   github com rails rails issues 35312 x000D \n x000D \nRails should not override Cache Control header if one set manually", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Related cbcdecd  2a56b2d  x000D \n x000D \nThis is a regression caused by cbcdecd  x000D \n x000D \nIf query caching is enabled  prepared statement handles are never x000D \nre used  since we missed that a query is preprocessed when query caching x000D \nis enabled  but doesn t keep the  preparable  flag  x000D \n x000D \nWe should care about that case ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Related to 287920ca7d06c8f51198ec750d65ba703835b257  x000D \nhttps   3 basecamp com 3076981 buckets 24956 chats 12416418 1619936443 x000D \n x000D \n cc  matthewd ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nBackport of https   github com rails rails pull 35395 targeting 5 2 x  x000D \n x000D \n    Other Information x000D \n x000D \nPlease refer to https   github com rails rails pull 35395 for details ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nWait until initialization has completed before we assign  config action mailer  to  ActionMailer  Base   x000D \n x000D \nEager loading of  app mailers  must also be disabled  x000D \n x000D \n    Other Information x000D \n x000D \nThe ActionMailer railtie looks at  config action mailer  and assigns these options to  ActionMailer  Base   However  it was previously doing so as soon as soon as  ActionMailer  was loaded   ActiveSupport on load  action mailer     x000D \n x000D \nWe now wait for initialization to complete   ActiveSupport on load  after initialize     as well  as the  ActionMailer  being loaded  x000D \n x000D \nThis is an important change because  ActionMailer   and its config  is explicitly designed to be extensible  specifically ActionMailer allows third party gems to register additional  delivery methods   x000D \n x000D \nDelivery methods can be registered with third party Railtie by using  x000D \n x000D \n   ruby x000D \nclass Railtie     Rails  Railtie x000D \n  initializer  foo mail register delivery method  do x000D \n    ActionMailer  Base add delivery method  foo  FooMailer x000D \n  end x000D \nend x000D \n    x000D \n x000D \nor ideally  x000D \n x000D \n x000D \n   ruby x000D \nclass Railtie     Rails  Railtie x000D \n  initializer  foo mail register delivery method  do x000D \n    ActiveSupport on load  action mailer  do x000D \n      add delivery method  foo  FooMailer x000D \n    end x000D \n  end x000D \nend x000D \n    x000D \n x000D \n add delivery method  adds support for  ActionMailer  Base foo settings  and  config action mailer foo settings   https   github com rails rails blob master actionmailer lib action mailer delivery methods rb L51   x000D \n x000D \nHowever  calling  add delivery method  requires  ActionMailer  to be loaded  and  prior  to this commit  the config would already have been assigned on  ActionMailer  Base   so there s no opportunity to do  x000D \n x000D \n   ruby x000D \nconfig action mailer foo settings     x000D \n    foo auth   bar  x000D \n   x000D \n    x000D \n x000D \nIf you were previously to put the above in your environment config  you d get an error because when  ActionMailer  when  ActionMailer  is eager loaded in production  third party gems haven t run their initializers so  undefined method  foo settings   for ActionMailer  Base Class  is raised  e g  https   github com mailgun mailgun ruby issues 104   x000D \n x000D \nInstead  if you were to move your logic into  app initializers foo mail rb  e g  x000D \n x000D \n   ruby x000D \nRails application configure do x000D \n  config action mailer delivery method    foo x000D \n  config action mailer foo settings     x000D \n      api key  ENV  FOO API KEY    x000D \n      domain  ENV  FOO DOMAIN    x000D \n    x000D \nend x000D \n    x000D \n x000D \nthis  silently  fails  in production   with eager loading enabled   because we re  without this PR  assigning the config  after   ActionMailer  has been loaded  and the config copied across   so although we ve set the config it is never used and out of sync with  ActionMailer  Base   which for example still returns   smtp  for  ActionMailer  Base delivery method   even though  Rails application config action mailer delivery method  correctly returns   foo   x000D \n x000D \nThis commit resolves the issue by ensuring we wait until all initializers have run  before  settings up  ActionMailer  Base  with options from  action mailer config   x000D \n x000D \nWe can now in  app initializers foo mailer rb  do  x000D \n x000D \n   ruby x000D \nActiveSupport on load  action mailer  do x000D \n  Rails application configure do x000D \n      config action mailer delivery method    foo x000D \n      config action mailer foo settings     x000D \n        api key  ENV  FOO API KEY    x000D \n        domain  ENV  FOO DOMAIN    x000D \n        x000D \n  end x000D \nend x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis PR updates  puma s  https   github com puma puma   version from 3 11 to 3 12  x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n SecureRandom  is used in  generate key  but was never required in this file  This doesn t fix any bugs in Rails but lets me save a confusing line in one of my applications  \ud83d\udc9c", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " select  can also use symbol as the field specification  so we updated the usage code ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Shrine relies on  ActionDispatch  Http  UploadedFile  working with  IO copy stream   In https   github com rails rails pull 28676    to path  method was added to  ActionDispatch  Http  UploadedFile   which broke usage with  IO copy stream   https   github com shrinerb shrine issues 353   x000D \n x000D \n   rb x000D \nsource   ActionDispatch  Http  UploadedFile new      x000D \nIO copy stream source  destination  x000D \n     TypeError  can t convert ActionDispatch  Http  UploadedFile to IO  ActionDispatch  Http  UploadedFile to io gives Tempfile  x000D \n    x000D \n x000D \nNormally  IO copy stream  just calls   read  on the source object to read the content  However  when   to path  is defined   IO copy stream  calls   to io  in order to retrieve the raw  File  object  In this case it trips up  because  ActionDispatch  Http  UploadedFile to io  returned a  Tempfile  object  which is not an  IO  subclass  x000D \n x000D \nWe fix this by modifying   to io  to return an actual  File  object  which is a  IO  subclass   I think this is also more correct behaviour in general  x000D \n x000D \nI had to test this with an actual  Tempfile  object  so then I also updated the rest of the tests to use an actual  Tempfile  objects  which simplified them  ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   ruby x000D \nclass Post   ActiveRecord  Base x000D \n  enum status   i  drafted active trashed   x000D \nend x000D \n x000D \nPost not drafted      where not status   drafted  x000D \nPost not active       where not status   active  x000D \nPost not trashed      where not status   trashed  x000D \n    x000D \n x000D \nParticularly convenient when you want to disallow access in a controller  like  Post not trashed find params  id    ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nZeitwork uses a default inflector that\u2019s different than ActiveSupport\u2019s to define which modules can be autoloader based on filesystem paths  If these two inflectors disagree on the filename   constant conversion  then the modules created for autoloading can be named one thing and the actual constants defined in those files can be named something else  Because the ActiveSupport  Inflector can be customized  it\u2019s possible for the two inflectors to disagree  In Rails 5  only the ActiveSupport  Inflector was used to constantize  so any exceptions applied to it in an initializer or whatever would apply to the autoloader as well  If we make Zeitwork use the ActiveSupport inflector  then they should agree again  and backwards compatibility should be maintained  x000D \n x000D \nZeitwork supports custom inflectors and expects it s  inflector  to have a very similar interface to ActiveSupports so I am guessing this was always intended   fxn can probably say more   but I think the question is if this should be the default or not  I think it should because it maintains backwards compatibility with the way things worked with the classic autoloader  and it allows users one more notch of control over the  magic  constant discovery that Rails does   x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nChanges  a index  to  an index ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It seems that the reason why the  test select with subquery in from uses original table name  does not pass is that the return value of  sqlite3 column name    is wrong due to subquery flattening  x000D \n x000D \nThis seems to have been fixed with 3 20 0 https   sqlite org changes html version 3 20 0   x000D \nBut CI uses the old version maybe 3 11 0   I added  DISTINCT  to avoid optimization by subquery flattening  x000D \n x000D \nRef  https   sqlite org optoverview html flattening x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This commit adds a finalizer just to inline templates   We can t cache x000D \ncompilation of inline templates because it s possible that people could x000D \nhave render calls that look like this  x000D \n x000D \n   ruby x000D \nloop do x000D \n  render inline     rand   x000D \nend x000D \n    x000D \n x000D \nand we would cache every one of these different inline templates   That x000D \nwould cause a memory leak   OTOH  we don t need finalizers on regular x000D \ntemplates because we can cache  control  and detect changes to the x000D \ntemplate source  x000D \n x000D \nFixes   35372 x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This removes one call to  lookup context  and also eliminates a x000D \nconditional in   render template   x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Summary   x000D \nThis PR updates the callbacks skipping methods mentioned in the guides  x000D \n x000D \nI recently came across code for  increment     decrement  and  toggle  methods  x000D \nThese methods are just updating the attribute  without persisting the changes in the database  and therefore  wont affect the object lifecycle  x000D \n x000D \nOn the other hand  methods  increment   and  decrement   persist the changes in the database without invoking any callbacks  The guide does not mentions them ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I want to start reducing the calls to  lookup context    That method x000D \ncaches the lookup context in an ivar  but I would like to cache the x000D \nlookup context on the stack   That way we aren t coupled to the behavior x000D \nof the  lookup context  method ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   Summary x000D \n x000D \nThis change is to allow using  tzinfo 2 x  in a project that also includes  activesupport   x000D \n x000D \n   Other Information x000D \n x000D \n    Motivation x000D \n x000D \nCurrently  the  bundle  for a project that uses both  activesupport  and  tzinfo 2 0  resolves to a much older version of activesupport   v3 2 22 5  since that version doesn t have a dependency on  tzinfo  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nWhile looking at  35365 found that getting started doc has two migration files which had  ActiveRecord  Migration 5 0   mentioned  Updated them to Rails 6 0 x000D \n x000D \nI could see we have similar migration version at other places in the documentation  I would like to update those as well  Let me know if I should go ahead and update those as well  x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixed description when n  n relation is implemented with  has and belongs to many   x000D \nIf  execute  collection destroy  object         I think the object associated with  collection  will be destroyed  but what about it  x000D \n x000D \nFor example  it works as follows  x000D \n x000D \n    x000D \n   part assemblies include   assembly1  x000D \n   true x000D \n   part assemblies destroy  assembly1  x000D \n   part assemblies include   assembly1  x000D \n   false x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "With Zeitwerk 1 3 0 we can simplify a bit logging related code ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nWhen using  select  with   DISTINCT          if you use method  size  on a non loaded relation it overrides the column selected by passing   all  so it returns different value than count   x000D \n x000D \nFixes  35214 ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is caused by 0ee96d1  x000D \n x000D \nSince  18744   select  columns doesn t be qualified by table name if x000D \nusing  from   0ee96d1 follows that for  pluck  as well  x000D \n x000D \nBut people depends that  pluck  columns are qualified even if using x000D \n from   x000D \n x000D \nSo I ve fixed that to be qualified if  from  has the original table name x000D \nto keep the behavior as much as before  x000D \n x000D \nFixes  35359  x000D \n x000D \ncc  eileencodes ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "fixes  35351 x000D \n x000D \n    Summary x000D \n x000D \nIf a form with  rich text area  has the option set as  placeholder  true  and has a locale set for the form field then the placeholder text should be translated and shown   x000D \n x000D \nExample   x000D \n    x000D \nen  x000D \n  activerecord  x000D \n    attributes  x000D \n      message  x000D \n        title  Set a title for your message x000D \n        content  Write your message x000D \n    x000D \n x000D \n    x000D \n    form with model  message  do  form     x000D \n   div class  field   x000D \n        form label  title    x000D \n        form text field  title  placeholder  true    x000D \n    div  x000D \n x000D \n   div class  field   x000D \n        form label  content    x000D \n        form rich text area  content  placeholder  true    x000D \n    div  x000D \n   end    x000D \n    x000D \n x000D \n     Expected   x000D \n text field  translate placeholder value and sets it to  Set a title for your message   similarly  for  rich text area  should have translated placeholder  x000D \n", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Implicitly updating the lock version without knowing the current version x000D \nis meaningless ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "While we need some compatibility  I am exploring departing from  ActiveSupport  Dependencies  as public API in   zeitwerk  mode  x000D \n x000D \n Rails autoloaders  is gradually taking shape as an alternative  and x000D \n x000D \n   ruby x000D \nRails autoloaders logger   Rails logger x000D \n    x000D \n x000D \ngoes in that direction  Let s see if this passes the test of time  x000D \n x000D \nI will probably implement the   debug  dance in Zeitwerk itself  Also  the test suite needs a reorganization  But for the time being this will suffice here for the next beta ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Add more two Brazilian times zones for the ActiveSupport  TimeZone  MAPPING  x000D \n x000D \nThe two new keys  x000D \n     Manaus                            America Manaus   x000D \n     Bahia                               America Bahia   x000D \n x000D \nThese Time Zones are already available inside the TZInfo gem  Adding these two zones will help a lot  x000D \n x000D \n    Tests x000D \n x000D \nThese time zones are already tested inside the TZInfo ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  What changed x000D \n x000D \nI changed the variable name  x000D \n x000D \n  Why this pull request x000D \n x000D \nBecause rubecop s offense  Lint   ShadowingOuterLocalVariable  was detected in  activerecord   lib   active record   relation   query methods rb   x000D \n x000D \n  What became of it x000D \n x000D \n   Before x000D \n x000D \n    x000D \n  rubocop activerecord lib active record relation query methods rb  x000D \nInspecting 1 file x000D \nW x000D \n x000D \nOffenses  x000D \n x000D \nactiverecord lib active record relation query methods rb 1165 24  W  Lint ShadowingOuterLocalVariable  Shadowing outer local variable   field  x000D \n            arg map    field  dir  x000D \n                             x000D \n x000D \n1 file inspected  1 offense detected x000D \n    x000D \n x000D \n   After x000D \n x000D \n    x000D \n  rubocop activerecord lib active record relation query methods rb  x000D \n x000D \nInspecting 1 file x000D \n  x000D \n x000D \n1 file inspected  no offenses detected x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since b21f50d8ae36d9b50b673579e17bccbe55363b34  requiring  active storage  on its own has failed with the following error  x000D \n x000D \n    activestorage lib active storage rb 55 in   module ActiveStorage    undefined method  minutes  for 5 Integer  NoMethodError  x000D \n x000D \nI discovered this while trying to get the rspec rails test suite to pass on Rails master  as it  requires  active storage  outside the context of a full application  https   github com rspec rspec rails blob 7720e7b1c8c60f033a8e1f9c61f6ca12c84121f4 example app generator spec support default preview path L10  ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Currently   ActionView  Base new  will raise a  NotImplementedError  if given an instance of  ActionView  PathSet  on initialization  For example   ActionController  Base view paths  will return an instance of  ActionView  PathSet  so the following will raise a  NotImplementedError    x000D \n x000D \n view   ActionView  Base new ActionController  Base view paths  assigns        x000D \n x000D \nThis commit prevents the raised error in favor of a deprecation warning  x000D \n x000D \n tenderlove Is it sufficient here to add this single  when ActionView  PathSet  to the case in  build lookup context  or are there other cases we also need to consider ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This reverts a fix that broke schemas in SQLite3  and applies a different fix to solve the same test case  x000D \n x000D \nThis fixes  35292  x000D \n x000D \nBasically  when passing a symbol with a dot to  pluck   we are expecting it to be a table   a column  MySQL and PostgreSQL handled it fine  because quoting  schema   table  is the same as quoting  table   column     part1   part2    So a quote table name was being applied by pluck  x000D \n x000D \nHowever  this is not the case in SQLite3  which wants   schema table   column    note the schema and table in the same quotes   and so would generate   table column    The applied logic is instead to check for a dot  and if found  to quote each part separately ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Follow up on comment https   github com rails rails pull 35327 discussion r258489309 x000D \n x000D \n r   matthewd ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is a follow up of  35310  x000D \n x000D \nCurrently  Topic find by id   not a number    matches to a  id   0  x000D \nrecord  That is considered as silently leaking information  x000D \n x000D \nIf non numeric string is given to find by an integer column  it should x000D \nnot be matched to any record  x000D \n x000D \nRelated  12793 ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Follow on  35265 x000D \n x000D \nFound that  RenderedCollection  class had attr reader defined for  rendered templates  but was not used  Refactored code to add reader for  spacer  and fixed the usage of it   x000D \n x000D \n r   tenderlove ", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "With this patch we unhook  ActiveSupport  Dependencies  in   zeitwerk  mode  x000D \n x000D \nThis doesn t make a difference for autoloadable constants  because  autoload  runs before  const missing   but when constants are missing the backtraces include  dependencies rb   which may be confusing  That also opens unnecessarily the door to potential gotchas  as seen in  35278 ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We no longer depend on  rendered format  side effects  so we can remove x000D \nthis method now  \ud83c\udf89", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Follow up on  35316  x000D \n x000D \nReplaced the usage of  where   delete destroy all  with  delete destroy by  ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Follow up on  35316   x000D \n x000D \nAdded delegation test for  delete by  and  destroy by  methods  x000D \n x000D \n r   kamipo ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Change  happen  to a more technical term x000D \n x000D \n x000D \n", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Add rigorous verification x000D \n x000D \n    Summary x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \n    Other Information x000D \n x000D \n     If there s anything else that s important and relevant to your pull x000D \nrequest  mention that information here  This could include x000D \nbenchmarks  or other information  x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "closes  35304  x000D \n x000D \nAdds  delete by  and  destroy by  as relation methods to add missing symmetry  x000D \n x000D \n r   dhh ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since there was no explanation of combining callback conditions in Conditional callbacks  it was added ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That is considered as silently leaking information  x000D \nIf type casting doesn t return any actual value  it should not be x000D \nmatched to any record  x000D \n x000D \nFixes  33624  x000D \nCloses  33946 ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The preamble  finally  is described in item 8 2 of the AR callback  x000D \nHowever  since it is not the last item  the expression  finally  is contradictory  x000D \n x000D \nWhen item 8 3 was added  I guessed that item 8 2 was supposed to be  finally  deleted  so I deleted it ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nI found rubocop warnings  so automatically corrected them  x000D \n x000D \nOffenses  x000D \n x000D \n    x000D \nrailties lib rails autoloaders rb 1 1  C   Corrected  Style FrozenStringLiteralComment  Missing magic comment   frozen string literal  true  x000D \nmodule Rails x000D \n  x000D \nactionmailer test base test rb 917 1  C   Corrected  Layout EmptyLinesAroundBlockBody  Extra empty line detected at block body beginning  x000D \nactionmailer test base test rb 917 1  C   Corrected  Layout TrailingWhitespace  Trailing whitespace detected  x000D \nactionmailer test base test rb 917 5  C   Corrected  Style RedundantBegin  Redundant begin block detected  x000D \n    begin x000D \n          x000D \nactionmailer test base test rb 918 3  C   Corrected  Layout IndentationWidth  Use 2  not 4  spaces for indentation  x000D \n      events      x000D \n       x000D \nactionmailer test base test rb 930 1  C   Corrected  Layout EmptyLinesAroundBlockBody  Extra empty line detected at block body end  x000D \nactionmailer test base test rb 930 1  C   Corrected  Layout TrailingWhitespace  Trailing whitespace detected  x000D \n    x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \n    Other Information x000D \n x000D \n     If there s anything else that s important and relevant to your pull x000D \nrequest  mention that information here  This could include x000D \nbenchmarks  or other information  x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The CI failure for  test errors for bigint fks on integer pk table  is x000D \ndue to the poor regex that extract all        w        like parts from x000D \nthe message    foreign key  should be   old car id    but   engines     x000D \n x000D \nhttps   travis ci org rails rails jobs 494123455 L1703 x000D \n x000D \nI ve improved the regex more strictly and have more exercised mismatched x000D \nforeign key tests  x000D \n x000D \nFixes  35294", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \nThis PR fixes  35296  x000D \n x000D \n x000D \n        Other Information x000D \n x000D \nIf there s anything else that s important and relevant to your pull x000D \nrequest  mention that information here  This could include x000D \nbenchmarks  or other information  x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "https   travis ci org rails rails jobs 493027997 L1689 L1708", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This commit passes the template format to the digestor in order to come x000D \nup with a key   Before this commit  the digestor would depend on the x000D \nside effect of the template renderer setting the rendered format on the x000D \nlookup context   I would like to remove that mutation  so I ve changed x000D \nthis to pass the template format in to the digestor  x000D \n x000D \nI ve introduced a new instance variable that will be alive during a x000D \ntemplate render   When the template is being rendered  it pushes the x000D \ncurrent template on to a stack  setting   current template  to the x000D \ntemplate currently being rendered   When the cache helper asks the x000D \ndigestor for a key  it uses the format of the template currently on the x000D \nstack  x000D \n x000D \nI removed the  rendered format   side effect in https   github com rails rails pull 35265 but the tests failed   It turns out that the digest caching code depends on that side effect  so this PR aims to remove the digest cache s dependency on the  rendered format  setter   This PR fixes the Railties test in  35265 ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nAdd  Numeric in cents  to convert a number to a cents representation  except to  Integer  values  x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "So I ve caught a bug when I was re using a single hash instance of translation options in a few places in my code  and then noticed that my hash had some extra elements I didn t put there    x000D \n x000D \nTurns out we had that mutating helper all the time right under our noses  x000D \n x000D \nOK  so now options will be duplicated   every   time  It could be better for performance to only duplicate those options inside relevant  if  clause  but I decided that this way we will be sure that nobody forgets to perform this operation in case of further changes ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " ci skip  x000D \n x000D \nJust changing 2 incorrect instances of  upto  to  up to  in the documentation  ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nThis fixes a bug caused by having too many bind parameters in a query  Queries without the query cache already work correctly by switching to using an unprepared statement  This change adds the same bind parameter length check to the QueryCache  See https   github com rails rails issues 35251", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since  35036  the subclasses of  ActionView  Base  requires the  compiled method container  method  x000D \nThis is incompatible  For example   web console  use view class that subclass of  ActionView  Base   and does not work it now cause of this  x000D \n x000D \nI am not sure that using  self class  is correct  but I think that it is better to show a deprecate message rather than raise exception ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This deprecates using class level querying methods if the receiver scope x000D \nregarded as leaked  since  32380 and  35186 may cause that silently x000D \nleaking information when people upgrade the app  x000D \n x000D \nWe need deprecation first before making those ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis pull request addresses the following error  x000D \nIt has been reported at https   travis ci org rails rails jobs 493530508 L1533 x000D \n x000D \n   ruby x000D \n  cd actioncable x000D \n  bundle exec ruby  w  Itest test subscription adapter postgresql test rb x000D \nTraceback  most recent call last   x000D \n\t1  from test subscription adapter postgresql test rb 8 in   main   x000D \ntest subscription adapter postgresql test rb 10 in   class PostgresqlAdapterTest    uninitialized constant PostgresqlAdapterTest  ChannelPrefixTest  NameError  x000D \n    x000D \n x000D \nFollow up  35276", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Found some nitpicks while looking at  35242  Feel free to close the PR if these are cosmetic changes  x000D \n x000D \n r   eileencodes  x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThe same DB could be used by multiple apps  or engines  see  34714   thus we need a way to avoid naming conflicts  x000D \n x000D \nThe functionality has been already implemented for Redis   27425   we only need to include the module  x000D \n x000D \n", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This fix should allow AR to raise ActiveRecord  IrreversibleOrderError when an order has more than one argument and include  nulls first last  x000D \nPreviously I received  foo NULLS FIRST DESC  bar DESC  from  foo NULLS FIRST  bar  trying to reverse order and it raised pg exception because of bad syntax ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixes https   github com rails rails issues 35194  x000D \n x000D \nThis is a really strange bug  x000D \n x000D \nFor some reason    reload schema from cache  called by  Topic reset column information  can change how date time columns behave  It seems to change included modules of  ActiveRecord  Type  DateTime  instances   but only sometimes   x000D \n x000D \nIn the expected flow  the value cast starts  here  https   github com rails rails blob a20b00db3fd2e05a960c1d68cc7bce64733e49e7 activerecord lib active record attribute methods time zone conversion rb L11  and includes   ActiveRecord  Type  Internal  Timezone    ActiveModel  Type  Helpers  AcceptsMultiparameterTime 0x00007f8cae260358   ActiveModel  Type  Helpers  TimeValue  ActiveSupport  ToJsonWithActiveSupportEncoder  ActiveSupport  Dependencies  Loadable  JSON  Ext  Generator  GeneratorMethods  Object  ActiveSupport  Tryable  Kernel    In the failing test case  the value cast starts  here  https   github com rails rails blob a20b00db3fd2e05a960c1d68cc7bce64733e49e7 activemodel lib active model type helpers accepts multiparameter time rb L8  and includes   ActiveSupport  Tryable    Module 0x00007f8b010f1e58     x000D \n x000D \nThis seems to be triggered by initializing a new topic in  AttributeMethodsTest test YAML dumping a record with time zone aware attribute  after resetting column info in a previous test  My proposed solution is more of a band aid to minimize the blast radius of attribute changes between tests  this was already being done for other tests in  AttributeMethodsTest    x000D \n x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Currently  csp meta tag  generates  name  attribute only  x000D \nHowever  in libraries like  Material UI  and  JSS   expect that the meta tag that contains the nonce with  property  attribute  x000D \n x000D \nhttps   material ui com css in js advanced  how does one implement csp x000D \nhttps   github com cssinjs jss blob master docs csp md x000D \n x000D \nThis patch allows  csp meta tag  to specify arbitrary options and allows  nonce  to be passed to those libraries  x000D \n", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "fixes  35252  x000D \n x000D \n r   georgeclaghorn  x000D \n x000D \ncc   marcusmalmberg", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Having  order  CASE column1 WHEN  data1  THEN 0 ELSE column2 END  column3 id NULLS FIRST  RANDOM      and adding   last  i get exception from postgres because of invalid query syntax  x000D \n    x000D \nORDER BY CASE column1 WHEN  data1  THEN 0 ELSE column2 END DESC  column3 id NULLS FIRST DESC  RANDOM   x000D \n    x000D \n x000D \nafter making this patch it works correctly  x000D \n    x000D \nORDER BY CASE column1 WHEN  data1  THEN 0 ELSE column2 END DESC  column3 id DESC NULLS FIRST  RANDOM   DESC x000D \n   ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nBoth methods were introduced in Ruby 2 5 and fit this use case very x000D \nnicely  listing a directory s entries excluding the     and      nodes  x000D \n x000D \nThe private method  exclude from was removed as it no longer serves x000D \nits original purpose ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This PR changes template renderers to return a more complex object instead of just a string   The reason I wanted to do this is because the template renderers modify the lookup context  setting the  rendered format  on it   This mutation is extremely far from the owner of the lookup context  the controller    The reason the mutation is so far from the controller is because the controller didn t know what types of templates had been rendered   This PR changes the return value such that the controller can now know what was rendered  and the template renderers no longer need to mutate the lookup context  x000D \n x000D \nOf course this introduces one or two more object allocations per template  one in the case of a partial  two in the case of a collection    However  benchmarks between master and this branch seem comparable  so I think it s ok  x000D \n x000D \n   ruby x000D \nrequire  benchmark ips  x000D \nrequire  action view  x000D \nrequire  action pack  x000D \nrequire  action controller  x000D \nrequire  stackprof  x000D \n x000D \nclass TestController   ActionController  Base x000D \nend x000D \n x000D \nTestController view paths    File expand path  test benchmarks    x000D \n x000D \n  Create a bunch of data x000D \n x000D \ncontroller view   TestController new view context x000D \n x000D \nBenchmark ips do  x  x000D \n  x report  many partials   do x000D \n    controller view render  many partials   x000D \n  end x000D \nend x000D \n    x000D \n x000D \n     This branch  x000D \n x000D \n    x000D \n  be ruby render benchmark rb x000D \nWarming up                                        x000D \n       many partials    52 000  i 100ms x000D \nCalculating                                       x000D \n       many partials    539 589   \u00b1 3 5   i s        2 704k in   5 017926s x000D \n    x000D \n x000D \n     Master  x000D \n x000D \n    x000D \n  be ruby render benchmark rb x000D \nWarming up                                        x000D \n       many partials    54 000  i 100ms x000D \nCalculating                                       x000D \n       many partials    560 691   \u00b1 3 7   i s        2 808k in   5 015547s x000D \n    x000D \n x000D \nSince the controller now knows what type of templates were rendered  it can set the  rendered format  property in one place   We no longer have to do   lookup context rendered format      because we can be confident that the top level rendered format is the one we want  x000D \n x000D \nAdditionally  I think we can now remove  rendered format  from the lookup context and just set the content type directly on the response  but I ll follow up with that  ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Using the subscript method       on a string has several overloads and x000D \nrather complex implementation  One of the overloads is the capability to x000D \naccept a regular expression and then run a match  then return the x000D \nreceiver  if it matched  or one of the groups from the MatchData  x000D \n x000D \nThe function of the  UUID cast  method is to cast a UUID to a type and x000D \nformat acceptable by postgres  Naturally UUIDs are supposed to be x000D \nstring and of a certain format  but it had been determined that it was x000D \nnot ideal for the framework to send just any old string to Postgres and x000D \nallow the engine to complain when  foobar  or    was sent  being x000D \nobviously of the wrong format for a valid UUID  Therefore this code was x000D \nwritten to facilitate the checking  and if it were not of the correct x000D \nformat  a  nil  would be returned as is conventional in Rails  x000D \n x000D \nNow  the subscript method will allocate one or more strings on a match x000D \nand return one of them  based on the index parameter  However  there x000D \nis no need for a new string  as a UUID of the correct format is already x000D \nsuch  and so long as the format was verified then the string supplied is x000D \nadequate for consumption by the database  x000D \n x000D \nThe subscript method also creates a MatchData object which will never be x000D \nused  and so must eventually be garbage collected  x000D \n x000D \nGarbage collection indeed  This innocuous method tends to be called x000D \nquite a lot  for example if the primary key of a table is a uuid  then x000D \nthis method will be called  If the foreign key of a relation is a UUID  x000D \nonce again this method is called  If that foreign key is belonging to x000D \na has many relationship with dozens of objects  then again dozens of x000D \nUUIDs shall be cast to a dup of themselves  and spawn dozens of x000D \nMatchData objects  and so on  x000D \n x000D \nSo  for users that  x000D \n  Use UUIDs as primary keys x000D \n  Use Postgres x000D \n  Operate on collections of objects x000D \n x000D \nThis accomplishes a significant savings in total allocations  and may x000D \nsave many garbage collections  x000D \n x000D \n    Summary x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \n    Other Information x000D \n x000D \n     If there s anything else that s important and relevant to your pull x000D \nrequest  mention that information here  This could include x000D \nbenchmarks  or other information  x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Closes https   github com rails rails issues 35260  x000D \n x000D \nRewords the RDBMS note in the ActiveRecord basics guide  x000D \n x000D \nThis may be an unpopular opinion  or promoting of bad behaviour  but I think a big advantage of ActiveRecord is that you don t actually need an intimate knowledge of SQL   RDBMS  Yes  they are helpful to know  and highly necessary in order to master ActiveRecord  but I wouldn t label them as crucial for beginners  x000D \n", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "As discussed with  matthewd in  35235  x000D \n x000D \nIn this alternative  we  require  the library as soon as  config autoloader  is set to   zeitwerk   I have restored the single quotes in the  Gemfile  template too ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This reverts  32380  since this may cause that silently leaking x000D \ninformation when people upgrade the app  x000D \n x000D \nWe need deprecation first before making this ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "https   codeclimate com github rails rails pull 35254 x000D \n x000D \n  image  https   user images githubusercontent com 12642 52730592 1b23ae80 2fff 11e9 8ab5 c26bb7dbf731 png  x000D \n", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "While checking  35229 found that  build lookup context  had some unused arguments in it  Removed those arguments   x000D \n x000D \n r   tenderlove ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I don t know this is the right fix necessarily  x000D \n x000D \nWhen rendering a collection  each object in the collection can respond to  to partial path    The template renderer will render the partial returned by that method   However  each object in the collection could return a different template   That means there isn t  one  template associated with the collection   Our collection template cache code depends on the collection using just one template   If you try to set  cached  true  on a collection that doesn t have just one template associated with it  it will raise an exception  x000D \n x000D \nThe patch in this PR fixes the exception  but doesn t actually cache the templates   Obviously  this use case isn t supported today  and it seems like nobody has noticed  x000D \n x000D \n1  I m not sure how or if we should support caching collections like this x000D \n2  If we decide not to support this  should it raise an exception ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fix the  config for  to always return a NonSymbolAccessDeprecatedHash  x000D \n x000D \n  If you have hashes inside array  the hashes were getting initialized x000D \n  as regular HWIA wereas we want them to be x000D \n  NonSymbolAccessDeprecatedHash in order to trigger a deprecation x000D \n  warning when keys are accessed with string  x000D \n x000D \n  This patch fixes that by overwriting the       to to the same x000D \n  as what HWIA does  with the difference that we don t call x000D \n   convert key  to not trigger a deprecation when setting value   x000D \n x000D \n  I also took the liberty to extract  hash nested under indifferent access   x000D \n  into a separate method to allow subclasses to return whatever x000D \n  they want  x000D \n  Inheriting HWIA is not common  but I think it s useful for cases x000D \n  like this one where we want to preprocess reading and writing values x000D \n  in the hash  for deprecation purposes or other reasons   x000D \n x000D \ncc   gmcgibbon  x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The special case happens when through association has a custom scope x000D \nthat is applied to the source association when loading  x000D \nIn this case  the source association would need to be reset after x000D \nmain association is loaded  See tests  x000D \n x000D \nAfter this patch  the source association reset code will consistently relay on the scope passed to the preloader as being a reason for extra SQL conditions and reset to be done  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n  Rails Version    6 0 0 beta1 x000D \n x000D \nHaving the following  database yml   x000D \n x000D \n   yml x000D \ndefault   default x000D \n  adapter  postgresql x000D \n  encoding  unicode x000D \n  pool      ENV fetch  RAILS MAX THREADS     5      x000D \n x000D \ndevelopment  x000D \n       default x000D \n  database  project development x000D \n x000D \ntest  x000D \n       default x000D \n  database  project test x000D \n x000D \nproduction  x000D \n       default x000D \n  database  project production x000D \n    x000D \n x000D \nI got the following exceptions running tests  after calling  maintain test schema     x000D \n x000D \n    x000D \nPG  ConnectionBad  x000D \n    FATAL   database  project development  does not exist x000D \n     bundle gems pg 1 1 4 lib pg rb 56 in  initialize  x000D \n    x000D \n x000D \nAfter some investigation I found that DB configurations all had   test   as  env name   x000D \nAnd specifically for  test  env  x000D \n x000D \n    x000D \n 6  pry main   resolver   ActiveRecord  ConnectionAdapters  ConnectionSpecification  Resolver new ActiveRecord  Base configurations  x000D \n     ActiveRecord  ConnectionAdapters  ConnectionSpecification  Resolver 0x000055b27e697590 x000D \n  configurations  x000D \n    ActiveRecord  DatabaseConfigurations 0x000055b27e5febb0 x000D \n    configurations  x000D \n       ActiveRecord  DatabaseConfigurations  UrlConfig 0x000055b27bec2830 x000D \n       config  x000D \n         adapter    postgresql   x000D \n         encoding    unicode   x000D \n         pool   5  x000D \n         database    project development   x000D \n         username    postgres   x000D \n         password    postgres   x000D \n 7  pry main   resolver resolve  test   test  x000D \n     adapter    postgresql   x000D \n  encoding    unicode   x000D \n  pool   5  x000D \n  database    project development   x000D \n  username    postgres   x000D \n  password    postgres   x000D \n  port   5432  x000D \n  host    postgres   x000D \n  name    test   x000D \n    x000D \n x000D \nThis is a regression comparing to 5 2  x000D \n x000D \n  NOTE    For those struggling with this problem  it could be fixed by adding  url  x000D \n x000D \n   yml x000D \ndefault   default x000D \n  url      ENV  DATABASE URL      x000D \n   ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Is this a terrible idea  I want the transition from configuration hashes to objects to be smooth and given that  SamSaffron had to ask me what to do I think I could make this more app and gem friendly  If anyone has an idea of how to do this in another way let me know  x000D \n x000D \ncc   tenderlove  matthewd  rafaelfranca  x000D \n x000D \n    x000D \n x000D \nIn chat Sam Saffron asked how to use the setter now that configurations x000D \nis no longer a hash when you need to do AR  Base configurations  test     x000D \n x000D \nNow you can just do  ActiveRecord  Base configurations     the hash    but x000D \nI realized it throws an error and is unintuitive  To aid in the x000D \ntransition from hashes to object I ve added the setter to the x000D \nmethod missing call so that it can be used and throws a warning instead x000D \nof just erroring with undefined method  x000D \n x000D \nWhile in here I also improved the deprecation warning  x000D \n x000D \nGetters message  x000D \n x000D \n    x000D \nDEPRECATION WARNING   ActiveRecord  Base configurations  no longer x000D \nreturns a hash  Methods that act on the hash like  values  are x000D \ndeprecated and will be removed in Rails 6 1  Use the  configs for  x000D \nmethod to collect and iterate over the database configurations  x000D \n    x000D \n x000D \nSetter message  x000D \n x000D \n    x000D \nDEPRECATION WARNING  Setting  ActiveRecord  Base configurations  with x000D \n       is deprecated  Use  ActiveRecord  Base configurations   directly x000D \nto set the configurations instead  x000D \n   ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "when doing a default install 1 4 0 gets installed  causing the error  can t activate sqlite3     1 3 6   already activated sqlite3 1 4 0  x000D \nsee https   stackoverflow com questions 54527277 cant activate sqlite3 1 3 6 already activated sqlite3 1 4 0 x000D \nthis small fix changes the dependency to the latest version of sqlite3 ruby which includes  various bugfixes  x000D \n x000D \n    Summary x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \n    Other Information x000D \n x000D \n     If there s anything else that s important and relevant to your pull x000D \nrequest  mention that information here  This could include x000D \nbenchmarks  or other information  x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  https   github com rails rails pull 35127 introduced a new change to x000D \n  not make a query when the counter cache value of the parent is 0  x000D \n x000D \n  The implementation was overwriting the  find target   method from x000D \n   AR  Associaton   x000D \n  This had the side effect of making  Topic comments destroy all  to x000D \n  not destroy anything in some circumstances  You can find a reproduction script  x000D \n  in this comment  https   github com rails rails pull 35127 issuecomment 462876180 x000D \n x000D \n  The bug was mainly happening during test because the counter cache x000D \n  value isn t set when fixtures load  x000D \n x000D \n  This PR removes the  find target   overwritten method in x000D \n  HasManyAssociation and inline the condition inside methods that x000D \n  needs it  such as  size  and  load target  which is used by  to ary   x000D \n x000D \n  Even though the root cause of the problem was mainly happening in x000D \n  test  I decided to opt out the  destroy all  from checking the x000D \n  counter cache value has this could cause potential issue if fonr any x000D \n  reason the counter cacher get desync  x000D \n x000D \ncc   rafaelfranca  byroot  x000D \n x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Motivation  x000D \n    Currently we have 2 separate monkey patches in place for tracking x000D \n  enqueued time for 2 separate workers  It seems that activejob could be x000D \n  a source of truth for how long an item has been enqueued so that we can x000D \n  easily use it for consistent monitoring across workers apps to ensure x000D \n  that jobs are running at an acceptable speed  x000D \n x000D \nChanges  x000D \n    Add an enqueued at attribute and serialization tooling  x000D \n    Add a method to get how long a job has been enqueued for  x000D \n    Add a logging item to show how long a job was enqueued prior to the x000D \n  perform method firing  x000D \n x000D \n    Summary x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \n    Other Information x000D \n x000D \n     If there s anything else that s important and relevant to your pull x000D \nrequest  mention that information here  This could include x000D \nbenchmarks  or other information  x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "On CI we ve seen a few test failures when the DatabaseSelectorTest runs x000D \nbefore the ConnectionHandlersMultiDbTest  This is because it s creating x000D \n2 handlers but not properly tearing them down  x000D \n x000D \nExample failure  x000D \n x000D \n    x000D \nFailure  x000D \nActiveRecord  ConnectionAdapters  ConnectionHandlersMultiDbTest test connects to with single configuration x000D \n  rails activerecord test cases connection adapters connection handlers multi db test rb 241   x000D \nExpected  1 x000D \n  Actual  2 x000D \n    x000D \n x000D \ncc   matthewd for bringing this to my attention ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   Introduction x000D \n x000D \nThis patch integrates  Zeitwerk  https   github com fxn zeitwerk  and makes it the default autoloader for Rails 6 applications  x000D \n x000D \n  You can now robustly use constant paths in class and module definitions  x000D \n x000D \n     ruby x000D \n    Matches Ruby semantics now  x000D \n  class Admin  UsersController   ApplicationController x000D \n          x000D \n  end x000D \n      x000D \n x000D \n  All known use cases of  require dependency  have been eliminated  x000D \n x000D \n  There is a  centralized solution  https   github com fxn zeitwerk preloading  to orderly preload STI hierarchies  x000D \n x000D \n  Edge cases in which the autoloaded constant depended on execution order are gone  x000D \n x000D \n  Autoloading is thread safe in general  not just for the currently supported use cases with explicit locks like web requests  For example  you can now write multi threaded scripts to be run by  bin rails runner  and they will autoload just fine  x000D \n x000D \n   Principles behind the integration x000D \n x000D \nThe classic autoloader has been there since  the beginning  https   github com rails rails blob v1 0 0 activesupport lib active support dependencies rb   and while it has  no public interface  https   api rubyonrails org classes ActiveSupport Dependencies html  except for locking mechanisms  extra care has been taken  x000D \n x000D \n  The implementation of  ActiveSupport  Dependencies  and its test suite are untouched  x000D \n x000D \n  Easy way to opt out  just throw  config autoloader    classic  into  config application rb   It has to go after  config load defaults 6 0  if you have that line  x000D \n x000D \n  Integration has been clearly delineated so that falling back to the classic autoloader is safe  x000D \n x000D \n  It is a key observation that  Kernel autoload  is invoked by the constant resolution algorithm as classes and modules are checked  In particular  it takes precedence over  const missing  and thus we can leave  const missing  there to have a cleaner patch  it won t do anything anyway for autoloadable constants  x000D \n x000D \n  Seamless take over in new apps from an end user point of view  x000D \n x000D \nI envision a gradual evolution of this feature  Rails 6 is just a first step  x000D \n x000D \n   Patch overview x000D \n x000D \n  There is a new config attribute  config autoloader  that can be   classic  or   zeitwerk   This is   zeitwerk  for new apps on CRuby  and   classic  for apps loading the defaults of previous versions or run by other interpreters  x000D \n x000D \n  If Zeitwerk is enabled  there are two globally accessible autoloaders   Rails autoloader   and  Rails once autoloader   The former is the main one  The latter  in addition to not win a Pulitzer for naming  is responsible for  autoload once paths   and importantly also for autoload paths that come from gems  Both autoloaders autoload  but only  Rails autoloader  is invoked by Rails to reload  so if you have engines like Action Storage or Devise installed as gems  they won t be reloaded anymore  x000D \n x000D \n  In particular  if you throw  Rails autoloader logger   method  puts   to  config application rb  you ll see Zeitwerk doing its thing  x000D \n x000D \n  Selected private API is emulated  but it is  not  the goal of the integration to fully replicate the private API  If there is code that depends on the inner workings excessively  I prefer that people switch to   classic  until it gets updated  to clutter the integration to support any imaginable abuse of the private API  This autoloading is an inflection point and it is our opportunity to start afresh  x000D \n x000D \n  Furthermore  the private API called downwards from  const missing  should not be called anymore because  as explained above   Kernel autoload  runs first  There might be some edge case around autoloading errors  not worth it  keep it simple  x000D \n x000D \n  People should not write  require dependency  anymore  and upgrades should delete the calls  If you detect a use case for it please tell us  x000D \n x000D \n  Eager loading calls  Zeitwerk eager load all   Therefore  it will eager load not only the Rails application  but also all gems managed by Zeitwerk  x000D \n x000D \n  Engines can technically use Zeitwerk by clearing their autoload paths  but better don t and leave the choice to the parent application  x000D \n x000D \n  Autoload paths are frozen in the finisher  The public API for them is  config autoload paths   but if existing code is pushing to  ActiveSupport  Dependencies autoload paths   it has to do so before the finisher  Action Mailer has been updated to do that  x000D \n x000D \n  Applications using  bootsnap  have to upgrade to 1 4 0  x000D \n x000D \n   Backwards incompatibility x000D \n x000D \nIn   classic  mode there is no change  If Zeitwerk is enabled  x000D \n x000D \n  For files below the standard  concerns  directories  like  app models concerns     Concerns  cannot be a namespace  That is   app models concerns geolocatable rb  is expected to define  Geolocatable   not  Concerns  Geolocatable   x000D \n x000D \n  A file should define only one constant in its namespace  but can define inner ones   So  if  app models foo rb  defines  Foo  and also  Bar    Bar  won t be reloaded cleanly  You can have inner constants  so  Foo  may define an auxiliary internal class  Foo  Woo   x000D \n x000D \n  A file that defines a class or module that acts as a namespace  needs to define the class or module using the  class  and  module  keywords  For example  if you have  app models hotel rb  defining the  Hotel  class  and  app models hotel pricing rb  defining a mixin for hotels  the  Hotel  class must be defined with  class   you cannot do  Hotel   Class new          or  Hotel   Struct new          or anything like that  Those idioms are fine in classes and modules that do not act as namespaces  x000D \n x000D \n  Once the application has booted  autoload paths are frozen  x000D \n x000D \n  Autoload paths that do not exist on boot are ignored  x000D \n x000D \n   Future work x000D \n x000D \nI believe the patch is in good shape for a beta  For final  I ll work on documentation  In particular  the  Autoloading and Reloading Constants  https   guides rubyonrails org autoloading and reloading constants html  needs a complete revision  x000D \n x000D \nThere are some  if RUBY ENGINE     ruby   and  config autoloader     zeitwerk  here and there  I ll try to encapsulate them somehow  x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Turn lookup context in to a stack  push and pop if formats change x000D \n x000D \nThis commit keeps a stack of lookup contexts on the ActionView  Base instance   If a format is passed to render  we instantiate a new lookup context and push it on the stack  that way any child calls to  render  will use the same format information as the parent   This also isolates  sibling  calls to render  multiple calls to render in the same template   x000D \n     x000D \nFixes  35222  34138 x000D \n x000D \n  This is just a WIP   This commit means that the LookupContext no longer has a 1 1 relationship with the instance of ActionView  Base that evaluates the templates   I suspect this breaks template caching and I want to verify before merging    x000D \n x000D \nNevermind  it doesn t touch the template cache   Template caches are stored on  Resolvers  which wrap paths that we search   Those are stored on the controller instance  so they should live for the life of the process ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It seems unstable only an isolated test  I investigate and fix with PR ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Currently  we only document the use case for ActiveJob s  queue as  block x000D \narguments in  Rails Guides  1   It seems necessary to document them in the API x000D \ndocs as well considering how useful and powerful this option is  x000D \n x000D \n 1   https   edgeguides rubyonrails org active job basics html queues", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Other Information x000D \nBenchmark Report  x000D \n    x000D \nn   1000000 x000D \nBenchmark bm do  x  x000D \n  x report  old      for i in 1  n  namespaces to paths namespaces   end  x000D \n  x report  new      for i in 1  n  namespaces to paths v1 namespaces   end  x000D \nend x000D \n x000D \n        user       system    total        real x000D \nold   13 200857   0 081975  13 282832   13 288438   x000D \nnew    9 347042   0 024553   9 371595    9 376679   x000D \n x000D \n   Benchmark  Tms 0x00007fe6a5838fb8  cstime 0 0   cutime 0 0   label  old      real 13 288438000017777   stime 0 08197500000000013   total 13 282832000000006   utime 13 200857000000006   x000D \n   Benchmark  Tms 0x00007fe6a36b8e10  cstime 0 0   cutime 0 0   label  new      real 9 376678999979049   stime 0 024553000000000047   total 9 371595000000003   utime 9 347042000000002   x000D \n    x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This reverts commit 38f9e41f2c4b64377ffb036c53873dbfb51546cf  reversing x000D \nchanges made to 5e493c3b839f10d639f5cce1f1b9ff9292702821  x000D \n x000D \nReason  The ajv 6 9 1 was released that fixes issue  x000D \n x000D \nI want to check this fix in CI    x000D \n", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nCorrects a small error in the documentation regarding usage of JavaScript in Rails \ud83d\ude04 x000D \n x000D \n1  Swaps the   users  jQuery selector to correct position  x000D \n2  Prevents ERB from escaping the HTML using the  raw  helper ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nWhen using a custom delivery job in combination with a parameterized mail it did not use the specified custom mailer job but always Parameterized  DeliveryJob  x000D \n x000D \n    Other Information x000D \n x000D \nThis is already fixed in master  This is basically just a cherry pick of  gmcgibbon work into 5 2 stable  However  the original work also contained some more code so cherry picking did not work so I added  gmcgibbon as co author of the commit to give him the proper credit  I hope this is fine  x000D \n x000D \ncc  sikachu", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I implemented Foreign key create in  create table  for SQLite3 at x000D \n 24743  This follows  24743 to implement  add foreign key  and x000D \n remove foreign key   x000D \nUnfortunately SQLite3 has one limitation that x000D \n PRAGMA foreign key list table name   doesn t have constraint name  x000D \nSo we couldn t implement find remove foreign key by name for now  x000D \n x000D \nFixes  35207  x000D \nCloses  31343 ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Because ajv 6 9 0 does not work with webpack  x000D \nRef  https   github com epoberezkin ajv issues 941 x000D \n x000D \n x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nBump the migration examples in the Edge Guide from  5 0  to  6 0   This will make it align with current migration generator behavior ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \n    Other Information x000D \n x000D \n     If there s anything else that s important and relevant to your pull x000D \nrequest  mention that information here  This could include x000D \nbenchmarks  or other information  x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I applied the following migration  x000D \n x000D \n   ruby x000D \ncreate table  users  do  t  x000D \n  t string  name x000D \n  t timestamp x000D \nend x000D \n    x000D \n x000D \nIt contains a typo   timestamp  instead of  timestamps   x000D \nBut this is appliable without errors  x000D \n x000D \n x000D \nShort hands for TableDefinition columns is callable without column names  x000D \nIt do nothing when called without column names  x000D \nThis change suggests raise ArgumentError in such cases ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is an alternative to https   github com rails rails pull 35188 x000D \n x000D \nI like this PR better because the diff is smaller and easier to understand  IMO   I ve verified it has the same impact as https   github com rails rails pull 35188 and it has the same performance characteristics as master ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nA change to  config for  in https   github com rails rails pull 33815 and https   github com rails rails pull 33882 has altered the behaviour of the returned object in a breaking manner   x000D \n x000D \nBefore that change  nested hashes returned from  config for  could be accessed using non symbol keys  After the change  all keys are recursively symbolized so non symbol access fails to read the expected values  x000D \n x000D \nThis is a breaking change for any app that might be relying on the nested hashes returned from  config for  calls  and thus should be deprecated before being removed from the codebase  x000D \n x000D \n    Solution x000D \n x000D \nThis PR introduces a temporary  NonSymbolAccessDeprecatedHash  class that recursively wraps any nested hashes inside the  OrderedOptions  object returned from  config for  and issues a deprecation notice when a non symbol based access is performed  x000D \n x000D \nThis way  any apps that are still relying on the ability to access these nested hashes using non symbol keys will be able to observe the deprecation notices and have time to implement fixes before non symbol access is removed for good  x000D \n x000D \n    Other Information x000D \n x000D \nNote that the top level access to the  OrderedOptions  object returned from  config for  has indifferent access semantics due to the nature of how  OrderedOptions  works  This functionality is the same for  Rails config  and  secrets   so is not changed nor is any deprecation notice issued  x000D \n x000D \nThe deprecation is only for nested keys below the top level  since that is the functionality that is potentially broken ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nCloses https   github com rails rails issues 34829  x000D \n x000D \nThe docs for  ActiveRecord  Associations  CollectionProxy  describe  ActiveRecord  Associations  Association   I ve moved them to  Association  and rewrote  CollectionProxy  s docs to be more applicable to what the class actually does   x000D \n x000D \nAlso  x000D \n x000D \n  I stopped referencing ivars in the documentation  I m referencing public readers instead as to not focus on the implementation  x000D \n  I ve reworded target to be described as a result set instead of simply an object  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The  distinct  affects  reduces  rows of the result  so it is important x000D \npart when both  distinct  and  offset  are given  x000D \n x000D \nReplacing SELECT clause to  1 AS one  and removing  distinct  and x000D \n order  is just optimization for the  exists    we should not apply the x000D \noptimization for that case  x000D \n x000D \nFixes  35191 ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThe Changelog links for Rails 6 are broken in guides   https   edgeguides rubyonrails org 6 0 release notes html x000D \n x000D \nThis fix bumps the branch from 6 0 stable to master  where they are available  x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \n    Other Information x000D \n x000D \n     If there s anything else that s important and relevant to your pull x000D \nrequest  mention that information here  This could include x000D \nbenchmarks  or other information  x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This commit fixes the memory leak in dev   I m not super pleased with the commit right now and I want to refactor it some  but I also want to make sure it s public   Specifically I dislike the part where I added another layer to the cache   I think I can improve that part  x000D \n x000D \nI think the source of the leak is that the digest cache was combined with the template object cache   This commit splits the caches  then combines them behind the  DetailsKey  interface   Resolvers have to ask the details key thing for their cache   That gave the LookupContext an implicit dependency on  DetailsKey   which is why I had to change the  fallbacks  method to do a check at runtime  otherwise the circular dependency ruins file loading   x000D \n x000D \nI think separating the caches will fix the tests here  https   github com rails rails pull 35160 x000D \n x000D \nHere s a graph of the heap live slots on master versus this branch  x000D \n x000D \n img width  490  alt  erb eval 2019 02 07 15 48 58  src  https   user images githubusercontent com 3124 52450461 eb9d0f80 2aef 11e9 9446 263ee5bfb539 png   x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I missed these in  35182 \ud83d\ude33  this finishes the rename of  config active record database operations  to  database resolver context   x000D \n x000D \nI also updated the message from the previous config s introduction in the CHANGELOG  which I hope is okay since a release hasn t been cut with that config yet  x000D \n x000D \ncc  eileencodes ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " relation create  populates scope attributes to new record by  scoping   x000D \nit is necessary to assign the scope attributes to the record and to find x000D \nSTI subclass from the scope attributes  x000D \n x000D \nBut the effect of  scoping  is class global  it was caused undesired x000D \nbehavior that pollute all class level querying methods in initialization x000D \nblock and callbacks   after initialize    before validation   x000D \n before save   etc   which are user provided code  x000D \n x000D \nTo avoid the leaking scope issue  restore the original current scope x000D \nbefore initialization block and callbacks are invoked  x000D \n x000D \nFixes  9894  x000D \nFixes  17577  x000D \nCloses  31526 ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Some tests are running yarn install during the test  x000D \n x000D \nThe directory used for the isolation test is not subject to yarn workspace  and it occurs because the required package is not installed  x000D \nIn order to avoid this  I fixed all necessary packages to be installed before run test and use a symlink to  node modules   x000D \n x000D \nThis is a bit complicated  as  yarn install  needs to be run in a specific directory before running the test  x000D \nHowever  running  yarn install  every time run the test is expensive when testing locally and should be avoided ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This makes two naming changes to improve the API of the new database selector  x000D \n x000D \n1  Rename the  resolver  ivar attribute of  DatabaseSelector  Resolver  to  operations  x000D \n x000D \n Operations  is what we call that object class elsewhere  in  DatabaseSelector  and in the config   x000D \n x000D \n2  Rename  Session build  to  Session call  x000D \n x000D \nThis better matches  DatabaseSelector  Resolver   which is built with   call   and also means we can configure a proc as the operations  x000D \n x000D \nFor example this could be useful to swap between different operations classes for different types of requests  which I think is a pretty common use case   x000D \n x000D \n    ruby x000D \nconfig active record database operations      request  do x000D \n  if request path start with    api    x000D \n    MyCustomApiOperations call request  x000D \n  else x000D \n    ActiveRecord  Middleware  DatabaseSelector  Session call request  x000D \n  end x000D \nend x000D \n    x000D \n x000D \ncc  eileencodes  tenderlove ", "annotation": {"notes": "", "label": ["offer"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nAllow skipping incineration of processed emails  This would be useful when applications wants to keep the original email around and manage its incineration ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\u2026iation is changed x000D \n x000D \nThis is the regression fix after 19c80718afea8cf8f56ee68fcfbe325d54c02906  x000D \nThe  target empty   condition was removed   https   github com rails rails commit 19c80718afea8cf8f56ee68fcfbe325d54c02906 diff 20f545c453ee24942b6f7ae565e9e369L215 x000D \nwhich introduced the bug  x000D \n x000D \n    ruby x000D \ncompany client ids size      3 x000D \ncompany clients build x000D \ncompany clients size      4 x000D \n    x000D \n x000D \nI am not sure why it was removed as no existing test fails when I put it back  x000D \n x000D \ncc  kamipo  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThe  Grape API framework  https   github com ruby grape grape  regularly writes tests like  spec grape api spec rb  https   github com ruby grape grape blob master spec grape api spec rb   x000D \n x000D \nWhen attempting to write a test in a Rails environment similar to the following  x000D \n    x000D \ndescribe Grape  Api  type   request do x000D \n  let  app    x000D \n    Class new Grape  API  do x000D \n      get  test  do x000D \n          foo   bar    x000D \n      end x000D \n    end x000D \n    x000D \n x000D \n  it  200s  do x000D \n    get  test  x000D \n  end x000D \nend x000D \n    x000D \n x000D \nThe following exception is thrown  x000D \n x000D \n    x000D \nNoMethodError  undefined method  url helpers  for   Array 0x00007fb4e4bc4c88  x000D \n   x000D \n0      lib action dispatch testing integration rb 330 in  block in create session  x000D \n1      lib action dispatch testing integration rb 326 in  initialize  x000D \n2      lib action dispatch testing integration rb 326 in  new  x000D \n3      lib action dispatch testing integration rb 326 in  create session  x000D \n4      lib action dispatch testing integration rb 316 in  integration session  x000D \n5      lib action dispatch testing integration rb 348 in  block  2 levels  in  module Runner   x000D \n    x000D \n x000D \nThis change explicitly ensures that  app routes  is an  ActionDispatch  Routing  RouteSet  instance and enables writing tests with a non ActionDispatch routed app  like Grape  API  in a Rails environment ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nDocument of  CollectionProxy concat  and  CollectionAssociation concat  says  Returns  self  so method calls may be chained    but it was returning an array of arguments  x000D \nThis PR fixes the former to match the documented behavior  same as  Array concat  s behavior   and remove that part of doc from the latter ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nWas reading through the documentation for the  ScreenshotHelper  class  Noticed that the terminal artifact format reference URL  https   buildkite github io terminal inline images   is out of date and leads to a 404 page  Updated it to the new URL https   buildkite github io terminal to html inline images  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This commit speeds up rendering partials by caching the variable name x000D \ncalculation on the template   The variable name is based on the  virtual x000D \npath  used for looking up the template   The same virtual path x000D \ninformation lives on the template  so we can just ask the cached x000D \ntemplate object for the variable  x000D \n x000D \nThis benchmark takes a couple files  so I ll cat them below  x000D \n x000D \n    x000D \n aaron TC   g r actionview  speed up partials    cat render benchmark rb x000D \nrequire  benchmark ips  x000D \nrequire  action view  x000D \nrequire  action pack  x000D \nrequire  action controller  x000D \n x000D \nclass TestController   ActionController  Base x000D \nend x000D \n x000D \nTestController view paths    File expand path  test benchmarks    x000D \ncontroller view   TestController new view context x000D \n x000D \nresult   Benchmark ips do  x  x000D \n  x report  render   do x000D \n    controller view render  many partials   x000D \n  end x000D \nend x000D \n aaron TC   g r actionview  speed up partials    cat test benchmarks test  many partials html erb x000D \nLooping  x000D \n ul  x000D \n   100 times do  i     x000D \n      render partial   list item   locals    i  i      x000D \n   end    x000D \n  ul  x000D \n aaron TC   g r actionview  speed up partials    cat test benchmarks test  list item html erb x000D \n li Number      i     li  x000D \n    x000D \n x000D \nBenchmark results  master   x000D \n x000D \n    x000D \n aaron TC   g r actionview  master    be ruby render benchmark rb x000D \nWarming up                                        x000D \n              render    41 000  i 100ms x000D \nCalculating                                       x000D \n              render    424 269   \u00b1 3 5   i s        2 132k in   5 031455s x000D \n    x000D \n x000D \nBenchmark results  this branch   x000D \n x000D \n    x000D \n aaron TC   g r actionview  speed up partials    be ruby render benchmark rb x000D \nWarming up                                        x000D \n              render    50 000  i 100ms x000D \nCalculating                                       x000D \n              render    521 862   \u00b1 3 8   i s        2 650k in   5 085885s x000D \n    x000D \n x000D \nCaching is enabled  so this improvement should impact production apps   Also  the logic in the partial renderer is pretty complex  we may not even need that value to be calculated  x000D \n", "annotation": {"notes": "", "label": ["offer"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n Dir tmpdir  require  tmpdir  to be loaded  We do not require it explicitly  x000D \n x000D \nI ve been caught in the situation when it might be not loaded in the app  https   travis ci org palkan anyway config jobs 489168942   x000D \n x000D \nThat also leads to the exception in the  ensure  block  thus making debugging not so simple \ud83d\ude42 Fixed that one too  x000D \n x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " sqlite3  gem was the last one within popular db drivers which version was not fixed in generated Gemfile  This change will prevent issues like  35161 in the future  x000D \n x000D \nPrevious changes   35154  35157", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " x000D \n    Summary x000D \n x000D \n  Use   z  instead of     x000D \n  Use character class instead of alternation x000D \n  Optimize alternation order x000D \n x000D \n    Other Information x000D \n x000D \n  z  is slower than      but it is better meaning  x000D \n x000D \nBenchmark result is rough  because many other processes run together on my laptop machine  x000D \nIt seems         b   is always faster than    b        and    b         x000D \n x000D \n    x000D \n  cat   bench yml x000D \nprelude    x000D \n  keys    w not match html foo html bar html  x000D \nbenchmark  x000D \n  or d    x000D \n    keys each do  key  x000D \n         b      html   match  key to s  x000D \n    end x000D \n  or z    x000D \n    keys each do  key  x000D \n         b      html z  match  key to s  x000D \n    end x000D \n  char class z    x000D \n    keys each do  key  x000D \n         b      html z  match  key to s  x000D \n    end x000D \n  char class d    x000D \n    keys each do  key  x000D \n         b      html   match  key to s  x000D \n    end x000D \n  char class 2 z    x000D \n    keys each do  key  x000D \n              b html z  match  key to s  x000D \n    end x000D \n  char class 2 d    x000D \n    keys each do  key  x000D \n              b html   match  key to s  x000D \n    end x000D \n  benchmark driver   bench yml x000D \nWarming up                                        x000D \n                or d     1 529M i s        1 625M times in 1 062262s  653 90ns i  x000D \n                or z     1 539M i s        1 602M times in 1 040741s  649 73ns i  x000D \n        char class z     1 526M i s        1 532M times in 1 003995s  655 51ns i  x000D \n        char class d     1 583M i s        1 631M times in 1 030430s  631 63ns i  x000D \n      char class 2 z     1 599M i s        1 639M times in 1 025019s  625 33ns i  x000D \n      char class 2 d     1 662M i s        1 754M times in 1 055074s  601 55ns i  x000D \nCalculating                                       x000D \n                or d     1 612M i s        4 588M times in 2 846843s  620 52ns i  x000D \n                or z     1 510M i s        4 617M times in 3 058135s  662 32ns i  x000D \n        char class z     1 551M i s        4 577M times in 2 951371s  644 88ns i  x000D \n        char class d     1 631M i s        4 750M times in 2 912536s  613 21ns i  x000D \n      char class 2 z     1 581M i s        4 797M times in 3 033929s  632 41ns i  x000D \n      char class 2 d     1 693M i s        4 987M times in 2 945495s  590 62ns i  x000D \n x000D \nComparison  x000D \n      char class 2 d    1693131 7 i s  x000D \n        char class d    1630754 8 i s   1 04x  slower x000D \n                or d    1611560 2 i s   1 05x  slower x000D \n      char class 2 z    1581264 1 i s   1 07x  slower x000D \n        char class z    1550673 2 i s   1 09x  slower x000D \n                or z    1509845 1 i s   1 12x  slower x000D \n  benchmark driver   bench yml x000D \nWarming up                                        x000D \n                or d     1 534M i s        1 538M times in 1 002284s  651 69ns i  x000D \n                or z     1 495M i s        1 529M times in 1 023011s  668 98ns i  x000D \n        char class z     1 535M i s        1 601M times in 1 043070s  651 49ns i  x000D \n        char class d     1 577M i s        1 620M times in 1 027315s  634 30ns i  x000D \n      char class 2 z     1 569M i s        1 581M times in 1 007555s  637 46ns i  x000D \n      char class 2 d     1 645M i s        1 738M times in 1 056730s  608 01ns i  x000D \nCalculating                                       x000D \n                or d     1 578M i s        4 603M times in 2 917980s  633 88ns i  x000D \n                or z     1 549M i s        4 484M times in 2 895346s  645 64ns i  x000D \n        char class z     1 551M i s        4 605M times in 2 968680s  644 69ns i  x000D \n        char class d     1 634M i s        4 730M times in 2 894710s  612 03ns i  x000D \n      char class 2 z     1 602M i s        4 706M times in 2 937455s  624 17ns i  x000D \n      char class 2 d     1 648M i s        4 934M times in 2 993592s  606 71ns i  x000D \n x000D \nComparison  x000D \n      char class 2 d    1648224 3 i s  x000D \n        char class d    1633896 7 i s   1 01x  slower x000D \n      char class 2 z    1602125 6 i s   1 03x  slower x000D \n                or d    1577594 4 i s   1 04x  slower x000D \n        char class z    1551127 1 i s   1 06x  slower x000D \n                or z    1548849 8 i s   1 06x  slower x000D \n    x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is a followup to https   github com rails rails pull 33615 x000D \n x000D \nThe removal of array indexes being done only for i18n situation makes for fairly inconsistent results as you can see in the two tests I modified  x000D \n x000D \n Larochelle in your initial patch the   remove     d      was also before the  if   but then you moved it inside for https   github com rails rails pull 33615  is there something I m missing  x000D \n x000D \n rafaelfranca  Edouard chin  Larochelle  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThere is a bug that incorrectly matches routes of mounted applications  e g  sprockets rails  with a shorthand path  e g    assets    x000D \n x000D \nThe queries to http   localhost 3000 assets foo png and to http   localhost 3000 assetsfoo png are equivalent currently  x000D \n x000D \n The ActionDispatch  Journey  Path  Pattern  UnanchoredRegexp  generates regex that allows the route matcher to consider   assets foo png  and   assetsfoo png  as same paths  x000D \n x000D \nThis PR fixes the issue by adding a word boundary to the generated regex  x000D \n x000D \n    Other Information x000D \nWay to reproduce the bug  x000D \n1  Run commands x000D \n   shell x000D \n  rails new test app x000D \n  cd test app x000D \n  touch app assets images foo png x000D \n    bin rails server x000D \n    x000D \n2  Accessing http   localhost 3000 assetsfoo png returns 200 with the correct image file", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "My over all goal is to make  ActionView  Template  a read only data structure  and this PR is one step along the way   This PR does two things  x000D \n x000D \n1  Pass locals to the template constructor   This way we don t need to call  Template locals   x000D \n2  Uses locals as part of the  details key   This way we can eliminate one layer of template caches x000D \n x000D \nThere s a couple things about this patch that I d like some feedback on   This change  x000D \n x000D \n  https   github com rails rails compare pass locals to template expand 1 diff 40f2a5bcf9edfd65a8efe42a05c53736R144 x000D \n x000D \nI had to do a  details  locals     locals sort  because we have tests that directly call  find all  on the resolver rather than going through the normal template rendering process   Do we consider the resolver to be public API   The class isn t really documented  so I would think  no    If we do consider it public  I think we should make it private  x000D \n x000D \nSecond  I changed  Template initialize  to  require that locals are passed in  https   github com rails rails blob 43f14f02c04279a44b0de2bb76071e30d435d3bb actionview lib action view template rb L139    I found the exception to be very helpful when debugging   Should we make it required   Or just default to an empty array   If we want to make it required  I ll add a deprecation warning  otherwise just default to empty array  I have no opinion about this  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Follow up for   35154  x000D \n x000D \nFor version dependent bug report templates  we still require specific sqlite3 version  \ud83e\udd37\u200d\u2642\ufe0f ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Trying to resolve https   github com rails rails issues 35155", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "sqlite3 v1 4 has been released just now  Since we don t specify  sqlite3  gem version by default in Gemfile  it ll break adapter loading   x000D \n x000D \nShould we backport it into 5 x branches  There  are no significant changes  https   github com sparklemotion sqlite3 ruby blob master CHANGELOG rdoc 140  since 1 3 13 x000D \n x000D \ncc  tenderlove ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The docs don t include a link to where this method is defined  I tested the link I put in as follows  x000D \n x000D \n    x000D \n2 2 0  001    production  inquiry production  x000D \nNoMethodError  undefined method  inquiry  for  production  String x000D \n2 2 0  002   require  active support   require  active support core ext string inquiry  x000D \n    true  x000D \n2 2 0  003    production  inquiry production  x000D \n    true  x000D \n2 2 0  004    x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Changes the Getting Started guide explanation for x000D \n ActionController  MissingExactTemplate  error  to reflect the current message  x000D \n x000D \nFollow up for  29286   35148 x000D \n x000D \n ci skip ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This commit updates the Missing Template image in the Getting Started x000D \nGuide  x000D \n x000D \nThe new image displays the current error message  Additionally  x000D \n  New image is a PNG file  whereas the current image is in fact a misnamed JPEG  x000D \n  New image is smaller  x000D \n x000D \nBefore  x000D \n  image  https   user images githubusercontent com 6261109 52210548 48de5a00 287f 11e9 9a74 546827ac9c03 png  x000D \n x000D \n    x000D \n  file   mime  b template is missing articles new png x000D \nimage jpeg  charset binary x000D \n  du  h template is missing articles new png x000D \n464K    template is missing articles new png x000D \n    x000D \n x000D \nAfter  x000D \n  template is missing articles new  https   user images githubusercontent com 6261109 52210585 68758280 287f 11e9 85e6 680e45197cdb png  x000D \n x000D \n    x000D \n  file   mime  b template is missing articles new png x000D \nimage png  charset binary x000D \n  du  h template is missing articles new png x000D \n28K     template is missing articles new png x000D \n    x000D \n x000D \n ci skip ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Refer to this closed pull request   33791   I followed  georgeclaghorn  s suggestion and finished the feature  x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Make debug exceptions works in an environment where ActiveStorage is not loaded  x000D \n x000D \nError occurred before change  x000D \n x000D \n    x000D \nError  x000D \nNameError  uninitialized constant ActionView  CompiledTemplates  ActiveStorage x000D \n    x000D \n x000D \n x000D \n x000D \n", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nRails supports two ways of defining non resourceful routes  x000D \n x000D \n    x000D \nget  post  id      posts show   x000D \nget  post  id   to   posts show   x000D \n    x000D \n x000D \nThe Rails generators and most of the documentation use Ruby 1 9 hash syntax  but the documentation has some examples which use strings as keys  This results in situations where a single hash contains a mix of two different styles  x000D \n x000D \nBy suggesting the  to   version in the docs  we can help developers to avoid this inconsistency ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Cookie doesn t expire anymore unless a flag is set  x000D \n x000D \n  There is a regression in 6 0 introduced by  32937 where cookie x000D \n  doesn t expire anymore unless the new  use cookies with metadata  x000D \n  configuration is set to  true   x000D \n x000D \n  This causes issue for app migration from 5 2 to 6 0 because the x000D \n   use cookies with metadata  flag can t be set to true until all x000D \n  servers are running on 6 0  x000D \n x000D \n  Here is a small reproduction script that you can run in the console x000D \n x000D \n     ruby x000D \n  ActionDispatch  Cookies x000D \n x000D \n  request   ActionDispatch  Request empty x000D \n  request env  action dispatch key generator     ActiveSupport  KeyGenerator new  1234567890   x000D \n  request env  action dispatch signed cookie salt      signed cookie  x000D \n  request env  action dispatch cookies rotations     ActiveSupport  Messages  RotationConfiguration new x000D \n  request env  action dispatch use authenticated cookie encryption     true x000D \n  signed cookie   request cookie jar signed x000D \n  signed cookie  foobar      value   123   expires  1 day ago   x000D \n  p signed cookie  foobar    nil on 5 2   123  on 6 0 x000D \n      x000D \n x000D \n", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This PR aims to reduce the performance impact of adding removing subscribers to  ActiveSupport  Notifications   x000D \n x000D \n The docs say   https   api rubyonrails org classes ActiveSupport Notifications html module ActiveSupport  Notifications label Temporary Subscriptions  x000D \n x000D \n  WARNING  The instrumentation framework is designed for long running subscribers  use this feature sparingly because it wipes some internal caches and that has a negative impact on performance  x000D \n x000D \nUnfortunately not everyone heeds that advice \ud83d\ude05  If nothing else I suspect this is pretty common to do in tests  x000D \n x000D \n    x000D \n x000D \nThe first commit hashes any subscribers with a string pattern by their pattern  which allows a fast lookup of all matching string patterns in  listeners for   This avoids testing equality against all N patterns  Regex patterns are still stored in a single array and each need to be checked  x000D \n x000D \nI wrote a benchmark to test having 500 String pattern listeners  and sending an event of each type  x000D \n x000D \n    ruby x000D \nrequire  benchmark ips  x000D \nrequire  active support all  x000D \n x000D \nnotifier   ActiveSupport  Notifications  Fanout new x000D \n x000D \npatterns   0 upto 500  map    n   pattern  n     x000D \npatterns each do  name  x000D \n  notifier subscribe name          x000D \nend x000D \n x000D \nBenchmark ips do  x  x000D \n  x report  cached   do  x  x000D \n    patterns each do  name  x000D \n      notifier publish name  x000D \n    end x000D \n  end x000D \n x000D \n  x report  uncached   do  x  x000D \n      subscribe and unsubscribe to clear cache x000D \n    subscriber   notifier subscribe    x000D \n    notifier unsubscribe subscriber  x000D \n x000D \n    patterns each do  name  x000D \n      notifier publish name  x000D \n    end x000D \n  end x000D \nend x000D \n    x000D \n x000D \n  Before   x000D \n    x000D \n              cached      1 527M  \u00b111 1   i s        7 493M in   4 994136s x000D \n            uncached    267 741   \u00b1 3 7   i s        1 340k in   5 014361s x000D \n    x000D \n x000D \n  After   x000D \n    x000D \n              cached      1 539M  \u00b111 6   i s        7 534M in   4 994576s x000D \n            uncached    259 025k  \u00b111 8   i s        1 260M in   4 997521s x000D \n    x000D \n x000D \nIn this case it s in the order of  1000x faster  x000D \n x000D \n    x000D \n x000D \nThe second commit avoids clearing the full cache when adding removing a subscriber with a String pattern  since we need only clear the one key in the cache that will affect  x000D \n x000D \ncc  tenderlove  eileencodes ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "So in GH we could just change our handler names but that s going to be a lot of work and this would reduce churn  Thoughts  x000D \n x000D \n    x000D \n x000D \nWhen I wrote the  connected to  and  connects to  API s I wrote them x000D \nwith the idea in mind that it didn t really matter what the x000D \nhandlers roles were called as long as those connecting to the roles knew x000D \nwhich one wrote and which one read  x000D \n x000D \nWith the introduction of the middleware Rails begins to assume it s x000D \n writing  and  reading  and there s no room for other roles  At GitHub x000D \nwe ve been using this method for a long time so we have a ton of legacy x000D \ncode that uses different handler names  default  and  readonly   We x000D \ncould rename all our code but I think this is better for a few reasons  x000D \n x000D \n  Legacy apps that have been using multiple databases for a long time x000D \n  can have an easier time switching  x000D \n  If we later find this to cause more issues than it s worth we can x000D \n  easily deprecate  x000D \n  We won t force old apps to rewrite the resolver middleware just to use x000D \n  a different handler  x000D \n x000D \nAdding the writing role reading role required that I move the code that x000D \ncreates the first handler for writing to the railtie  If I didn t move x000D \nthis the core class would assign the handler before I was able to assign x000D \na new one in my configuration and I d end up with 3 handlers instead of x000D \n2  x000D \n x000D \ncc   tenderlove  matthewd  rafaelfranca", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Right now we only have one option that s supported  the delay  However I x000D \ncan see us supporting other options in the future  x000D \n x000D \nThis PR refactors the options to get passed into the resolver so whether x000D \nyou re using middleware or using the config options you can pass options x000D \nto the resolver  This will also make it easy to add new options in the x000D \nfuture  x000D \n x000D \ncc   tenderlove  jhawthorn", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nNow the code iterates multiple times in two ways without need  x000D \n x000D \n  First  it goes through the records object multiple times doing x000D \npartitions  In case we have hundreds of thousands of records  like in x000D \nthe benchmark I ve left below  that means that we have to go x000D \nthrough all of them multiple times doing it very slowly  That depends on x000D \nthe distribution of course but in PG if you have a huge number of tables x000D \nthe majority of the data are going to be  array in  or composite x000D \nelements x000D \n  Second  once we have processed the records  we iterate over all of them x000D \nagain to register every record  x000D \n x000D \nIt s tested in rails 4 2 10   ruby 2 2   our production environment  but the code is the same in Rails 6 0 AFAIK x000D \n x000D \n    Other Information x000D \n x000D \nRelated to  19578 x000D \n x000D \nHere are the benchmarks where you can see a slight improvement for x000D \nhundreds of records  the normal case  but if you have a huge number of x000D \ntypes you improve a lot the performance x000D \n x000D \n    x000D \n   Current method benchmark x000D \nRecords count  207 x000D \n  0 000000   0 010000   0 010000    0 002049  x000D \n  0 000000   0 000000   0 000000    0 002214  x000D \n  0 000000   0 000000   0 000000    0 001979  x000D \n  0 010000   0 000000   0 010000    0 002516  x000D \n  0 000000   0 000000   0 000000    0 002142  x000D \nRecords count  142191 x000D \n  2 050000   0 180000   2 230000    2 224884  x000D \n  2 090000   0 090000   2 180000    2 176774  x000D \n  2 050000   0 080000   2 130000    2 124951  x000D \n  2 140000   0 100000   2 240000    2 249662  x000D \n  2 040000   0 100000   2 140000    2 157886  x000D \n    x000D \n    x000D \n   Suggested method benchmark x000D \nRecords count  207 x000D \n  0 010000   0 000000   0 010000    0 001821  x000D \n  0 010000   0 000000   0 010000    0 001999  x000D \n  0 000000   0 000000   0 000000    0 001983  x000D \n  0 000000   0 000000   0 000000    0 001906  x000D \n  0 000000   0 000000   0 000000    0 001829  x000D \nRecords count  142191 x000D \n  1 050000   0 000000   1 050000    1 056097  x000D \n  1 040000   0 000000   1 040000    1 034397  x000D \n  1 020000   0 010000   1 030000    1 018424  x000D \n  1 100000   0 000000   1 100000    1 103647  x000D \n  1 030000   0 000000   1 030000    1 032034  x000D \n    x000D \n x000D \nI ve also checked the object s allocation and they remain practically the same  x000D \n x000D \n     Current method objects allocation x000D \n x000D \n    x000D \n                                                                              sourcefile                                                                                sourceline                             class                             count x000D \n                                                                                                                                                                                                                                                       x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          39  String                                                       3270399 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          39  Hash                                                         142191 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          39  Array                                                            1 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type hash lookup type map rb                                         5  Proc                                                            49 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type hash lookup type map rb                                         5  RubyVM  Env                                                     49 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          45  Array                                                            3 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          44  Array                                                            3 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          43  Array                                                            3 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          42  Array                                                            3 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          41  Array                                                            3 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          40  Array                                                            3 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type type map rb                                                    30  Proc                                                            11 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type type map rb                                                    30  RubyVM  Env                                                     11 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          99  ActiveRecord  ConnectionAdapters  PostgreSQL  OID  Vector        2 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type integer rb                                                      8  Range                                                            3 x000D \n ruby 2 2 0 gems state machines 0 5 0 lib state machines assertions rb                                                     15  Array                                                            9 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type value rb                                                        9  Array                                                           18 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters abstract adapter rb                            441  Array                                                            6 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters abstract adapter rb                            441  ActiveRecord  ConnectionAdapters  PostgreSQL  OID  Integer       3 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters abstract adapter rb                            441  Hash                                                             6 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type hash lookup type map rb                                        19  Array                                                           22 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type type map rb                                                    19  Array                                                           40 x000D \n ruby 2 2 0 gems thread safe 0 3 6 lib thread safe non concurrent cache backend rb                                         16  String                                                          10 x000D \n ruby 2 2 0 gems thread safe 0 3 6 lib thread safe non concurrent cache backend rb                                          8  Hash                                                            20 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type type map rb                                                     9  ThreadSafe  Cache                                               20 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type type map rb                                                    14  Proc                                                            20 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type type map rb                                                    14  RubyVM  Env                                                     20 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type type map rb                                                    14  Array                                                           40 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type hash lookup type map rb                                         5  Array                                                           20 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          98  Array                                                            2 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb         119  Proc                                                           112 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb         119  RubyVM  Env                                                    112 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          90  Array                                                            8 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type value rb                                                        8  Hash                                                             2 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type type map rb                                                    60  ActiveRecord  Type  Value                                        1 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters abstract adapter rb                            441  ActiveRecord  Type  String                                       3 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql adapter rb                          487  ActiveRecord  ConnectionAdapters  PostgreSQL  OID  DateTime      1 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql adapter rb                          487  Hash                                                             1 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          74  ActiveRecord  ConnectionAdapters  PostgreSQL  OID  Enum          1 x000D \n    x000D \n x000D \n     Suggested method objects allocation x000D \n x000D \n    x000D \n                                                                              sourcefile                                                                                sourceline                             class                             count x000D \n                                                                                                                                                                                                                                                       x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          19  String                                                       3270399 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          19  Hash                                                         142191 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type type map rb                                                    30  Proc                                                            11 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type type map rb                                                    30  RubyVM  Env                                                     11 x000D \n ruby 2 2 0 gems state machines 0 5 0 lib state machines assertions rb                                                     15  Array                                                           10 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type value rb                                                        9  Array                                                           20 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql adapter rb                          487  ActiveRecord  ConnectionAdapters  PostgreSQL  OID  DateTime      1 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql adapter rb                          487  Hash                                                             1 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type type map rb                                                    19  Array                                                           48 x000D \n ruby 2 2 0 gems thread safe 0 3 6 lib thread safe non concurrent cache backend rb                                         16  String                                                          12 x000D \n ruby 2 2 0 gems thread safe 0 3 6 lib thread safe non concurrent cache backend rb                                          8  Hash                                                            24 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type type map rb                                                     9  ThreadSafe  Cache                                               24 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type type map rb                                                    14  Proc                                                            24 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type type map rb                                                    14  RubyVM  Env                                                     24 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type type map rb                                                    14  Array                                                           48 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type hash lookup type map rb                                         5  Array                                                           24 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type hash lookup type map rb                                        19  Array                                                           30 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type hash lookup type map rb                                         5  Proc                                                            49 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type hash lookup type map rb                                         5  RubyVM  Env                                                     49 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          99  ActiveRecord  ConnectionAdapters  PostgreSQL  OID  Vector        2 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type integer rb                                                      8  Range                                                            5 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters abstract adapter rb                            441  Array                                                           10 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters abstract adapter rb                            441  ActiveRecord  ConnectionAdapters  PostgreSQL  OID  Integer       5 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters abstract adapter rb                            441  Hash                                                             8 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          98  Array                                                            2 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb         119  Proc                                                           122 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb         119  RubyVM  Env                                                    122 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          90  Array                                                            8 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters abstract adapter rb                            441  ActiveRecord  Type  String                                       3 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record type value rb                                                        8  Hash                                                             1 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          74  ActiveRecord  ConnectionAdapters  PostgreSQL  OID  Enum          1 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb          79  ActiveRecord  ConnectionAdapters  PostgreSQL  OID  Array         2 x000D \n ruby 2 2 0 gems activerecord 4 2 10 lib active record connection adapters postgresql oid type map initializer rb         120  Array                                                            4 x000D \n x000D \n   ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Suppose we have a  has many  association with a counter cache  x000D \nIn this case  when counter cache is zero  it is often used to avoid certain SQL queries  x000D \n x000D \nExample  x000D \n x000D \n    ruby x000D \nReward belogns to  coupon  counter cache  true x000D \ncoupon   Coupon create  x000D \ncoupon rewards count      0   required x000D \n x000D \ncoupon rewards size      0 no query x000D \ncoupon rewards to a         no query x000D \n    x000D \n x000D \nHowever  this behavior doesn t happen consistently  If we change the method call order the number of SQL queries is different  x000D \n x000D \n    ruby x000D \ncoupon rewards to a         with query x000D \ncoupon rewards size         no query x000D \n    x000D \n x000D \nIt happens because   size  makes use of the counter cache and assumes the association is loaded when it is zero  I think that this behavior should be consistent with direct association loading  x000D \n x000D \nA lot of additional tests were added to ensure no regression occur  x000D \n x000D \ncc  kamipo ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Every template that specifies a  virtual path  loses the template source x000D \nwhen the template gets compiled  x000D \n x000D \n  https   github com rails rails blob eda0f574f129fcd5ad1fc58b55cb6d1db71ea95c actionview lib action view template rb L275 x000D \n x000D \nThe  refresh  method seems to think that the source code for a template x000D \ncan be recovered if there is a virtual path  x000D \n x000D \n  https   github com rails rails blob eda0f574f129fcd5ad1fc58b55cb6d1db71ea95c actionview lib action view template rb L171 L188 x000D \n x000D \nEvery call site that allocates a template object  and  provides a x000D \n virtual path  reads the template contents from the filesystem  x000D \n x000D \n  https   github com rails rails blob eda0f574f129fcd5ad1fc58b55cb6d1db71ea95c actionview lib action view template resolver rb L229 L231 x000D \n x000D \nTemplates that are inline or literals don t provide a  virtual path   x000D \n x000D \n  https   github com rails rails blob eda0f574f129fcd5ad1fc58b55cb6d1db71ea95c actionview lib action view renderer template renderer rb L34 x000D \n x000D \nThis commit introduces a  FileTemplate  type that subclasses  Template   x000D \nThe  FileTemplate  keeps a reference to the filename  and reads the x000D \nsource from the filesystem   This effectively makes the template source x000D \nimmutable  x000D \n x000D \nOther classes depended on the source to be mutated while being compiled  x000D \nso this commit also introduces a temporary way to pass the mutated x000D \nsource to the ERB  or whatever  compiler   See  LegacyTemplate   x000D \n x000D \nI think we should consider it an error to provide a virtual path on a x000D \nnon file type template an non file templates can t recover their source  x000D \nHere is an example  x000D \n x000D \n  https   github com rails rails blob eda0f574f129fcd5ad1fc58b55cb6d1db71ea95c actionview lib action view testing resolvers rb L53 x000D \n x000D \nThis provides a  virtual path  so the source code  a string literal  is x000D \nthrown away after compilation   Clearly we can t recover that string  so x000D \nI think this should be an error ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nChange new Rails applications to use the ActiveJob   test  queue adapter in the test environment  Right now the test adapter is used for test cases that inherit from ActiveJob  TestCase  but other test cases  models  controllers  currently use the default   async  adapter  x000D \n x000D \nThe current behavior is surprising to me  if a model or controller test generates a job  that job will be performed immediately and concurrently with test execution in a different thread  with no visibility into success  failure  or side effects generated by the job  i e  database writes   With this change  if a test case does want enqueued jobs to execute  it can use  perform enqueued jobs  to run them on the main test thread in a deterministic manner  x000D \n x000D \nUsing the   test  adapter in the test environment  in a documented and overridable way  is consistent with other Rails defaults like the ActiveStorage test service and the ActionMailer test delivery method ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I deprecated two unused attr writers  visitor  and  indexes  at 8056fe0 x000D \nand f4bc364 conservatively  since those are accidentaly exposed in the x000D \ndocs  x000D \n x000D \nhttps   api rubyonrails org v5 2 classes ActiveRecord ConnectionAdapters AbstractAdapter html x000D \nhttps   api rubyonrails org v5 2 classes ActiveRecord ConnectionAdapters TableDefinition html x000D \n x000D \nBut I ve found that  view renderer  attr writer is removed without x000D \ndeprecation at  35093  that is also exposed in the doc  x000D \n x000D \nhttps   api rubyonrails org v5 2 classes ActionView Base html x000D \n x000D \nI d like to also remove the deprecated attr writers since I think that x000D \nremoving  visitor  and  indexes  attr writers is as safe as removing x000D \n view renderer  attr writer ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " 33729 affected the behavior of the has many through record creation  x000D \n x000D \nSince  33729  the intermediate reflection of simple has many through x000D \nassociation has  inverse of  to the association  it causes extra through x000D \nrecord creation  the extra through record required valid before the x000D \nassociation record is saved  x000D \n x000D \nhttps   github com rails rails blob 23125378673bcc606b274027666a126573e136f8 activerecord lib active record associations has many through association rb L95 L102 x000D \n x000D \nI think that  33729 need to more work to care about has many through x000D \nassociation  that PR should be reverted to not break existing apps ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "In case you re creating custom callbacks in your ActiveRecord with conditions app will raise if conditions are not met  x000D \n x000D \n    x000D \nNoMethodError  undefined method  empty   for nil NilClass x000D \nfrom      active support callbacks rb 97 in  run callbacks  x000D \n    x000D \n x000D \nExample  x000D \n x000D \n    x000D \nclass User   ApplicationRecord x000D \n  define model callbacks  custom test x000D \n   x000D \n  after custom test  custom callback  if       false   x000D \n x000D \n  def custom test x000D \n    run callbacks  custom test do x000D \n      puts  testing  x000D \n    end x000D \n  end x000D \nend x000D \n x000D \nUser new test      NoMethodError  undefined method  empty   for nil NilClass x000D \n    x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "While reading the documentation for  35073 found a typo   x000D \n inherts      inherits ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Follow up to  35073 x000D \n x000D \nWe need to update using the timestamp from the end of the request  not the start  For example  if a request spends 5  seconds writing  we still want to wait another 5 seconds for replication lag  x000D \n x000D \nSince we now run the update after we yield  we need to use ensure to make sure we update the timestamp even if there is an exception  x000D \n x000D \ncc  eileencodes  tenderlove ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We sometimes display simple examples of additional parameters that can be x000D \nsupplied to table wise methods like these and I found it particularly difficult x000D \nto figure out which options  t foreign key  accepts without drilling very deep x000D \ninto the specific SchemaStatements docs  x000D \n x000D \nSince it s relatively common to create foreign keys with custom column names or x000D \nprimary keys  it seems like this should help quite a few people  x000D \n x000D \nI don t love the new description   x000D \n  Adds a foreign key from the receiver to the supplied table name  x000D \n x000D \nBut I think it s a bit less ambiguous about what the first parameter is supposed to point to  since the first parameter to  add foreign key  is implied as  t   the receiver  here ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This PR includes  x000D \n1  numericalty typo fix  x000D \n2  Renamed variable  microsec  to  microsecond  and  microsec part  to  microsecond part   x000D \n3  changed  nonnegative  to  non negative ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Previously if the  url  key in a config hash was nil we d ignore the x000D \nconfiguration as invalid  This can happen when you re relying on a x000D \n DATABASE URL  in the env and that is not set in the environment  x000D \n x000D \n    x000D \nproduction  x000D \n       default x000D \n  url  ENV  DATABASE URL   x000D \n    x000D \n x000D \nThis PR fixes that case by checking if there is a  url  key in the x000D \nconfig instead of checking if the  url  is not nil in the config  x000D \n x000D \nIn addition to changing the conditional we then need to build a url hash x000D \nto merge with the original hash in the  UrlConfig  object  x000D \n x000D \nFixes  35091 x000D \n x000D \ncc   gmcgibbon  msdundar this should fix the issue you opened ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Remove  fragment cache key  helper declaration  x000D \n  It was removed in e70d3df7c9b05c129b0fdcca57f66eca316c5cfc x000D \n x000D \n  Remove  by private lifo   x000D \n  It is unused since a7becf147afc85c354e5cfa519911a948d25fc4d x000D \n", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " x000D \n x000D \n    Summary x000D \n x000D \nThis pull request addresses  test belongs to does not use order by  failure due to checking order by for metadata query  x000D \n x000D \n   ruby x000D \nirb   BelongsToAssociationsTest 0x000055a210688d48   006 0  ActiveRecord  SQLCounter log all 1  x000D \n    SELECT a attname  format type a atttypid  a atttypmod   n       pg get expr d adbin  d adrelid   a attnotnull  a atttypid  a atttypmod  n       c collname  col description a attrelid  a attnum  AS comment n  FROM pg attribute a n  LEFT JOIN pg attrdef d ON a attrelid   d adrelid AND a attnum   d adnum n  LEFT JOIN pg type t ON a atttypid   t oid n  LEFT JOIN pg collation c ON a attcollation   c oid AND a attcollation    t typcollation n WHERE a attrelid      companies     regclass n   AND a attnum   0 AND NOT a attisdropped n ORDER BY a attnum n  x000D \n    x000D \n x000D \nFixes  35098 x000D \n x000D \n    Steps to reproduce x000D \n x000D \n   ruby x000D \n  cd activerecord x000D \n  ARCONN postgresql bin test  test cases inheritance test rb   test cases arel insert manager test rb   test cases arel collectors substitute bind collector test rb   test cases arel collectors composite test rb   test cases arel collectors bind test rb   test cases arel collectors sql string test rb   test cases arel attributes attribute test rb   test cases arel attributes math test rb   test cases arel visitors dispatch contamination test rb   test cases arel visitors mysql test rb   test cases arel visitors oracle test rb   test cases arel visitors ibm db test rb   test cases arel visitors postgres test rb   test cases arel visitors informix test rb   test cases arel visitors oracle12 test rb   test cases arel visitors to sql test rb   test cases arel visitors sqlite test rb   test cases arel visitors mssql test rb   test cases arel visitors depth first test rb   test cases arel visitors dot test rb   test cases arel crud test rb   test cases arel table test rb   test cases arel delete manager test rb   test cases arel nodes bin test rb   test cases arel nodes false test rb   test cases arel nodes named function test rb   test cases arel nodes insert statement test rb   test cases arel nodes update statement test rb   test cases arel nodes equality test rb   test cases arel nodes not test rb   test cases arel nodes grouping test rb   test cases arel nodes true test rb   test cases arel nodes select core test rb   test cases arel nodes descending test rb   test cases arel nodes over test rb   test cases arel nodes unary operation test rb   test cases arel nodes distinct test rb   test cases arel nodes ascending test rb   test cases arel nodes node test rb   test cases arel nodes as test rb   test cases arel nodes delete statement test rb   test cases arel nodes binary test rb   test cases arel nodes bind param test rb   test cases arel nodes extract test rb   test cases arel nodes sum test rb   test cases arel nodes or test rb   test cases arel nodes infix operation test rb   test cases arel nodes count test rb   test cases arel nodes table alias test rb   test cases arel nodes window test rb   test cases arel nodes sql literal test rb   test cases arel nodes case test rb   test cases arel nodes casted test rb   test cases arel nodes and test rb   test cases arel nodes select statement test rb   test cases arel select manager test rb   test cases arel attributes test rb   test cases arel nodes test rb   test cases arel update manager test rb   test cases arel factory methods test rb   test cases column alias test rb   test cases tasks postgresql rake test rb   test cases tasks database tasks test rb   test cases tasks mysql rake test rb   test cases tasks sqlite rake test rb   test cases autosave association test rb   test cases primary keys test rb   test cases defaults test rb   test cases habtm destroy order test rb   test cases touch later test rb   test cases connection adapters type lookup test rb   test cases connection adapters connection handlers multi db test rb   test cases connection adapters merge and resolve default url config test rb   test cases connection adapters schema cache test rb   test cases connection adapters connection handler test rb   test cases connection adapters mysql type lookup test rb   test cases connection adapters connection specification test rb   test cases connection adapters adapter leasing test rb   test cases multiple db test rb   test cases relation test rb   test cases unsafe raw sql test rb   test cases view test rb   test cases reaper test rb   test cases explain subscriber test rb   test cases multiparameter attributes test rb   test cases dup test rb   test cases reserved word test rb   test cases i18n test rb   test cases comment test rb   test cases fixtures test rb   test cases fixture set file test rb   test cases connection pool test rb   test cases secure token test rb   test cases transactions test rb   test cases core test rb   test cases legacy configurations test rb   test cases schema loading test rb   test cases log subscriber test rb   test cases pooled connections test rb   test cases validations association validation test rb   test cases validations uniqueness validation test rb   test cases validations i18n generate message validation test rb   test cases validations length validation test rb   test cases validations absence validation test rb   test cases validations presence validation test rb   test cases validations i18n validation test rb   test cases nested attributes test rb   test cases custom locking test rb   test cases numeric data test rb   test cases attribute methods test rb   test cases forbidden attributes protection test rb   test cases migration test rb   test cases transaction isolation test rb   test cases attribute decorators test rb   test cases cache key test rb   test cases sanitize test rb   test cases bind parameter test rb   test cases null relation test rb   test cases unconnected test rb   test cases column definition test rb   test cases modules test rb   test cases serialization test rb   test cases reload models test rb   test cases finder test rb   test cases suppressor test rb   test cases json attribute test rb   test cases explain test rb   test cases mixin test rb   test cases boolean test rb   test cases test fixtures test rb   test cases relation delete all test rb   test cases relation update all test rb   test cases relation where chain test rb   test cases relation where test rb   test cases relation predicate builder test rb   test cases relation merging test rb   test cases relation record fetch warning test rb   test cases relation delegation test rb   test cases relation mutation test rb   test cases relation where clause test rb   test cases relation or test rb   test cases relation select test rb   test cases query cache test rb   test cases filter attributes test rb   test cases schema dumper test rb   test cases dirty test rb   test cases clone test rb   test cases scoping relation scoping test rb   test cases scoping named scoping test rb   test cases scoping default scoping test rb   test cases callbacks test rb   test cases connection management test rb   test cases coders json test rb   test cases coders yaml column test rb   test cases binary test rb   test cases transaction callbacks test rb   test cases hot compatibility test rb   test cases time precision test rb   test cases type integer test rb   test cases type unsigned integer test rb   test cases type string test rb   test cases type date time test rb   test cases type type map test rb   test cases type time test rb   test cases type adapter specific registry test rb   test cases persistence test rb   test cases yaml serialization test rb   test cases date time test rb   test cases invalid connection test rb   test cases nested attributes with callbacks test rb   test cases locking test rb   test cases associations test rb   test cases counter cache test rb   test cases connection specification resolver test rb   test cases readonly test rb   test cases quoting test rb   test cases reflection test rb   test cases migrator test rb   test cases batches test rb   test cases serialized attribute test rb   test cases timestamp test rb   test cases instrumentation test rb   test cases result test rb   test cases disconnected test rb   test cases attribute methods read test rb   test cases aggregations test rb   test cases json serialization test rb   test cases statement invalid test rb   test cases finder respond to test rb   test cases relations test rb   test cases errors test rb   test cases store test rb   test cases base test rb   test cases integration test rb   test cases types test rb   test cases attributes test rb   test cases date test rb   test cases type test rb   test cases date time precision test rb   test cases adapter test rb   test cases database statements test rb   test cases associations eager load includes full sti class test rb   test cases associations eager singularization test rb   test cases associations eager load nested include test rb   test cases associations has many associations test rb   test cases associations extension test rb   test cases associations has one through associations test rb   test cases associations left outer join association test rb   test cases associations join model test rb   test cases associations cascaded eager loading test rb   test cases associations required test rb   test cases associations nested through associations test rb   test cases associations has many through associations test rb   test cases associations has one associations test rb   test cases associations callbacks test rb   test cases associations inverse associations test rb   test cases associations eager test rb   test cases associations bidirectional destroy dependencies test rb   test cases associations belongs to associations test rb   test cases associations inner join association test rb   test cases associations has and belongs to many associations test rb   test cases calculations test rb   test cases invertible migration test rb   test cases statement cache test rb   test cases ar schema test rb   test cases enum test rb   test cases collection cache key test rb   test cases validations test rb   test cases migration references index test rb   test cases migration column positioning test rb   test cases migration rename table test rb   test cases migration foreign key test rb   test cases migration change schema test rb   test cases migration create join table test rb   test cases migration change table test rb   test cases migration references foreign key test rb   test cases migration pending migrations test rb   test cases migration column attributes test rb   test cases migration logger test rb   test cases migration compatibility test rb   test cases migration columns test rb   test cases migration index test rb   test cases migration command recorder test rb   test cases migration references statements test rb   test cases adapters postgresql money test rb   test cases adapters postgresql foreign table test rb   test cases adapters postgresql integer test rb   test cases adapters postgresql infinity test rb   test cases adapters postgresql partitions test rb   test cases adapters postgresql schema authorization test rb   test cases adapters postgresql type lookup test rb   test cases adapters postgresql numbers test rb   test cases adapters postgresql schema test rb   test cases adapters postgresql rename table test rb   test cases adapters postgresql citext test rb   test cases adapters postgresql serial test rb   test cases adapters postgresql datatype test rb   test cases adapters postgresql case insensitive test rb   test cases adapters postgresql domain test rb   test cases adapters postgresql ltree test rb   test cases adapters postgresql active schema test rb   test cases adapters postgresql change schema test rb   test cases adapters postgresql connection test rb   test cases adapters postgresql transaction test rb   test cases adapters postgresql collation test rb   test cases adapters postgresql utils test rb   test cases adapters postgresql uuid test rb   test cases adapters postgresql prepared statements disabled test rb   test cases adapters postgresql composite test rb   test cases adapters postgresql explain test rb   test cases adapters postgresql hstore test rb   test cases adapters postgresql geometric test rb   test cases adapters postgresql statement pool test rb   test cases adapters postgresql create unlogged tables test rb   test cases adapters postgresql json test rb   test cases adapters postgresql network test rb   test cases adapters postgresql quoting test rb   test cases adapters postgresql xml test rb   test cases adapters postgresql timestamp test rb   test cases adapters postgresql referential integrity test rb   test cases adapters postgresql range test rb   test cases adapters postgresql array test rb   test cases adapters postgresql full text test rb   test cases adapters postgresql bit string test rb   test cases adapters postgresql date test rb   test cases adapters postgresql cidr test rb   test cases adapters postgresql postgresql adapter test rb   test cases adapters postgresql bytea test rb   test cases adapters postgresql extension migration test rb   test cases adapters postgresql enum test rb    seed 31342  n       ModulesTest    test find account and include company test module table name prefix with global prefix  EagerLoadPolyAssocsTest    test include query  BelongsToAssociationsTest    test belongs to does not use order by      x000D \n    x000D \n x000D \n    Actual behavior x000D \n   ruby x000D \nUsing postgresql x000D \nRun options    seed 31342  n       ModulesTest    test find account and include company test module table name prefix with global prefix  EagerLoadPolyAssocsTest    test include query  BelongsToAssociationsTest    test belongs to does not use order by      x000D \n x000D \n  Running  x000D \n x000D \n   F x000D \n x000D \nFailure  x000D \nBelongsToAssociationsTest test belongs to does not use order by   home yahonda git rails activerecord test cases associations belongs to associations test rb 66   x000D \nORDER BY was used in the query x000D \n x000D \n x000D \nbin test test cases associations belongs to associations test rb 62 x000D \n x000D \n x000D \n x000D \nFinished in 1 373576s  2 9121 runs s  151 4296 assertions s  x000D \n4 runs  208 assertions  1 failures  0 errors  0 skips x000D \n  x000D \n    x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nAllows extra client configuration options to be specified for the azure storage service in active support  x000D \n x000D \n    Other Information x000D \n x000D \nWhen developing with azure  we often want to run a local storage emulator   maybe using microsoft s emulator or even the open source  azurite    However  unlike in the S3 service   there is no way to pass extra options in the storage yml file  x000D \n x000D \nThis change allows any extra options accepted by the azure storage gem  such as storage blob host and use path style uri which are useful for this setup  to also be accepted by active storage and passed on to the underlying azure storage client x000D \n x000D \nSee my blog post for more details http   www garytaylor blog index php 2019 01 30 rails active storage and azure beyond config  x000D \n", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis PR adds   action cable connection  and   action cable channel  load hooks  x000D \n x000D \nYou can use them to extend  ActionCable  Connection  Base  and  ActionCable  Channel  Base  functionality  x000D \n x000D \n   ruby x000D \nActiveSupport on load  action cable channel  do x000D \n    do something in the context of ActionCable  Channel  Base x000D \nend x000D \n   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The AV  Base constructor was too complicated  and this commit tightens x000D \nup the parameters it will take   At runtime  AV  Base is most commonly x000D \nconstructed here  x000D \n x000D \n  https   github com rails rails blob 94d54fa4ab641a0ddeb173409cb41cc5becc02a9 actionview lib action view rendering rb L72 L74 x000D \n x000D \nThis provides an AV  Renderer instance  a hash of assignments  and a x000D \ncontroller instance   Since this is the common case for construction  we x000D \nshould remove logic from the constructor that handles other cases   This x000D \ncommit introduces special constructors for those other cases  x000D \nInterestingly  most code paths that construct AV  Base  strangely  are x000D \ntests ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sneakers 2 11 0 has a more recent Bunny dependency which squashes some x000D \nRuby 2 6 warnings tickled by ActiveJob tests ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This change ensures that all query caches are cleared across connection x000D \nhandlers and pools so that if you write on one connection the read x000D \nconnection will have the update that occurred  x000D \n x000D \ncc   kamipo as followup to your concerns in  35073 x000D \ncc   tenderlove ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "During the development of  33145  I have named a few concepts in the x000D \ncode as  whitelisted   We decided to stay away from the term and I x000D \nadjusted most of the code afterward  but here are the cases I forgot to x000D \nchange  x000D \n x000D \nI also found a case in the API guide that we could have cleaned up as x000D \nwell ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nAttempt to fix an error in production we receive the following error  x000D \n x000D \n    x000D \nBefore process action callback  verify authenticity token has not been defined  ArgumentError  x000D \n    x000D \n x000D \nThe issue happens when we attempt to skip entirely the CSRF protection  x000D \n x000D \n    x000D \nclass ActiveStorage  BaseController   ActionController  Base x000D \n x000D \n  config accessor  allow forgery protection x000D \n  self allow forgery protection   false x000D \n x000D \nend x000D \n    x000D \n x000D \nPlease let me know if there is a better way to deal with fully remote AJAX calls  x000D \n x000D \n   \u00a0Other informations x000D \n x000D \nIn fact the issue happens also in development if we set  config eager load   true  into  development rb  x000D \n", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "1   enqueing  to  enqueuing  x000D \n1    bllock with  to   block with  ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The transaction used to restore fixtures is an implementation detail x000D \nthat should be abstracted away  Idealy a test should behave the same x000D \nwether or not transactional fixtures are enabled  x000D \n x000D \nHowever since transactions have been made lazy  the fixture x000D \ntransaction started leaking into tests case  e g  consider the x000D \nfollowing  oversimplified  test  x000D \n x000D \n   ruby x000D \nclass SQLSubscriber x000D \n  attr accessor  sql x000D \n x000D \n  def initialize x000D \n     sql      x000D \n  end x000D \n x000D \n  def call    event  x000D \n    sql    event  sql  x000D \n  end x000D \nend x000D \n x000D \nsubscriber   SQLSubscriber new x000D \nActiveSupport  Notifications subscribe  sql active record   subscriber  x000D \n x000D \nUser connection execute  SELECT 1    Generic name   x000D \nassert equal   SELECT 1    subscriber sql x000D \n    x000D \n x000D \nOn Rails 6 it starts to break because the  sql  array will be    BEGIN    SELECT 1     x000D \n x000D \nSeveral things are wrong here  x000D \n x000D \n    That transaction is not generated by the tested code  so it shouldn t be visible  x000D \n    The transaction is not even closed yet  which again doesn t reflect the reality  x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " Edouard chin I wanted to get this in for Rails 6  sorry for the delay before that  but there were some changes I would like to see and you seemed to be less around lately   x000D \n x000D \nHope you don t mind I took your PR and made a couple of changes  x000D \n x000D \n1  Rebased x000D \n2  Changed s desired capabilities capabilities x000D \n3  Changed s driver options capabilities x000D \n4  Updated the docs a little x000D \n x000D \nThank you for all your work on this  I super appreciate you taking the time to improve system tests  x000D \n x000D \nUpdate of https   github com rails rails pull 32442", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " HashWithIndifferentAccess  doesn t override  assoc  which currently results in a somehow unexpected behavior  x000D \n x000D \n   ruby x000D \nhash     foo  1   with indifferent access x000D \nhash assoc  foo         foo   1  x000D \nhash assoc  foo       nil x000D \n    x000D \n x000D \nThis commit implements the method  so the above becomes  x000D \n x000D \n   ruby x000D \nhash     foo  1   with indifferent access x000D \nhash assoc  foo         foo   1  x000D \nhash assoc  foo         foo   1  x000D \n   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  ago  method isn t good syntax for human readability so takes some time to remember  x000D \nIf use   before    it improves readability like  x000D \n x000D \n   ruby x000D \ntime before 1 day x000D \n    x000D \n x000D \nbetter than x000D \n x000D \n   ruby x000D \ntime ago 1 day x000D \n    x000D \n x000D \nAnd it s also good to have a correspondence to   before   and   after   x000D \nRelated to  32185   32398 x000D \n x000D \nAfter merged  it could be used with   before     before   and   after     after   methods for calculation and comparison  That is good interface for us ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThe code snippet within the usage documentation comment used the wrong object namespace for the ActiveStorage  Analyzer  VideoAnalyzer", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is a follow up to  35074   I m trying to pull more instance variables in to local variables   I think we can extract common code between PartialRenderer and TemplateRenderer   I also think we have a CollectionRenderer that should be extracted ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I am trying to curb mutations so that we can more easily cache and understand relationships between objects in Action View   This PR eliminates a  view paths  setter on the lookup context   I think this is safe to remove because view paths should be set on the controller  and we still maintain that API ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The following PR adds behavior to Rails to allow an application to x000D \nautomatically switch it s connection from the primary to the replica  x000D \n x000D \nA request will be sent to the replica if  x000D \n x000D \n  The request is a read request   GET  or  HEAD   x000D \n  AND It s been 5 seconds since the last write to the database  because x000D \nwe don t want to send a user to a replica if the write hasn t made it x000D \nto the replica yet  x000D \n x000D \nA request will be sent to the primary if  x000D \n x000D \n  It s not a GET HEAD request  ie is a POST  PATCH  etc  x000D \n  Has been less than 5 seconds since the last write to the database x000D \n x000D \nThe implementation that decides when to switch reads  the 5 seconds  is x000D \n safe  to use in production but not recommended without adequate testing x000D \nwith your infrastructure  At GitHub in addition to the 5 seconds since x000D \nlast write we have a curcuit breaker that checks the replication delay x000D \nand will send the query to a replica before the 5 seconds has passed  x000D \nThis is specific to our application and therefore not something Rails x000D \nshould be doing for you  You ll need to test and implement more robust x000D \nhandling of when to switch based on your infrastructure  The auto x000D \nswitcher in Rails is meant to be a basic implementation   API that acts x000D \nas a guide for how to implement autoswitching  x000D \n x000D \nThe impementation here is meant to be strict enough that you know how to x000D \nimplement your own resolver and operations classes but flexible enough x000D \nthat we re not telling you how to do it  x000D \n x000D \nThe middleware is not included automatically and can be installed in x000D \nyour application with the classes you want to use for the resolver and x000D \noperations passed in  If you don t pass any classes into the middleware x000D \nthe Rails default Resolver and Session classes will be used  x000D \n x000D \nThe Resolver decides what parameters define when to x000D \nswitch  Operations sets timestamps for the Resolver to read from  For x000D \nexmaple you may want to use cookies instead of a session so you d x000D \nimplement a Resolver  Cookies class and pass that into the middleware x000D \nlike so  x000D \n x000D \n    x000D \nconfig middleware use ActiveRecord  Middleware  DatabaseSelector  x000D \nResolver  Resolver  Cookies x000D \n    x000D \n x000D \nYour classes can inherit from the existing classes and reimplement the x000D \nmethods  or implement more methods  that you need to do the switching  x000D \nYou only need to implement methods that you want to change  For example x000D \nif you wanted to set the session token for the last read from a replica x000D \nyou would reimplement the  read from replica  method in your resolver x000D \nclass and implement a method that updates a new timestamp in your x000D \noperations class  x000D \n x000D \ncc   tenderlove  rafaelfranca  matthewd  dhh", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "In MySQL  the text column size is 65 535 bytes by default  1 GiB in x000D \nPostgreSQL   It is sometimes too short when people want to use a text x000D \ncolumn  so they sometimes change the text size to mediumtext  16 MiB  or x000D \nlongtext  4 GiB  by giving the  limit  option  x000D \n x000D \nUnlike MySQL  PostgreSQL doesn t allow the  limit  option for a text x000D \ncolumn  raises ERROR  type modifier is not allowed for type  text    x000D \nSo  limit  4294967295   longtext  couldn t be used in Action Text  x000D \n x000D \nI ve allowed changing text and blob size without giving the  limit  x000D \noption  it prevents that migration failure on PostgreSQL ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The authenticity token gets logged by default  it s stored in the session so there is a chance an attacker could take advantage of this  I think it is safer to exclude it by default ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nSometimes we make a query expecting a single result  and if for whatever x000D \nreason it doesn t it s a sign of data inconsistency or code bug  x000D \n x000D \nOther data access frameworks  like the famous Hibernate  for Java   have x000D \na method that raises an error if the query returns more than one record  x000D \nHere s an example  x000D \nhttps   docs jboss org hibernate orm 3 2 api org hibernate Query html uniqueResult   x000D \n x000D \n x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \n x000D \n     If there s anything else that s important and relevant to your pull x000D \nrequest  mention that information here  This could include x000D \nbenchmarks  or other information  x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n x000D \nOnce the idea is approved  I ll add specs and documentation", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThe Action Text installations appends  require  trix    to the application js file  The problem is that there isn t a line break in the beginning of the installation output  leading to syntax errors  e g   x000D \n x000D \n    x000D \nimport    application scss require  trix   x000D \n    x000D \n x000D \nThis commit moves the line break from the end to the beginning of the output  fixing it to  x000D \n x000D \n    x000D \nimport    application scss  x000D \nrequire  trix   x000D \n    x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis PR adds a  before reset  callback in  CurrentAttributes   The existing  resets  callback runs after  reset  has been called on the instance  which means we can t use it to do work that depends on the instance values  only to reset global independent collaborators like  Time zone    x000D \n x000D \n     x000D \n x000D \nI think this might need something added to the  CHANGELOG   I ll add it if you think this  before reset  is useful and can be added to Rails  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis improves performance of timestamp conversion and avoids additional string allocations  Compatibility to older pg versions is preserved  x000D \n x000D \n    Other Information x000D \n x000D \nIt improves query times by more than  50   https   gist github com larskanis 7755170c6b880e61931a524603b7d336  if many time columns are involved   x000D \n x000D \nI didn t find a reliable trigger to change the timezone handling  local vs  utc   Therefore I added a check before each query  which I think is sub optimal  Maybe someone has a better idea  Nevertheless the speed improvement outperforms this timezone update check by far  x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I am not sure of this PR  Are these cosmetic changes ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Failing test before the  ActionText  RichText  change  x000D \n x000D \n    x000D \nError  x000D \nActionText  ModelTest test embed extraction only extracts file attachments  x000D \nArgumentError  Could not find or build blob  expected attachable  got   ActionText  Attachables  RemoteImage 0x00007fb0259fef70  url  http   example com cat jpg    content type  image    width nil   height nil  x000D \n   ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It has been moved to the a fork as part of https   github com rails rails pull 31671   x000D \nThat was since to that time a required PR was not yet merged  x000D \nNow the queue classic master branch is compatible to recent pg versions  x000D \nso that there s no need to keep using a fork  x000D \n", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "and suggest a workaround x000D \n x000D \n    Summary x000D \n x000D \nPer  35025  rails provides no guarantee that app initializers will run after gem initializers  which is unfortunate as it makes app initialization non deterministic and brittle  App init code that depends on a given gem being fully initialized and integrated into rails could suddenly break after inclusion of an unrelated gem  and even it s position in the gem file  x000D \n x000D \nSo this possibility should be documented and a workaround suggested  x000D \n", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I would like to add those tests to prevent regression ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nThis patch just fixes a small typo in the Rails Testing Guide ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "fixes  33414 x000D \ncc  SzNagyMisu x000D \n x000D \nThere are two cases where the debug view does not show the error details properly  x000D \n x000D \n   When the cause is mapped to an HTTP status code the last exception is unexpectedly uwrapped x000D \n   When the last error is thrown from a view template the debug view is not using the  lib action dispatch middleware templates rescues template error html erb  to generate the view x000D \n x000D \nBoth the cases could be fixed by not unwrapping the exception  The only case where the exception should be unwrapped is when the last error is an  ActionView  Template  Error  object  In this case the HTTP status code is determined based on the cause  x000D \n x000D \nThere are actually more wrapper exceptions that are intentionally thrown from within Rails  However  there is a consistent pattern of setting the original message and original backtrace to the wrapper exception implemented  x000D \n x000D \n     ActionController  BadRequest   https   github com rails rails blob 5f7d5995a65d97f2592213889672e9c4799556ec actionpack lib action controller metal exceptions rb L9 L10  x000D \n     ActionDispatch  Session  SessionRestoreError   https   github com rails rails blob 5f7d5995a65d97f2592213889672e9c4799556ec actionpack lib action dispatch middleware session abstract store rb L13 L16  x000D \n     ActiveJob  DeserializationError   https   github com rails rails blob 5f7d5995a65d97f2592213889672e9c4799556ec activejob lib active job arguments rb L11 L12  x000D \n     ActiveRecord   https   github com rails rails blob 5f7d5995a65d97f2592213889672e9c4799556ec activerecord lib active record connection adapters abstract adapter rb L620 L628  x000D \n x000D \nSo the debug view will not lose the information about what went wrong eariler  x000D \n x000D \n I might have missed a few more  please let me know if there s something missing  x000D \n x000D \n   Case 1  When the cause is in  rescue responses  x000D \n x000D \nGiven that you have the following in your controller  x000D \n x000D \n   ruby x000D \ndef create x000D \n   book   Book new book params  x000D \n      x000D \nrescue ActionController  ParameterMissing x000D \n  method that has typo x000D \nend x000D \n    x000D \n x000D \nThen this PR fixes the left to look like the right  x000D \n x000D \n img width  2163  alt  fixed case 1  src  https   user images githubusercontent com 386234 51716387 913d8280 200a 11e9 9748 30dc3bd58997 png   x000D \n x000D \n   Case 1  When an error is thrown from a view x000D \n x000D \nGiven that you have  x000D \n x000D \n   erb x000D \n   x000D \n  raise ActiveRecord  RecordNotFound x000D \n   x000D \n    x000D \n x000D \nThen this PR fixes the left to look like the right  x000D \n x000D \n img width  2169  alt  fixed case 2  src  https   user images githubusercontent com 386234 51717637 9a7d1e00 200f 11e9 8002 6b76e4a1bcf4 png   x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I found that In this case statement   x000D \n x000D \nhttps   github com rails rails blob 1e25dfde032172bab2b126e60fac0302025defcc actionpack test dispatch debug exceptions test rb L42 L64 x000D \n x000D \nThere are two patterns that start with the same line  x000D \n x000D \n   ruby x000D \nwhen  r  not found  x000D \n      x000D \nwhen  r  not found original exception  x000D \n      x000D \n    x000D \n x000D \nWhen a request is made to the path   not found original exception  in a test  Ruby will try to match the pattern from top to bottom  and since   r  not found   appears first and does not have     or   z   it is always routed to the unexpected route and is never routed to what it is supposed to be routed to  causing  one of the tests for DebugExceptions  https   github com rails rails blob 1e25dfde032172bab2b126e60fac0302025defcc actionpack test dispatch debug exceptions test rb L316 L322  to happen to be passing  x000D \n x000D \nAfter changing the regex expressions back to strings  I noticed that the test setup is not complete  the template object needs to be a proper template object   Once I fixed it all the tests started padding  x000D \n x000D \nI would like this to be fixed so I can add more test coverage to fix https   github com rails rails issues 33414 ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Allows aliasing  predications  ordering  and various other functions on  And  and  Case  nodes  This brings them in line with other nodes like  Binary  and  Unary   x000D \n x000D \nThis is following up on  35006  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nSince https   github com rails rails pull 30647 was merged  partial renderer does not play well with anything that is passed to  locals  which does not respond to  symbolize keys   x000D \n x000D \nBefore the PR  the  locals  option value was passed along untouched  or was substituted with an emtpy hash if it wasn t supplied  The PR added an operation to symbolize keys of the passed object which ends up making an assumption that the option value will always be a Hash  x000D \n x000D \nThere are legitimate cases  however  where a Hash like object could be supplied instead  like an  ActionController  Parameters  instance  which does not respond to  symbolize keys   x000D \n x000D \nThis PR reverts the changes made in the previous PR to restore the use of symbols as the only supported method of passing in values  x000D \n x000D \nAn extra test is included that explicitly checks the case where a Hash like object is supplied as the  locals  option ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nContent Type is provided by many callers of   upload   but the S3 service was discarding this information  This change makes it included so that it gets set on the S3 object s metadata  x000D \n x000D \n    Other Information x000D \n x000D \nOur company happens to use ActiveStorage with S3 in a slightly non standard way  which brought this issue to our attention  We use ActiveStorage to manage all of the attach detach upload download and so on  but instead of generating signed private URLS  we serve up public URLs to a CloudFront distribution backed by the same S3 bucket  For our use case in particular  it would be good to have Content Type included with the objects in S3 so that caches and browsers behave properly when they access the content ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "While working on another feature for multiple databases  auto switching  x000D \nI observed that in development the first request won t autoload the x000D \napplication record connection for the primary database and may not yet x000D \nknow about the replica connection  x000D \n x000D \nIn my test application this caused the application to thrown an error if x000D \nI tried to send the first request to the replica before the replica was x000D \nconnected  This wouldn t be an issue in production because the x000D \napplication is preloaded  x000D \n x000D \nIn order to fix this I decided to leave the original error message and x000D \ndelete the new error message  I updated the original error message to x000D \ninclude the  role  to make it a bit clearer that the connection isn t x000D \nestablished for that particular role  x000D \n x000D \nThe error now reads  x000D \n x000D \n    x000D \nNo connection pool with  primary  found for the  reading  role  x000D \n    x000D \n x000D \ncc   tenderlove  rafaelfranca  matthewd ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \n    Other Information x000D \n x000D \n     If there s anything else that s important and relevant to your pull x000D \nrequest  mention that information here  This could include x000D \nbenchmarks  or other information  x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nUse     instead of backquote  x000D \n x000D \nThere are some backquotes in Action Text document  x000D \nThis PR replace them to     to amend docs  x000D \n", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is part one for https   github com rails rails issues 35032 x000D \n x000D \nThis PR moves methods generated from ERB to a subclass of  AV  Base    I was able to verify that the  AV  Base  subclass is thrown away every time  DetailsKey  gets cleared  so I also removed the finalizer from the Template object as we don t need to remove methods anymore  x000D \n x000D \nThe good news is that the number of available methods seen from an ERB file is now constant  x000D \n x000D \n img width  398  alt  untitled 2019 01 23 16 00 57  src  https   user images githubusercontent com 3124 51645226 18fe9080 1f28 11e9 808f cd00080cac84 png   x000D \n x000D \nThe bad news is that we are still leaking memory  x000D \n x000D \n img width  421  alt  untitled 2019 01 23 16 01 41  src  https   user images githubusercontent com 3124 51645241 329fd800 1f28 11e9 943f 9905bf3b6405 png   x000D \n x000D \nThis patch doesn t fix the unbounded growth of  this cache  https   github com rails rails blob 52af51c08a48ea7c6e0df09e2470a66a3141087d actionview lib action view template resolver rb L73   so it isn t surprising that we still leak   The good news is that the leak is slower  before this patch we leak about 137 objects per request  after we leak about 111 objects per request  x000D \n x000D \nI think the next step is to move  this cache  https   github com rails rails blob 52af51c08a48ea7c6e0df09e2470a66a3141087d actionview lib action view template resolver rb L73  on to the  DetailsKey  cache  so they both get cleared at the same time  x000D \n x000D \nAfter that  we need to give  DetailsKey  a better name ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Unfortunately  the current state of docs about Worker Pool size is confusing  This configuration option is essential for any production usage  it s slightly covered in the Action Cable Overview but it s impossible to understand its importance and real usage without digging into the code   x000D \n x000D \nThe proposed changes are trying to eliminate the confusion ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nDeeply nested commands currently don t get printed properly  See https   github com rails rails pull 34832 issuecomment 456070659  This should fix that by allowing  Rails  Command  Base command root namespace  to include nested namespace segments  and not just the first one  x000D \n x000D \nI tried making it so  command root namespace  excluded the  command name  as well  but that didn t play nicely with method based command definition  eg   SecretsCommand    The regex I use in  namespaced commands  is probably not the best approach  any feedback here would be appreciated ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "If we pass the view instance around it s easier to understand the flow x000D \ncontrol  x000D \n", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Problem x000D \n x000D \nWhen building the statement for the statement cache  e g  for  find  or  find by   Active Record is passing  ActiveRecord  StatementCache  Substitute  objects into the attribute type s  cast  method   The return value for these cast calls isn t very important  but it is relying on it not raising an exception when this happens   For instance  ActiveModel  Type  Float cast value will raise an exception when it tries to call  to f  on this  ActiveRecord  StatementCache  Substitute  object   This can also be a problem for custom attribute types  x000D \n x000D \nThe included regression test shows the problem without the corresponding fix in this PR  because  NumericData find by temperature  1 5   causes the following exception to be raised x000D \n x000D \n    x000D \nActiveRecord  StatementCacheTest test statement cache with strictly cast attribute  x000D \nNoMethodError  undefined method  to f  for   ActiveRecord  StatementCache  Substitute 0x00007fcc8a2bc948  x000D \nDid you mean   to s x000D \n     Users dylansmith src rails activemodel lib active model type float rb 31 in  cast value  x000D \n     Users dylansmith src rails activemodel lib active model type value rb 38 in  cast  x000D \n     Users dylansmith src rails activemodel lib active model type helpers numeric rb 15 in  cast  x000D \n     Users dylansmith src rails activemodel lib active model attribute rb 55 in  value for database  x000D \n     Users dylansmith src rails activerecord lib active record relation query attribute rb 13 in  value for database  x000D \n     Users dylansmith src rails activerecord lib active record relation query attribute rb 35 in  unboundable   x000D \n     Users dylansmith src rails activerecord lib arel nodes bind param rb 32 in  unboundable   x000D \n     Users dylansmith src rails activerecord lib arel visitors to sql rb 820 in  unboundable   x000D \n     Users dylansmith src rails activerecord lib arel visitors to sql rb 632 in  visit Arel Nodes Equality  x000D \n    x000D \n    x000D \n x000D \n    Solution x000D \n x000D \nThe Active Model attribute type shouldn t have to deal with these  ActiveRecord  StatementCache  Substitute  objects  so I changed ActiveRecord  Relation  QueryAttribute value for database to not call  super  if it gets one of these objects   This class was already special casing these objects  since it already had a type check for them in its  nil   method ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It causes a buzzy warning during ActionCable test running", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "ActionCable was spelled AcionCable in the link to TestCase towards the bottom of the doc   Pretty straightforward ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThat main purpose of this PR is to make the following example  testable   x000D \n x000D \n   ruby x000D \nclass ChatRelayJob   ApplicationJob x000D \n  def perform later room  msg  x000D \n    ChatChannel broadcast to room  message  msg x000D \n  end x000D \nend x000D \n    x000D \n x000D \nTo test this functionality we need to know the underlying stream name x000D \n to use  assert broadcasts    which relies on  channel name   x000D \n x000D \nWe had to use the following code  x000D \n x000D \n   ruby x000D \nassert broadcasts ChatChannel broadcasting for  ChatChannel channel name  room    1  do x000D \n  ChatRelayJob perform now x000D \nend x000D \n    x000D \n x000D \nThe problem with this approach is that we use  internal  API  we shouldn t care about  channel name  prefix in our code  and how should developers know that it s even used    x000D \n x000D \nWith this commit we could re write the test as following  x000D \n x000D \n   ruby x000D \n assert broadcasts ChatChannel broadcasting for room   1  do x000D \n   ChatRelayJob perform now x000D \n end x000D \n    x000D \n x000D \nIMO  this refactoring also makes the  broadcasting for  method much easier to use  internally   since we should t think about adding a  channel name  every time we use it  like we did in  channel streams    x000D \n x000D \nThis PR also adds  Channel broadcast to   we had   steam for  but hadn t a shorter syntax for broadcasting for some reason   x000D \n x000D \n  NOTE    in   action cable testing   https   github com palkan action cable testing  we handled this differently  by adding  channel       option to assertions  but that was a temporary hack since we couldn t change the Rails API  x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "1  Replaced unused variables by      x000D \n2  Typo fixes  x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nReverts https   github com rails rails pull 34412 x000D \n x000D \nRelated to https   github com rails rails issues 35019", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis pull request addresses this failure with MySQL 8 0 14  x000D \n x000D \n   ruby x000D \n  ARCONN mysql2 bundle exec ruby  w  Itest test cases adapters mysql2 mysql2 adapter test rb  n test errors for bigint fks on integer pk table x000D \nUsing mysql2 x000D \nRun options   n test errors for bigint fks on integer pk table   seed 54672 x000D \n x000D \n  Running  x000D \n x000D \nF x000D \n x000D \nFailure  x000D \nMysql2AdapterTest test errors for bigint fks on integer pk table  test cases adapters mysql2 mysql2 adapter test rb 62   x000D \n ActiveRecord  MismatchedForeignKey  exception expected  not x000D \nClass   ActiveRecord  StatementInvalid  x000D \nMessage    Mysql2  Error  Referencing column  old car id  and referenced column  id  in foreign key constraint  fk rails 9f49f34f36  are incompatible    x000D \n   Backtrace    x000D \n home yahonda  rbenv versions 2 6 0 lib ruby gems 2 6 0 gems mysql2 0 5 2 lib mysql2 client rb 131 in   query  x000D \n home yahonda  rbenv versions 2 6 0 lib ruby gems 2 6 0 gems mysql2 0 5 2 lib mysql2 client rb 131 in  block in query  x000D \n home yahonda  rbenv versions 2 6 0 lib ruby gems 2 6 0 gems mysql2 0 5 2 lib mysql2 client rb 130 in  handle interrupt  x000D \n home yahonda  rbenv versions 2 6 0 lib ruby gems 2 6 0 gems mysql2 0 5 2 lib mysql2 client rb 130 in  query  x000D \n home yahonda git rails activerecord lib active record connection adapters abstract mysql adapter rb 181 in  block  2 levels  in execute  x000D \n home yahonda git rails activesupport lib active support dependencies interlock rb 48 in  block in permit concurrent loads  x000D \n home yahonda git rails activesupport lib active support concurrency share lock rb 187 in  yield shares  x000D \n home yahonda git rails activesupport lib active support dependencies interlock rb 47 in  permit concurrent loads  x000D \n home yahonda git rails activerecord lib active record connection adapters abstract mysql adapter rb 180 in  block in execute  x000D \n home yahonda git rails activerecord lib active record connection adapters abstract adapter rb 641 in  block  2 levels  in log  x000D \n home yahonda  rbenv versions 2 6 0 lib ruby 2 6 0 monitor rb 230 in  mon synchronize  x000D \n home yahonda git rails activerecord lib active record connection adapters abstract adapter rb 640 in  block in log  x000D \n home yahonda git rails activesupport lib active support notifications instrumenter rb 23 in  instrument  x000D \n home yahonda git rails activerecord lib active record connection adapters abstract adapter rb 631 in  log  x000D \n home yahonda git rails activerecord lib active record connection adapters abstract mysql adapter rb 179 in  execute  x000D \n home yahonda git rails activerecord lib active record connection adapters mysql database statements rb 39 in  execute  x000D \n home yahonda git rails activerecord lib active record connection adapters abstract schema statements rb 977 in  add foreign key  x000D \ntest cases adapters mysql2 mysql2 adapter test rb 64 in  block in test errors for bigint fks on integer pk table  x000D \n                x000D \n x000D \n x000D \nrails test test cases adapters mysql2 mysql2 adapter test rb 59 x000D \n x000D \n x000D \n x000D \nFinished in 0 028579s  34 9906 runs s  34 9906 assertions s  x000D \n1 runs  1 assertions  1 failures  0 errors  0 skips x000D \n  x000D \n    x000D \n x000D \n    Other Information x000D \n x000D \nhttps   dev mysql com doc relnotes mysql 8 0 en news 8 0 14 html x000D \n  Error messages relating to creating and dropping foreign keys x000D \n  were improved to be more specific and informative   Bug  28526309  Bug  92087  x000D \n x000D \nhttps   dev mysql com doc refman 8 0 en server error reference html x000D \n x000D \n  Error number  3780  Symbol  ER FK INCOMPATIBLE COLUMNS  SQLSTATE  HY000 x000D \n  Message  Referencing column   s  and referenced column   s  in foreign key constraint   s  are incompatible  x000D \n  ER FK INCOMPATIBLE COLUMNS was added in 8 0 14  x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve been working recently on some projects where the release cycles are based on  Feature flags  https   en wikipedia org wiki Feature toggle  and I was looking for a way to skip some migrations on certain environments but from what I see there is nothing in the documentation  I didn t find how to do it \ud83d\ude05    x000D \n x000D \nThe idea is to allow the users to skip migrations for specific environments or conditions  like feature flags  x000D \n x000D \n   ruby x000D \nclass AddRolesToUsers   ActiveRecord  Migration 6 0  x000D \n  skip  if Rails env production     Rails env integration  x000D \n x000D \n  def change x000D \n        x000D \n  end x000D \nend x000D \n    x000D \n x000D \n   ruby x000D \nclass AddRolesToUsers   ActiveRecord  Migration 6 0  x000D \n  skip  unless  feature enabled   role system  x000D \n x000D \n  def change x000D \n        x000D \n  end x000D \nend x000D \n    x000D \n x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fix NumericalityValidator on object responding to  to f   x000D \n x000D \n  If you had a PORO that acted like a Numeric  the validator would x000D \n  work correctly because it was previously using  Kernel Float  x000D \n  which is implicitely calling  to f  on the passed argument  x000D \n x000D \n  Since d126c0d   we are now using  BigDecimal  which does x000D \n  not implicitely call  to f  on the argument  making the validator x000D \n  fail with an underlying  TypeError  exception  x000D \n x000D \n  This patch replate the  is decimal   check with  Kernel Float   x000D \n  Using  Kernel Float  as argument for the BigDecimal call has two x000D \n  advantages  x000D \n x000D \n  1  It calls  to f  implicetely for us  x000D \n  2  It s also smart enough to detect that  Kernel Float  a    isn t a x000D \n     Numeric and will raise an error  x000D \n     We don t need the  is decimal   check thanks to that  x000D \n x000D \n x000D \nPassing  Float  DIG  as second argument to  BigDecimal  is mandatory x000D \n  because the precision can t be omitted when passing a Float  x000D \n   Float  DIG  is what is used internally by ruby when calling x000D \n   123 to d  x000D \n x000D \n  https   github com ruby ruby blob trunk ext bigdecimal lib bigdecimal util rb L47 x000D \n x000D \n  Another small issue introduced in  34693 x000D \n  would now raise a TypeError because  Regexp      will just return x000D \n  false if the passed argument isn t a string or symbol  whereas x000D \n   Regexp match   will  x000D \n x000D \n x000D \ncc  paracycle", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "When  Arel  was merged into  ActiveRecord  we lost the ability to alias case nodes  This adds it back ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Rails generates  test channels   34933  and x000D \neven allows  rails test channels    34947   x000D \n rails stats  has been providing info about  app channels   x000D \nit makes sense to add  test channels  as well  x000D \n x000D \n I ve changed the test to address the failure https   travis ci org rails rails jobs 482332741 L4925 since Rails generates  test channels  with some code  x000D \n", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We added  Action Mailbox Basics    Action Text Overview  guides  34812   34878  x000D \nI think it makes to mention about it in the changelog file   Similar to 7200ec92f8  x000D \nNote that entries retain original author since x000D \nI just moved content from readme files to the guides  x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nImproved behavior of DateTime change function  x000D \n x000D \nBefore this patch  x000D \n    x000D \ndate   DateTime new 2018  12  11  10  9  8  x000D \n     Tue  11 Dec 2018 10 09 08  0000 x000D \ndate change year  2018  x000D \n     Tue  11 Dec 2018 10 09 08  0000 x000D \ndate change year  2018  month  10  x000D \n     Thu  11 Oct 2018 10 09 08  0000 x000D \ndate change year  2018  month  10  hour  5  x000D \n     Thu  11 Oct 2018 05 00 00  0000 x000D \ndate change year  2018  month  10  hour  5  minute  4  x000D \n     Thu  11 Oct 2018 05 00 00  0000 x000D \ndate change year  2018  month  10  hour  5  minute  4  second  2  x000D \n     Thu  11 Oct 2018 05 00 00  0000 x000D \n    x000D \n x000D \nHave you noticed an unexpected behavior in this method for  minute  and  second   It does not work  and does not show an error message about invalid parameters   x000D \n x000D \nThe only way to use this method is to write   min  instead of  minute  and  sec  instead of  second   x000D \n    x000D \ndate change year  2018  month  10  hour  5  min  4  sec  2  x000D \n     Thu  11 Oct 2018 05 04 02  0000 x000D \n    x000D \n x000D \nI think this behavior should be changed to one of following  x000D \n1  Allow to pass both variants  min or minute  x000D \n2  Raise an error if user tries to use  minute  or  second  as arguments  x000D \n x000D \nI have included  1 variant in this pull request  So  it will be possible to use date change like you expect it to  Without breaking any backward compatibility  x000D \n x000D \n    x000D \ndate   DateTime new 2018  12  11  10  9  8  x000D \ndate change minute  2  second  3  x000D \n     Tue  11 Dec 2018 10 02 03  0000 x000D \ndate change min  2  sec  3  x000D \n     Tue  11 Dec 2018 10 02 03  0000 x000D \n    x000D \n x000D \n    Other Information x000D \n x000D \nTests added too ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nMistake in getting started page    params  itself is the Parameters object   to inspect it  you must not index into it x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nAvoid duplicated ruby version specification by reading it directly from the   ruby version  file  already present in the project ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\u2026lopment  x000D \n x000D \nThe message currently suggests to do this unconditionally  which would lead to suprises once the app is deployed in production  because the host whitelist wouldn t be empty anymore and thus be active ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We should whitelist subdomains of  localhost  by default  because these are safe against DNS rebinding as well  This allows developers to use domains like  api localhost  or  project1 localhost  without modifying the Rails configuration ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "When assigning a hash to a time attribute that s missing a year component  e g  a  time select  with   ignore date  set to  true   then the year defaults to 1970 instead of the expected 2000  This results in the attribute changing as a result of the save  x000D \n x000D \nBefore  x000D \n x000D \n    ruby x000D \nevent   Event new start time    4    20  5    30    x000D \nevent start time      1970 01 01 20 00 00 UTC x000D \nevent save x000D \nevent reload x000D \nevent start time      2000 01 01 20 00 00 UTC x000D \n    x000D \n x000D \nAfter  x000D \n    ruby x000D \nevent   Event new start time    4    20  5    30    x000D \nevent start time      2000 01 01 20 00 00 UTC x000D \nevent save x000D \nevent reload x000D \nevent start time      2000 01 01 20 00 00 UTC x000D \n   ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since we use  workspaces  https   yarnpkg com lang en docs workspaces    yarn install  from the root should install all the javascript dependencies  x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixed the following  x000D \n x000D \n1  Visit   rails conductor action mailbox inbound emails new  x000D \n2  Fill  Body  and  Attachments  x000D \n3  New incoming email does not contain  Body  x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixed errors after  34412  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nRuboCop 0 63 0 has been released  x000D \nhttps   github com rubocop hq rubocop releases tag v0 63 0 x000D \n x000D \nAnd rubocop 0 63 channel is available in Code Climate  x000D \nhttps   github com codeclimate codeclimate releases tag v0 83 0 x000D \n x000D \nCurrently  RuboCop version specified for Gemfile lock  0 61  and Code Climate  0 60  are different  x000D \n x000D \n  https   github com rails rails blob v6 0 0 beta1 Gemfile lock L407 x000D \n  https   github com rails rails blob v6 0 0 beta1  codeclimate yml L26 x000D \n x000D \nThis PR matches these versions to 0 63  x000D \n x000D \n", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "In the case of generator   RAILS ENV  is interpreted as an argument as it\u3000is  Avoid this because it will result unintended by the user  x000D \n x000D \nFixes  34979  x000D \n x000D \n    x000D \n x000D \nBy the way  I think that this is a problem that does not occur if env is specified before the command   x000D \nI did not understand why env was last specified it seems that was due to the first commit d57b19380eaad8bda63743107f085e72935343b9   so this time I leave it as it is  x000D \n", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nUpdates the DOM ID sanitizer for form input values so as to not cause potential duplicate values when using float values on a collection  x000D \n x000D \nFor example  x000D \n   ruby x000D \ncollection check boxes  user   name   1 0  10    to s   to s x000D \n    x000D \n x000D \nReturns  x000D \n   html x000D \n input type  hidden  name  user name     value       x000D \n input type  checkbox  value  1 0  name  user name     id  user name 10     x000D \n label for  user name 10  1 0  label  x000D \n input type  checkbox  value  10  name  user name     id  user name 10     x000D \n label for  user name 10  10  label  x000D \n    x000D \n x000D \nWith this change  x000D \n   html x000D \n input type  hidden  name  user name     value       x000D \n input type  checkbox  value  1 0  name  user name     id  user name 1 0     x000D \n label for  user name 1 0  1 0  label  x000D \n input type  checkbox  value  10  name  user name     id  user name 10     x000D \n label for  user name 10  10  label  x000D \n    x000D \n x000D \nFixes  34974 x000D \n x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Problem x000D \n x000D \nUsing a where condition on a composed of attribute with a  nil  value doesn t work as expected  x000D \n x000D \nIf the composed of attribute has a single mapping  then a condition like  where gps location  nil   will end up with  WHERE 1 0  in the SQL query  so it never matches any row   This is because the value gets turned into an array using  Array wrap value   where  Array wrap nil   returns       making the example query effectively  where gps location        x000D \n x000D \nIf the composed of attribute has multiple mappings  then it results in a  Arel  Visitors  UnsupportedVisitError  Unsupported argument type  NilClass  Construct an Arel node instead   being raised because of the same mis use of  Array wrap    It builds separate conditions for an empty array of values   then tries to  OR  an empty array of them      reduce   or     which results in  nil   which isn t a valid Arel node  x000D \n x000D \n    Solution x000D \n x000D \nReplace  Array wrap value   with  value nil     nil    Array wrap value   and use  try   to avoid calling the aggregate attribute method on  nil   x000D \n x000D \nThis issue also shows that empty values were being handled in the multiple mappings path  so I re used the single values path to handle that by changing the condition to  if mapping length    1    values empty     If that is too implicit  I could add a separate  if values empty   branch that just does  build table arel attribute column name   values    which would have the same effect ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nCurrently  advance  duplicates  options  and deletes values from  options   x000D \nThis patch removes duplicating of  options  and stops removing values from  options   x000D \n x000D \nThe patch uses less memory and has better performance  x000D \n x000D \n    x000D \nMemory comparison  x000D \n x000D \nOptions    years  1   months  1   weeks  1   days  1  x000D \nCalculating                                       x000D \n              master   576 000  memsize       0 000  retained  x000D \n                         5 000  objects       0 000  retained  x000D \n                         0 000  strings       0 000  retained  x000D \n      advance no dup   288 000  memsize       0 000  retained  x000D \n                         4 000  objects       0 000  retained  x000D \n                         0 000  strings       0 000  retained  x000D \n x000D \nComparison  x000D \n      advance no dup         288 allocated x000D \n              master         576 allocated   2 00x more x000D \n x000D \nOptions    years  1  x000D \nCalculating                                       x000D \n              master   264 000  memsize       0 000  retained  x000D \n                         2 000  objects       0 000  retained  x000D \n                         0 000  strings       0 000  retained  x000D \n      advance no dup    72 000  memsize       0 000  retained  x000D \n                         1 000  objects       0 000  retained  x000D \n                         0 000  strings       0 000  retained  x000D \n x000D \nComparison  x000D \n      advance no dup          72 allocated x000D \n              master         264 allocated   3 67x more x000D \n x000D \nOptions    weeks  1  x000D \nCalculating                                       x000D \n              master   264 000  memsize       0 000  retained  x000D \n                         2 000  objects       0 000  retained  x000D \n                         0 000  strings       0 000  retained  x000D \n      advance no dup    72 000  memsize       0 000  retained  x000D \n                         1 000  objects       0 000  retained  x000D \n                         0 000  strings       0 000  retained  x000D \n x000D \nComparison  x000D \n      advance no dup          72 allocated x000D \n              master         264 allocated   3 67x more x000D \n x000D \nPeformance comparison  x000D \n x000D \nOptions    years  1   months  1   weeks  1   days  1  x000D \nWarming up                                        x000D \n              master    27 740k i 100ms x000D \n      advance no dup    37 705k i 100ms x000D \nCalculating                                       x000D \n              master    338 511k  \u00b1 5 9   i s        1 692M in   5 020333s x000D \n      advance no dup    572 980k  \u00b1 3 7   i s        2 866M in   5 008680s x000D \n x000D \nComparison  x000D \n      advance no dup    572979 7 i s x000D \n              master    338510 9 i s   1 69x  slower x000D \n x000D \nOptions    years  1  x000D \nWarming up                                        x000D \n              master    53 313k i 100ms x000D \n      advance no dup   115 016k i 100ms x000D \nCalculating                                       x000D \n              master    639 715k  \u00b1 1 7   i s        3 199M in   5 001851s x000D \n      advance no dup      1 579M  \u00b1 6 4   i s        7 936M in   5 053876s x000D \n x000D \nComparison  x000D \n      advance no dup   1579251 7 i s x000D \n              master    639714 8 i s   2 47x  slower x000D \n x000D \nOptions    weeks  1  x000D \nWarming up                                        x000D \n              master    57 353k i 100ms x000D \n      advance no dup   129 141k i 100ms x000D \nCalculating                                       x000D \n              master    674 113k  \u00b1 3 4   i s        3 384M in   5 025973s x000D \n      advance no dup      1 911M  \u00b1 2 5   i s        9 556M in   5 004496s x000D \n x000D \nComparison  x000D \n      advance no dup   1910739 3 i s x000D \n              master    674112 6 i s   2 83x  slower x000D \n   ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This PR includes the following improvement   x000D \n x000D \n  Excludes unnecessary install tasks in engine test  Since  action text install  contains the execution of yarn  it slows  x000D \n  Added that the preload of the newly added component was insufficient   x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m not sure it is what we want make it in Rails 6 0  x000D \nBut I ve just implemented to ease to discuss that on this PR  x000D \n x000D \nContext  https   github com rails rails pull 34956 discussion r248691413", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "When we added support for multiple databases through a 3 tiered config x000D \nand configuration objects this error message got a bit convoluted  x000D \n x000D \nPreviously if you had an application with a missing configuation and x000D \nmultiple databases the error message would look like this  x000D \n x000D \n    x000D \n doesnexist  database is not configured  Available  development  x000D \ndevelopment  test  test  production  production x000D \n ActiveRecord  AdapterNotSpecified  x000D \n    x000D \n x000D \nThat s not very descriptive since it duplicates the environments x000D \n because there are multiple databases per environment for this x000D \napplication   x000D \n x000D \nTo fix this I ve constructed a bit more readable error message which now x000D \nreads like this if you have a multi db app  x000D \n x000D \n    x000D \nThe  doesntexist  database is not configured for the  production  x000D \nenvironment   ActiveRecord  AdapterNotSpecified  x000D \n x000D \nAvailable databases configurations are  x000D \n x000D \ndevelopment  primary  primary readonly x000D \ntest  primary  primary readonly x000D \nproduction  primary  primary readonly x000D \n    x000D \n x000D \nAnd like this if you have a single db app  x000D \n x000D \n    x000D \nThe  doesntexist  database is not configured for the  production  x000D \nenvironment   ActiveRecord  AdapterNotSpecified  x000D \n x000D \nAvailable databases configurations are  x000D \n x000D \ndevelopment x000D \ntest x000D \n    x000D \n x000D \nThis makes the error message more readable and presents the user all x000D \navailable options for the database connections  x000D \n x000D \ncc   tenderlove  matthewd  rafaelfranca ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Test suite s schema rb is currently stale  This will fix that  x000D \n x000D \nAlso  updates the conductor inbounds controller to use  create and extract message id   for creating an  InboundEmail   This makes sure the new  InboundEmail  always has  message id  and  message checksum  columns set ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Clarify changelog entry x000D \nRelated to  34891 x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   Problem x000D \n x000D \nWhen using an aggregate with one mapping  e g  x000D \n x000D \n   ruby x000D \nclass Customer   ActiveRecord  Base x000D \n  composed of  balance  class name   Money   mapping   w balance amount  x000D \nend x000D \n    x000D \n x000D \nThe SQL query from  Customer where balance   1  50  map    amount  Money new amount      would be something like x000D \n x000D \n   sql x000D \nSELECT  customers    FROM  customers  WHERE                                                   customers   balance    1 OR  customers   balance    2  OR  customers   balance    3  OR  customers   balance    4  OR  customers   balance    5  OR  customers   balance    6  OR  customers   balance    7  OR  customers   balance    8  OR  customers   balance    9  OR  customers   balance    10  OR  customers   balance    11  OR  customers   balance    12  OR  customers   balance    13  OR  customers   balance    14  OR  customers   balance    15  OR  customers   balance    16  OR  customers   balance    17  OR  customers   balance    18  OR  customers   balance    19  OR  customers   balance    20  OR  customers   balance    21  OR  customers   balance    22  OR  customers   balance    23  OR  customers   balance    24  OR  customers   balance    25  OR  customers   balance    26  OR  customers   balance    27  OR  customers   balance    28  OR  customers   balance    29  OR  customers   balance    30  OR  customers   balance    31  OR  customers   balance    32  OR  customers   balance    33  OR  customers   balance    34  OR  customers   balance    35  OR  customers   balance    36  OR  customers   balance    37  OR  customers   balance    38  OR  customers   balance    39  OR  customers   balance    40  OR  customers   balance    41  OR  customers   balance    42  OR  customers   balance    43  OR  customers   balance    44  OR  customers   balance    45  OR  customers   balance    46  OR  customers   balance    47  OR  customers   balance    48  OR  customers   balance    49  OR  customers   balance    50  x000D \n    x000D \n x000D \ninstead of the simpler query that we would get from not using  composed of   i e  querying using  Customer where balance   1  50     x000D \n x000D \n   sql x000D \nSELECT  customers    FROM  customers  WHERE  customers   balance  IN  1  2  3  4  5  6  7  8  9  10  11  12  13  14  15  16  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  x000D \n    x000D \n x000D \nhttps   stackoverflow com questions 782915 mysql or vs in performance shows this could have a performance impact  at least in older versions of mysql   Mostly I just want to avoid a database regression by using  composed of  to introduce an abstraction  x000D \n x000D \n   Solution x000D \n x000D \nThe code already had a special case for a single mapping  so I just separated this code path more to avoid building multiple conditions joined with OR ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis also adds a new column  message checksum  to the action mailbox inbound emails table x000D \nfor storing SHA1 digest of the email source  Additionally  it makes generating the missing x000D \nmessage id deterministic and adds a unique index on message checksum and message id to x000D \ndetect duplicate emails ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n1  Replaced unused variables with      x000D \n2  Used   w      instead of          x000D \n3  Typo fixes x000D \n", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "1  Change   trix   https   www npmjs com package trix  from a dependency to a  peer dependency  https   nodejs org en blog npm peer dependencies   since Trix isn t used directly by    rails actiontext   https   www npmjs com package  rails actiontext  x000D \n1  Tidy up the  action text install  task to install both   rails actiontext  and  trix  using the versions specified in  package json ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Active Record still support MySQL 5 5 which doesn t support datetime x000D \nwith precision  x000D \n x000D \nhttps   github com rails rails blob 9e34df00039d63b5672315419e76f06f80ef3dc4 activerecord lib active record connection adapters abstract mysql adapter rb L99 L101 x000D \n x000D \nSo we should check  supports datetime with precision   on the x000D \nconnection ", "annotation": {"notes": "", "label": ["offer"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kaspth I need review on the commits with the title  Remove deprecated  config secret token   and   x000D \nRemove secret token rack env and cookie upgrade code ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nCloses https   github com rails rails issues 34939  x000D \n x000D \nIt appears that  ActiveStorage  enqueues  ActiveStorage  AnalyzeJob s when attaching a file  This prompts  ActiveJob  to enqueue jobs  via the async queue adapter by default in development  and can cause problems for one off scripts such as database seeding  x000D \n x000D \nThis may also be a symptom of a bigger problem with  ActiveStorage  s queueing assumptions  or maybe the async job adapter  For now  I think temporarily setting the queue adapter to inline for all seeding in all environments is reasonable  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Someone at work wants to add a new way to do templating  so I ve been poking at the way we do template compilation   I just want to try out some stuff here and see if it passes CI   Maybe we can merge some of it ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "As requested by  dhh  x000D \n x000D \n   diff x000D \n  import Rails from   rails ujs  x000D \n  Rails start   x000D \n  require   rails ujs   start   x000D \n x000D \n  import   as ActiveStorage from   rails activestorage  x000D \n  ActiveStorage start   x000D \n  require   rails activestorage   start   x000D \n x000D \n  import Turbolinks from  turbolinks  x000D \n  Turbolinks start   x000D \n  require  turbolinks   start   x000D \n   ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nUse     instead of backquote  x000D \n x000D \nThere are some backquotes in document  x000D \nThis PR replace them to     to amend docs  x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Remove  frozen string literal  from Action Cable s template files x000D \n  Related to 837f602fa1b3281113dac965a8ef96de3cac8b02  x000D \n  Follow up  34933 x000D \n  Fix the testing guide  x000D \n x000D \n   Add  rails test channels   x000D \n   Add this rake task to test channels only  x000D \n   We ve added  rails test mailboxes  recently in the same way  34828  x000D \n x000D \n x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Currently  Engines guide in the  Overriding Models and Controllers section  https   guides rubyonrails org engines html overriding models and controllers  references the Decorator pattern  which isn t appropriate to me  since Decorator pattern is not about reopening existing classes  is about adding functionality to existing object instances  something that in Ruby is commonly implemented using Delegators  x000D \n x000D \nMoreover  the suggested naming convention for overrides   app decorators      decorator  rb   conflicts with a naming convention commonly used for View Model   Presentation Model decorators  adopted by popular gems such as  draper   as well as by custom implementations  x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nI had to dig around the code to discover this  since I had a use case for the behavior ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n created at  and  updated at  columns in Action Mailbox table aren t intended nullable ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nBefore this change  it was not possible to use ActionCable in a web worker because it would throw an error when trying to access  window  or  document   which are not available in the   WorkerGlobalScope   https   developer mozilla org en US docs Web API WorkerGlobalScope   x000D \n x000D \nIt may be desirable to offload WebSocket interaction to a worker to free up the main thread for other activity  But even in applications where the main thread can handle WebSocket interaction and other tasks just fine  there s still a benefit to running ActionCable in a worker  If it is common for your users to have multiple tabs of your application open at once  you can take advantage of the   SharedWorker   https   developer mozilla org en US docs Web API SharedWorker  API to reduce load on your servers  With a  SharedWorker   multiple tabs can share a single WebSocket connection  meaning you can drastically reduce the number of active connections  if users commonly have 2 tabs open  this can cut the number of connections in half   if they have more than 2  it s even more significant   x000D \n x000D \nFortunately  it s not too difficult to address the issues that prevent the current version of ActionCable from running in a worker  To support the worker context in addition to the window context  it s recommended to use   self   https   developer mozilla org en US docs Web API Window self  instead of  window    So that s what the first change in this PR does  To avoid the  document   ReferenceError   I ve removed the explicit  document  receiver from the  addEventListener  and  removeEventListener  calls  The  visibilitychange  event won t ever get triggered in a worker  so adding the listener is effectively a no op there  But this listener is not critical for ActionCable to function properly  it s more of a  nice to have   so ActionCable is still fully functional even without that event handler getting invoked  With those two changes  ActionCable can run in a worker  x000D \n x000D \n    Other Information x000D \n x000D \nTo provide a working example  I ve created the   cable in web worker  branch  https   github com rmacklin anycable demo tree cable in web worker  in my fork of  palkan s anycable demo repository  In that branch I extracted the ActionCable interaction to a shared worker using the changes from this PR ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n palkan pointed out that it d be helpful to call out the changes to the ActionCable javascript API not only in the ActionCable  changelog  https   github com rails rails commit aa1ba9cb244b1e03d36aaa941ae4e91c6713b77e diff b8f5c211bba9b53d2faec429bda265e5   but also in the rails guides  x000D \n x000D \nIn this PR I ve documented the relevant changes in both the Upgrading Ruby on Rails guide and the  x000D \n6 0 Release Notes ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nIn  34177 we converted the ActionCable JS package from CoffeeScript to ES2015  The conversion was largely automated by  decaffeinate  https   github com decaffeinate decaffeinate   and then looked over manually to make it more idiomatic  Looking again after some time away  I found a few more non idiomatic artifacts from the CoffeeScript conversion that could be simplified  and I ve addressed them in this PR  x000D \n x000D \n  Simplify  ActionCable createConsumer  by using default argument x000D \n x000D \n  Simplify  ActionCable getConfig    Connection getProtocol   and  Connection close  by relying on the implicit  undefined  return value  instead of explicitly  return ing  undefined   x000D \n x000D \n  Simplify  this isActive      this webSocket  into  this isActive    in  Connection close   We can do this because  isActive    can only return  true  if  this webSocket  is truthy   We can t have an active connection without having instantiated a WebSocket  This is confirmed in the code   Connection isActive  calls  Connection isState  which calls  Connection getState   which checks if  this webSocket  is truthy and returns  null  otherwise  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis is the last PR in the cable testing series  at least for now \ud83d\ude09   x000D \n  Added  channel test  generator x000D \n  Added  connection test  to app generator  unless    skip action cable   x000D \n  Added  Action Cable Testing  guides to  Testing  guides x000D \n  Added  Action Cable Testing  as a highlight to 6 0 release notes x000D \n   finally  Added changelog entry  x000D \n x000D \n cc  kaspth ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fix path to channel files  x000D \n x000D \n rails generate channel Chat  generates  app javascript channels chat channel js   x000D \nSee also  x000D \nrailties lib rails generators rails app templates app javascript packs application js tt  x000D \nactioncable lib rails generators channel templates javascript index js tt x000D \nby default  application js  imports  channels   where x000D \n app javascript channels index js  loads all the channels within x000D \nthis directory and all subdirectories  x000D \n x000D \nFollow up  34709 x000D \nRelated to  33079 x000D \n", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Action Mailbox and Action Text belong to rails rails since  34786 and  34873  x000D \n cc  georgeclaghorn ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "In  34709 we updated the guide  but  actioncable README md  is still x000D \noutdated  Instead of fixing content in the file  I suggest x000D \nnot duplicate the info that is already in the guide and instead remove x000D \nthe info from the file and just add a message  x000D \n You can read more about Action Cable in the  Action Cable Overview  https   edgeguides rubyonrails org action cable overview html  guide   x000D \n x000D \nThe same approach is being used for Action Mailbox and Action Text  x000D \nsee  34812 and  34878  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nMove arrays with quarters months out of  beginning of quarter  and  end of quarter  methods to constants so no new array will be created ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nA bunch of downstream builds are breaking in rails webpacker because Rails 4 2 unnecessarily restricts the bundler version  x000D \n x000D \nhttps   travis ci org rails webpacker builds 476824252 utm source github status utm medium notification x000D \nhttps   travis ci org rails webpacker builds 477670329 utm source github status utm medium notification x000D \n x000D \nAFAIC there s no reason Rails 4 2 shouldn t be able to run with Bundler 2 x  x000D \n", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nThis patch changes the boolean values used in the specs for strings to help users to understand how options work  x000D \n x000D \nThe   checked     disabled  and   readonly  options for  collection radio buttons  are meant to list the elements that should be affected by them  However when used with a single boolean value like  disabled  true  it can be understood as if it was meant to disable the whole  collection radio buttons  helper as it happened here  34915 ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nIn comments in templates for  config database yml   there is a x000D \nreference to  secrets yml  which is now deprecated  x000D \nThey should be replaced with  credentials yml  so that everyone x000D \nusing latest Rails can understand better ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nThis patch simply fixes a little typo in  collection radio buttons  s spec  x000D \n x000D \nThanks for your review ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " Hash deep reverse merge  combines the logic from  Hash deep merge  and  Hash reverse merge   This is useful when configuring libraries that use nested hashes  x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Also  add mention to  new framework defaults 6 0 rb  that x000D \n ActionMailer  Parameterized  DeliveryJob  is default for parameterized mail and will be removed  x000D \n x000D \nRelated to  34692 x000D \n", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " ci skip  x000D \n x000D \n    Summary x000D \nSome explanation why  I18n locale    es  is not a good practice  x000D \n x000D \n    Other Information x000D \n x000D \nIf someone set locale based on parametar x000D \n    x000D \nif params  locale  present  x000D \n  I18n locale   params  locale  to sym x000D \nend x000D \n    x000D \nThan it could be that localization is set only in thread that serve this request  and it is not cleared at the end  so future requests can be in default locale or in newly locale  depending on which thread is serving it   x000D \n     If there s anything else that s important and relevant to your pull x000D \nrequest  mention that information here  This could include x000D \nbenchmarks  or other information  x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nGiven the change to using  bigint  for auto generated primary keys  as per https   github com rails rails pull 26266   I propose updating the Active Record Basics guide to explicitly state the type being used so as to avoid confusion  especially as the type can vary depending on the database used   x000D \n x000D \n    Other Information x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Requiring  just  the  Aws  SNS  MessageVerifier  does not work as this class references other classes in the AWS SDK  x000D \n x000D \neg MessageVerifier uses the AWS  Json  class  here  https   github com aws aws sdk ruby blob master gems aws sdk sns lib aws sdk sns message verifier rb L61  which is  in the sdk core  https   github com aws aws sdk ruby blob master gems aws sdk core lib aws sdk core json rb  x000D \n x000D \nI tried to require in  just  the classes required but gave up at up when I got to 10 requires lines and think the most elegant solution is to bring in the entire SNS SDK in one line    Since we aren t initializing any code from it except the MessageVerifier I don t think there are any negatives to this approach  happy to be corrected   x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \n x000D \n", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis PR adds  Postmark  https   postmarkapp com   ingress support to ActionMailbox ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis commit adds support for endless ranges  e g    1      that were added in Ruby 2 6  They re functionally equivalent to explicitly specifying  Float  INFINITY  as the end of the range  x000D \n x000D \nSpecifically  x000D \n x000D \n   ruby x000D \nrelation where column  1  Float  INFINITY  x000D \n    x000D \n x000D \nis equivalent to x000D \n x000D \n   ruby x000D \nrelation where column   1     x000D \n    x000D \n x000D \n    Other Information x000D \n x000D \nOnly the end of a range can be omitted  Trying     1   results in a syntax error so there s no need to add support for implicit   Float  INFINITY   x000D \n x000D \n    Alternative Implementation x000D \n x000D \nWe could modify  other  at the beginning of  between  and replace  nil  with  Float  INFINITY   or even support   Float  INFINITY   so that there d be no changes to conditions in  if  statements below   we would be able to support  nil  1   equivalent to   Float  INFINITY  1    x000D \n x000D \nPlease let me know if you find this preferable and I ll update the PR ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixes  33083 x000D \n x000D \n    x000D \nactioncable   \u2192  rails actioncable x000D \nactiontext    \u2192  rails actiontext x000D \nactivestorage \u2192  rails activestorage x000D \nrails ujs     \u2192  rails ujs x000D \n    x000D \n x000D \nTODO  x000D \n   x  Perform the \u201cmove\u201d by publishing all packages manually  x000D \n     x  https   www npmjs com package  rails actiontext x000D \n     x  https   www npmjs com package  rails actioncable x000D \n     x  https   www npmjs com package  rails activestorage x000D \n     x  https   www npmjs com package  rails ujs x000D \n   x  Ensure core team members are owners of new npm packages x000D \n     x   npm owner ls  rails actiontext  x000D \n     x   npm owner ls  rails actioncable  x000D \n     x   npm owner ls  rails activestorage  x000D \n     x   npm owner ls  rails ujs  x000D \n x000D \n em  npm doesn\u2019t have a built in system for moving or renaming packages  em  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since we ve addressed the warning  assigned but unused variable  x000D \nfrequently  x000D \n x000D \n370537de05092aeea552146b42042833212a1acc x000D \n3040446cece8e7a6d9e29219e636e13f180a1e03 x000D \n5ed618e192e9788094bd92c51255dda1c4fd0eae x000D \n76ebafe594fc23abc3764acc7a3758ca473799e5 x000D \n x000D \nAnd also  I ve found the unused args in c1b14ad which raises no warnings x000D \nby the cop  it shows the value of the cop ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ref  https   guides rubyonrails org routing html adding member routes", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixes https   github com rails rails issues 34738  x000D \n x000D \n    Summary x000D \n x000D \nCalls   reset column information  on    Topic  in ActiveRecord s serialized attribute test so that attribute methods are safely undefined for all topics  x000D \n x000D \nSeeing how  Topic reset column information   calls  undefine attribute methods   https   github com rails rails blob b03d493cf61f37abe7dc0539aee1985b6a9eea63 activerecord lib active record model schema rb L451  on itself and all subclasses  I assume this is another hiccup I caused in  https   github com rails rails pull 34560 by duping  Topic   ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This speeds up Range new x  y  step Duration  each         x000D \n x000D \nFixes  34888 x000D \n x000D \nA few things about this PR  x000D \n x000D \n1  I m not sure if it s completely the right fix   It seems like  coerce  should  always  return a scalar object  but I m not super familiar with this code  x000D \n2  It s still not as fast as Ruby 2 5  x000D \n x000D \nHere is a benchmark  x000D \n x000D \n   ruby x000D \nrequire  active support all  x000D \nrequire  benchmark ips  x000D \n x000D \nhr   ActiveSupport  Duration hours 1  x000D \n x000D \nBenchmark ips do  x  x000D \n  x report  step enum         1   72000  step hr  each           x000D \n  x report  step no enum      1   72000  step hr            x000D \nend x000D \n    x000D \n x000D \nOn Ruby 2 5  x000D \n x000D \n    x000D \n  ruby  v  Iactivesupport lib test rb x000D \nruby 2 5 3p105  2018 10 18 revision 65156   x86 64 darwin18  x000D \nWarming up                                        x000D \n           step enum    45 600k i 100ms x000D \n        step no enum    71 395k i 100ms x000D \nCalculating                                       x000D \n           step enum    593 116k  \u00b113 8   i s        2 918M in   5 039765s x000D \n        step no enum    845 040k  \u00b1 7 1   i s        4 212M in   5 016175s x000D \n    x000D \n x000D \nOn Ruby 2 6  before this PR   x000D \n x000D \n    x000D \n  be ruby  Iactivesupport lib    test rb  x000D \nWarming up                                        x000D \n           step enum     1 000  i 100ms x000D \n        step no enum    72 725k i 100ms x000D \nCalculating                                       x000D \n           step enum      0 193   \u00b1 0 0   i s        1 000  in   5 170499s x000D \n        step no enum    931 121k  \u00b110 0   i s        4 654M in   5 068382s x000D \n    x000D \n x000D \nOn Ruby 2 6  after this PR   x000D \n x000D \n    x000D \n  be ruby  Iactivesupport lib    test rb  x000D \nWarming up                                        x000D \n           step enum     2 609k i 100ms x000D \n        step no enum    76 393k i 100ms x000D \nCalculating                                       x000D \n           step enum     26 740k  \u00b1 7 9   i s      135 668k in   5 113837s x000D \n        step no enum    934 370k  \u00b1 5 2   i s        4 660M in   5 004186s x000D \n    x000D \n x000D \nAs can be seen from the benchmarks  this patch makes the benchmark on Ruby 2 6 many times faster   However  it s still slower than Ruby 2 5   The new enumerator type returned by  each  in Ruby 2 6 seems to do more work than Ruby 2 5   I ll investigate  but we may just have to live with this speed regression ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The Frameworks collection declared in the  release rb  is missing actiontext and actionmailbox  this means they are skipped when running any tasks that iterated through this collection x000D \n x000D \nchanges include x000D \n x000D \nBreaking up frameworks declaration into multiple lines and put them in order  This should make adding to the list easier and if you need to scan it  they will be in order you would expect x000D \n x000D \nAdd  package  task to both actiontext and actionmailbox x000D \n x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nAdd   s   for regex of type map mysql enum  x000D \n x000D \n    x000D \n             limit   sql type   enum         i  1  x000D \n             limit   sql type   enum s          i  1  x000D \n    x000D \n x000D \nAnd set keyword  x000D \nreference  https   github com rails rails pull 34896 issuecomment 452177230 x000D \n x000D \n    x000D \n             limit   sql type   set         i  1  x000D \n             limit   sql type   set s          i  1  x000D \n    x000D \n x000D \n    Other Information x000D \n     Environment x000D \n x000D \n  tools   version   x000D \n              x000D \n  rails   5 2 2   x000D \n  ruby   2 5 0   x000D \n  macOS   maxOS Mojave 10 14 1   x000D \n  mysql   5 7 22   x000D \n x000D \n     Why x000D \nI made rails project and add new column of enum type  x000D \nBut I have this error when  bundle exec rake db migrate RAILS ENV development    x000D \n x000D \n details  summary  Error   summary   x000D \n x000D \n   shell x000D \nCaused by  x000D \nNoMethodError  undefined method  split  for nil NilClass x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record connection adapters abstract mysql adapter rb 591 in  block in initialize type map  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record type type map rb 55 in  perform fetch  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record type type map rb 21 in  block in fetch  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems concurrent ruby 1 1 4 lib concurrent map rb 193 in  block in fetch or store  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems concurrent ruby 1 1 4 lib concurrent map rb 172 in  fetch  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems concurrent ruby 1 1 4 lib concurrent map rb 192 in  fetch or store  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record type type map rb 20 in  fetch  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record type type map rb 16 in  lookup  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record connection adapters abstract quoting rb 151 in  lookup cast type  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record connection adapters abstract quoting rb 92 in  quote default expression  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record connection adapters abstract schema creation rb 19 in  quote default expression  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record connection adapters abstract schema creation rb 106 in  add column options   x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record connection adapters mysql schema creation rb 53 in  add column options   x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record connection adapters abstract schema creation rb 36 in  visit ColumnDefinition  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record connection adapters abstract schema creation rb 16 in  accept  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record connection adapters abstract schema creation rb 47 in  block in visit TableDefinition  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record connection adapters abstract schema creation rb 47 in  map  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record connection adapters abstract schema creation rb 47 in  visit TableDefinition  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record connection adapters abstract schema creation rb 16 in  accept  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record connection adapters abstract schema statements rb 311 in  create table  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 871 in  block in method missing  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 840 in  block in say with time  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 840 in  say with time  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 860 in  method missing  x000D \n HOME develop library rails test project rails test project db migrate 20190108014230 create items rb 3 in  change  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 814 in  exec migration  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 798 in  block  2 levels  in migrate  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 797 in  block in migrate  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record connection adapters abstract connection pool rb 416 in  with connection  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 796 in  migrate  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 977 in  migrate  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 1292 in  block in execute migration in transaction  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 1345 in  ddl transaction  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 1291 in  execute migration in transaction  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 1263 in  block in migrate without lock  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 1262 in  each  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 1262 in  migrate without lock  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 1210 in  block in migrate  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 1363 in  with advisory lock  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 1210 in  migrate  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 1036 in  up  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record migration rb 1011 in  migrate  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record tasks database tasks rb 172 in  migrate  x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems activerecord 5 2 2 lib active record railties databases rake 60 in  block  2 levels  in  main   x000D \n HOME develop library rails test project rails test project vendor bundle ruby 2 5 0 gems rake 12 3 2 exe rake 27 in   top  required    x000D \n HOME  rbenv versions 2 5 0 bin bundle 23 in  load  x000D \n HOME  rbenv versions 2 5 0 bin bundle 23 in   main   x000D \n    x000D \n  details  x000D \n x000D \nI confirm my migrate file  It have a space between  ENUM  and          x000D \n x000D \n details  summary migration script file  summary  x000D \n x000D \n x000D \n   ruby x000D \nclass CreateItems   ActiveRecord  Migration 5 2  x000D \n  def change x000D \n    create table  items do  t  x000D \n      t column    my type    enum   hoge    fuga     null  false  default   hoge  x000D \n      t timestamps x000D \n    end x000D \n  end x000D \nend x000D \n    x000D \n  details  x000D \n x000D \nBut mysql allow a space between  ENUM  and          x000D \nSo  I tried raw mysql query for CREATE TABLE  And it is created  my type  enum column  x000D \n x000D \n details  summary  Raw query   summary  x000D \n x000D \n   mysql x000D \nCREATE TABLE  test enum table    x000D \n   id  bigint 20  NOT NULL AUTO INCREMENT  x000D \n   my type  enum   hoge   fuga   NOT NULL DEFAULT  hoge   x000D \n  PRIMARY KEY   id   x000D \n  ENGINE InnoDB DEFAULT CHARSET utf8mb4 ROW FORMAT DYNAMIC  x000D \n    x000D \n  details  x000D \n x000D \nFrom the above  I decided to make this PR ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes https   github com rails rails issues 34811  x000D \n x000D \nRefactored  ActionController  ParamsWrapper process actions  to capture parsing errors  x000D \n x000D \ncc   gmcgibbon ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThere was an issues when using  safe constantize  on a string that has the wrong case  x000D \n x000D \nFile  em rb  defines  EM   x000D \n  Em  safe constantize  causes a little confusion with the autoloader  x000D \nThe autoloader finds file  em rb   expecting it to define  Em   but  Em  is not defined  x000D \nThe autoloader raises a  LoadError   which is good  but  safe constantize  is defined to return  nil  when a class is not found  x000D \n x000D \n    Before x000D \n x000D \n   ruby x000D \n Em  safe constantize x000D \nLoadError  Unable to autoload constant Em  expected rails activesupport test autoloading fixtures em rb to define it x000D \n    x000D \n x000D \n    After x000D \n x000D \n   ruby x000D \n Em  safe constantize x000D \n     nil x000D \n    x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes https   github com rails rails issues 34752  x000D \n x000D \nAllows  ActionController  Params  as argument of  ActiveRecord  Base exists    This works already for   create  and   where   so I think this change makes sense  x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n ActiveJob  exception tests were being run multiple times  one per adapter  but using always the test adapter  This made a bug that happened only for  resque  to go undetected  This PR tackles both issues  x000D \n x000D \n    More details x000D \n x000D \n  ExceptionsTest  for  ActiveJob  currently extends  ActiveJob  TestCase   https   github com rails rails blob 9cfcc067e626f0f1e220cc00a9f96622a936350d activejob test cases exceptions test rb L7  instead of  ActiveSupport  TestCase  as the other tests  This has the consequence that the test adapter provided for tests was being used always  in all executions where supposedly different adapters were being used  This pull request rewrites the tests so that they can be run without extending  ActiveJob  TestCase   x000D \n x000D \nThese tests cover the new individual execution counters for exceptions   34352   We found an issue with these in our app that uses  resque   the individual counters are stored as  Hash new 0    which after being serialized  stored in Redis  and deserialized  becomes a regular hash without a default value  The tests were passing because they weren t being executed with  resque  at all  This pull request fixes that small bug as well  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Adds attachments to the form to create new inbound email to make test incoming emails in development  x000D \n x000D \nThis can be useful if the Mailbox is meant to save the attachments from the incoming emails ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since  30367  if  no cache  includes Cache Control headers  special keys like  public    must revalidate  are ignored  x000D \nBut in my understanding   public  still need in case of want to cache authenticated pages  x000D \nThe authenticated pages to be cacheable  but still authenticated for every user  need to specify the  Cache Control  public  no cache   x000D \n x000D \nFor keys other than  public   I did not know the case where it was necessary to use it in combination with  no cache   so I fixed that can be used only for  public   x000D \n x000D \nRef  https   www mnot net cache docs  CACHE CONTROL x000D \n x000D \nFixes  34780 ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Closes  34811  x000D \n    Summary x000D \n x000D \nRefactored the  ensure return super  part of ActionController  ParamsWrapper process action by using an explicit rescue for parameter parsing errors  x000D \n x000D \nr   rafaelfranca  gmcgibbon ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This reverts commit 129f8ac6ffcafb2e6e13c9ef13dda4cc47f5af0d  x000D \n x000D \nSee https   github com rails rails commit 02d2958b6cd84d687d89112eb7e2306a6a89c082 commitcomment 31849196 x000D \n x000D \n cc  georgeclaghorn ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since PR 34816 was merged in c6ef670aee186a2880b7be59c4c6892b5c983e58  x000D \nwe should add this option for flexibility  and consistency  x000D \n cc  georgeclaghorn ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Move some actiontext README md content to Action Text Overview guide x000D \n  I added WIP label to that guide since we definitely want to complement it  x000D \n  Add Action Text to Major Features of Rails 6 0 x000D \n x000D \nSimilar approach was used in  34812 x000D \n cc  georgeclaghorn ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "See actiontext lib action text content rb 132 x000D \n cc  georgeclaghorn ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This comment was autogenerated  see x000D \n railties lib rails generators rails plugin templates  name  gemspec tt  x000D \nSince actiontext is well described in this file  I think we shouldn t x000D \nkeep this comment  Note that this commit is more like cosmetic change  x000D \nso it is OK if we don t merge this  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  config load defaults 6 0 in the dummy app and x000D \n  fix the test since by default rails 6 0 configured x000D \n  does not generate  utf8  hidden input  see  32125 x000D \n  Use  ActiveRecord  Migration 6 0   in the dummy app x000D \n  since actiontext will be since Rails 6 0 x000D \n  Fix  CreateActiveStorageTables  migration in the dummy app and for actionmailbox s dummy app   x000D \n  Add  t foreign key  active storage blobs  column   blob id  x000D \n  It was added in 2ae3a29508e  x000D \n strike    rails actiontext  yarn install   strike  x000D \n cc  georgeclaghorn ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This text should appear on the page x000D \nhttps   api rubyonrails org v6 0 classes ActionText RichText html x000D \n x000D \nRelated to 86517942e469193e8624d5078d718785552c1270 x000D \n cc  georgeclaghorn ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since  34864 removed explicit receiver to clarify the x000D \npurpose of  delegate missing to   I think it will be x000D \nbetter to do the same a few lines above to easier figure x000D \nout that  delegate missing to  defines  method missing   x000D \n respond to missing   when comparing these examples  x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " Rails application config active job return false on aborted enqueue  x000D \nshould be commented as well  x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Related to https   github com rails rails commit 0d40c62213cf0be58a470637bd364e92c5666402 x000D \nr   georgeclaghorn ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Related to https   github com rails rails pull 34817 issuecomment 451508668 x000D \nr   rafaelfranca ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "When no environment variables are set the expectation is that we are in development  x000D \n x000D \nRelated to  32699 ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nRemoving the explicit receiver clarifies the purpose of  delegate missing to  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Match Action Mailbox  which sets a default queue for each of its two jobs ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since  34356 logging  locale  value is more correct x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n Ruby on Rails Guides  https   guides rubyonrails org   is not SNS friendly currently  This PR adds  OG meta tags  http   ogp me  metadata  to the guides  x000D \n x000D \n  image  https   user images githubusercontent com 803398 50677858 74331680 103f 11e9 94a8 4e13052f90a1 png  x000D \n x000D \n\u261d\ufe0f Twitter Card Preview is unavailable x000D \n x000D \n    Other Information x000D \n x000D \nAfter this PR is merged  the Twitter Card looks like  x000D \n x000D \n img width  592  alt  card validator   twitter developers  src  https   user images githubusercontent com 803398 50678135 9e390880 1040 11e9 840d 27220ed2525c png   x000D \n x000D \n     Related PR x000D \n x000D \n  https   github com rails weblog pull 88 x000D \n  https   github com rails weblog pull 89", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nSince Ruby 2 6 0  NilClass to d  is returning  BigDecimal  0 0  This breaks  average  compatibility with prior Ruby versions  This patch makes  average  return  nil  in all Ruby versions when there are no rows  x000D \n x000D \n    Other Information x000D \n x000D \nReverts  34601 x000D \nFixes  34850 x000D \n x000D \nr   rafaelfranca ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nI generated a scaffold controller in a plugin  x000D \n    x000D \n  rails plugin new my plugin   full x000D \n  rails generate scaffold controller blog   model name Post x000D \n    x000D \nAnd I got this buggy result  x000D \n    x000D \n  app controllers blogs controller rb x000D \n27     redirect to     post   notice   Post was successfully created   x000D \n36     redirect to     post   notice   Post was successfully updated   x000D \n    x000D \n    x000D \n  test controllers blogs controller test rb x000D \nequire  test helper  x000D \n x000D \nclass BlogsControllerTest   ActionDispatch  IntegrationTest x000D \n  setup do x000D \n     post   posts  one  x000D \n  end  x000D \n x000D \n  test  should get index  do x000D \n    get  posts url x000D \n    assert response  success x000D \n  end  x000D \n x000D \n  test  should get new  do x000D \n    get new  post url x000D \n    assert response  success x000D \n  end  x000D \n x000D \n  test  should create post  do x000D \n    assert difference  Post count   do x000D \n      post  posts url  params    post          x000D \n    end  x000D \n x000D \n    assert redirected to post url Post last  x000D \n  end  x000D \n x000D \n  test  should show post  do x000D \n    get  post url  post  x000D \n    assert response  success x000D \n  end  x000D \n x000D \n  test  should get edit  do x000D \n    get edit  post url  post  x000D \n    assert response  success x000D \n  end  x000D \n x000D \n  test  should update post  do x000D \n    patch  post url  post   params    post         x000D \n    assert redirected to post url  post  x000D \n  end x000D \n x000D \n  test  should destroy post  do x000D \n    assert difference  Post count    1  do x000D \n      delete  post url  post  x000D \n    end x000D \n x000D \n    assert redirected to  posts url x000D \n  end x000D \nend x000D \n    x000D \nI mean to fix this bug with my changes in this pull request  x000D \nNow I get these results  x000D \n    x000D \n  app controllers blogs controller rb x000D \n27     redirect to   post   notice   Post was successfully created   x000D \n36     redirect to   post   notice   Post was successfully updated   x000D \n    x000D \n    x000D \n  test controllers blogs controller test rb x000D \nequire  test helper  x000D \n x000D \nclass BlogsControllerTest   ActionDispatch  IntegrationTest x000D \n  setup do x000D \n     post   posts  one  x000D \n  end  x000D \n x000D \n  test  should get index  do x000D \n    get posts url x000D \n    assert response  success x000D \n  end  x000D \n x000D \n  test  should get new  do x000D \n    get new post url x000D \n    assert response  success x000D \n  end  x000D \n x000D \n  test  should create post  do x000D \n    assert difference  Post count   do x000D \n      post posts url  params    post          x000D \n    end  x000D \n x000D \n    assert redirected to post url Post last  x000D \n  end  x000D \n x000D \n  test  should show post  do x000D \n    get post url  post  x000D \n    assert response  success x000D \n  end  x000D \n x000D \n  test  should get edit  do x000D \n    get edit post url  post  x000D \n    assert response  success x000D \n  end  x000D \n x000D \n  test  should update post  do x000D \n    patch post url  post   params    post          x000D \n    assert redirected to post url  post  x000D \n  end x000D \n x000D \n  test  should destroy post  do x000D \n       assert difference  Post count    1  do x000D \n       delete post url  post  x000D \n    end x000D \n x000D \n    assert redirected to posts url x000D \n  end x000D \nend x000D \n   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Add section  Results of  load defaults   to the guide  x000D \n x000D \n strike  x000D \nWe should talk about the default values of configurations in x000D \nthe context of a newly generated rails app on the specific version  x000D \nNew rails apps are generated with config load defaults 6 0 in config application rb  x000D \nso  config active job return false on aborted enqueue  is set to  true   x000D \nRelated to https   github com rails rails commit 884310fdd031ed8121944f9ea07c8b7723c4e6b6 r31819118  https   github com rails rails pull 33172 discussion r196960655 x000D \n x000D \nSimilar case https   github com rails rails commit c8a22bb9eef2654c87a0fdb9139d868caf482ec0 x000D \n x000D \nAlso  I think it isn t a good idea to talk about previous Rails versions x000D \nin the current guide since we use versions for guides and if users want to x000D \nknow how something works on a previous version of Rails  they should read x000D \nthe guides of the specific version  x000D \n  strike ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Use Bundler 2 0 on localhost as well  x000D \n x000D \nRelated to  34849  https   bundler io blog 2019 01 03 announcing bundler 2 html  x000D \n x000D \n cc  y yagi", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " bundler  2 0 only supports Ruby    2 3 0  So fall back to the old x000D \nversion when failed to install  x000D \n x000D \nRef  https   travis ci org rails rails jobs 474466077 L1149 L1151", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Don t need to specify the version because Bundler 2 0 released  x000D \nRef  https   bundler io blog 2019 01 03 announcing bundler 2 html x000D \n", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nReaper calls  reap  first  and  flush  only after  x000D \n x000D \nThis makes the test depend on the threads switching  which produce random failures  e g  https   travis ci org rails rails jobs 474561814 ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFollow up for https   github com rails rails pull 33659  x000D \n x000D \nThat s the final part of   action cable testing   https   github com palkan action cable testing  merging  x000D \n x000D \nConnection tests are written as follows  x000D \n1  First  one uses the  connect  method to simulate connection establishment     connect  callback invocation   x000D \n2  Then  one asserts whether the current state is as expected   State  here means connection identifiers or whether connection has been authorized  or not  x000D \n x000D \nFor example  x000D \n x000D \n   ruby x000D \nclass ApplicationCable  Connection   ActionCable  Connection  Base x000D \n  identified by  user id x000D \n x000D \n  def connect x000D \n    self user id   request params  user id     cookies signed  user id  x000D \n    reject unauthorized connection if user id nil  x000D \n  end x000D \n x000D \n  def disconnect x000D \n    ActionCable server broadcast  users presence     id  user id  event   left    x000D \n  end x000D \nend x000D \n x000D \nclass ApplicationCable  ConnectionTest   ActionCable  Connection  TestCase x000D \n  def test connects with params x000D \n      Simulate a connection opening x000D \n    connect params    user id  42   x000D \n x000D \n    assert equal connection user id   42  x000D \n  end x000D \n x000D \n  def test connects with cookies x000D \n      the same API as for integrations tests x000D \n    cookies signed  user id    42 x000D \n x000D \n      just call connect without any arguments x000D \n    connect x000D \n x000D \n    assert equal connection user id   42  x000D \n  end x000D \n x000D \n  def test reject connection x000D \n    assert reject connection   connect   x000D \n  end x000D \nend x000D \n    x000D \n x000D \nYou can also specify cookies  headers  Rack\u2013all the options available for integration tests\u2013plus session x000D \n x000D \n    Other Information x000D \n x000D \nThis PR doesn t contain a changelog entry intentionally  as the previous two   I ll add a change log in another PR  in which I d like to update a testing guide as well  x000D \n", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We ve switched from  Test  Unit  TestCase  to  ActiveSupport  TestCase  x000D \nsince Rails 2 3  x000D \nSee https   edgeguides rubyonrails org 2 3 release notes html other railties changes", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Replace  config active storage queue  with  config active storage queues analysis  and  config active storage queues purge   Prefer  config active storage queue  when it\u2019s set  emitting a deprecation warning  x000D \n x000D \nMatch Action Mailbox  which similarly allows configuring each of its two jobs to use different queues ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That ability was introduced at  11898 as  Relation update  without x000D \ngiving ids  so the ability on the class level is not documented and not x000D \ntested  x000D \n x000D \nc83e30d which fixes  33470 has lost two undocumented abilities  x000D \n x000D \nOne has fixed at 5c65688  but I missed the ability on the class level  x000D \n x000D \nRemoving any feature should not be suddenly happened in a stable version x000D \neven if that is not documented  x000D \n x000D \nI ve restored the ability and added test case to avoid any regression in x000D \nthe future  x000D \n x000D \nFixes  34743 ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nIn https   github com rails rails pull 34707  I noticed that the example subscribers in  ActiveSupport  LogSubscriber  don t actually log their output strings  This fixes that  x000D \n", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nWhen https   github com rails rails pull 34824 was merged  we didn t add  image tiff  to the  config active storage variable content types  array mentioned in the guides  x000D \n", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Part two of https   github com rails rails issues 34710  x000D \n x000D \nAfter studying up commands and generators  I decided to make a command that delegates to a generator  similar to rails new   app generator   This seems to give us the most flexibility with how the command interacts with files  and if the user wants to accept the config overwrites or not   x000D \n x000D \nTODO  x000D \n x000D \n   x  Fix three level nested generator lookup x000D \n   x  Add tests for generator with file assertions x000D \n   x  Add chagelog entry", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis PR bump license year to 2019 ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Found a bug in the ActiveStorage documentation  using resize to fit  with the default minimagick gem as specified in the doco returns a mogrify error as ImageMagicks resize method has the following syntax  x000D \nimage resize  100x100   x000D \n x000D \nwhich uses the ImageMagick syntax for geometric resizing   x000D \nwidthxheight   Maximum values of height and width given  aspect ratio preserved  x000D \n x000D \nThe documentation should contain the following for a successful resize x000D \nvariant resize   100x100   x000D \n x000D \nMogrify error x000D \n mogrify  resize to fit  100  100   var folders mini magick png  failed with error  mogrify  unrecognized option   resize to fit    error mogrify c MogrifyImageCommand 5932  x000D \n x000D \nRelevant Guides below x000D \nhttps   www rubydoc info github minimagick minimagick    Under the usages section x000D \nhttps   www imagemagick org script command line processing php geometry x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \n    Other Information x000D \n x000D \n     If there s anything else that s important and relevant to your pull x000D \nrequest  mention that information here  This could include x000D \nbenchmarks  or other information  x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Use 6 0 version of  ActiveRecord  Migration  for Action Mailbox x000D \n  Since Action Mailbox will be introduced in Rails 6 0  x000D \n  it makes more sense to generate migration of that version  x000D \n  Also  I changed its test dummy app to use default 6 0 configs  x000D \n x000D \n  Use 6 0 default configs in Active Storage test dummy app x000D \n x000D \n cc  georgeclaghorn ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nAllow a new image extension  tiff   to call the  variant  method and generate custom images x000D \n x000D \n    Other Information x000D \nFixes  34698  x000D \n TIFF  images are supported by IE and Safari browsers  but not by Chrome or Firefox x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Related to https   github com rails rails pull 34816 issuecomment 450378366 x000D \nFollow up https   github com rails rails commit ddaf06779aa51d5d1ca462c21c53f2ed169a0d2f x000D \n", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nFormer installation instructions referenced a path that has been archived  This patch adapts installation instructions to make them look like other Rails components ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nWhen used with case insensitive filesystems ActiveStorage blobs might cause non portable Disk storage directories to be created  and the UNIQUE index that gets configured on the  active storage blobs  table is database dependent in terms of case sensitivity  If the database index is case sensitive  but the underlying filesystem is not  blobs might be overwritten and the available key space for uploaded blobs shrinks drastically  This does happen on macOS filesystems already  x000D \n x000D \nThis patch changes the ActiveStorage key generation from mixed case base 58 to lowercase base 36  and increases the key size from 24 bytes to 28  When using base58 there are  58  24  possible key values  and to have the same or more possible keys with base36 we need to have  36  28   increasing the storage requirement for the key by 4 bytes  Since the database migrations for the blobs table are not CHAR   size restricted  and the fix worked for me both on SQLite and MySQL  I believe this is a reasonable compromise  x000D \n x000D \nNote that this will not alter the storage keys that have already been generated  their treatment wills tay unchanged  Neither will it correct the storage directory structures that were created using mixed case keys on macOS since you need to  rekey  the stored objects if you want the storage directory to be portable to a case sensitive filesystem  x000D \n x000D \nCloses  34804   addresses the underlying issue in  33864 for freshly generated uploaded blobs  Unfortunately it cannot be excluded that for some people some blobs already did get overwritten if SQLite was used in combination with a case insensitive filesystem and the Disk storage service  Neither does this change existing blob keys  x000D \n x000D \nThis change does have an implication that for existing S3 buckets and for other services that potentially use  naive partitioning   first N  bytes of the given object store key  partition usage is going to become less  fair   However  AWS recently dropped the recommendation on manual key distribution for the key prefix  https   www infoq com news 2018 10 amazon s3 performance increase  as it seems they have adopted hashing for the keys the user provides  so this would not be a problem for buckets that get created  x000D \n x000D \nThe advantages of using a lowercase only key  x000D \n x000D \n  Less potential issues with collation sensitive database indices x000D \n  Removes issues with potentially case insensitive blob stores x000D \n  Makes it easier to download blobs from a remote store to a case insensitive filesystem for debugging", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  added   without options shouldn t try to match by options x000D \n x000D \nSee https   github com rails rails issues 34813 issuecomment 450375840 x000D \n x000D \nI know that we are working on https   github com rails rails pull 32313 that should introduce model for an error object instead of using Hash   but there is two reasons why we should merge this to master  Improved test that describes  added   method behavior better and also we should backport it to  5 2 stable  since we made regression in 5 2 2 ad739f59aa0fd81850010cedf992b81b24da9ff1  x000D \n x000D \nCloses  34813 x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Currently  we do not generate Action Mailbox files  but It would be great to have  skip action mailbox  option for flexibility  and consistency  x000D \nRelated to https   github com rails rails commit ddaf06779aa51d5d1ca462c21c53f2ed169a0d2f x000D \n cc  georgeclaghorn ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since e3f832a7433a291a51c5df397dc3dd654c1858cb  ActionMailer  Base receive  is deprecated  x000D \nI removed mention about receiving emails from the Action Mailer Basics guide in separate PR https   github com rails rails pull 34812  x000D \n cc  georgeclaghorn  x000D \n", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Move some  actionmailbox README md  content to Action Mailbox Basics guide x000D \n   I added WIP label to that guide since we definitely want to complement it  x000D \n  Fix Action Mailer Basics x000D \n  Now Action Mailbox is responsible for receiving emails  x000D \n  Add Action Mailbox to Major Features of Rails 6 0 x000D \n x000D \nRelated to https   github com rails rails pull 34786 x000D \nCloses  34819 x000D \nr   georgeclaghorn ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nIf there is not a  csrf token  meta tag in the document  the blob record XHR includes an  X CSRF Token  header set to the string   undefined    Instead  it should not be included in the absence of a meta tag  x000D \n x000D \n    Other Information x000D \n x000D \nThis came up in a library using ActiveStorage in a React context  https   github com cbothner react activestorage provider pull 10 issuecomment 432447633  Since it s not possible to remove a header from an XHR  and the only way to change it is by appending  it s not possible for an API only application to provide a CSRF token that was acquired in a different way  If we omit the header when there s no meta tag on the page  users can set the header in a callback to  direct upload before blob request   x000D \n x000D \nr   georgeclaghorn  x000D \n", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis adds  Date use beginning of week  for setting  Date beginning of week  locally inside the supplied block   Date beginning of week  is reset back to the original value when complete  This is very much like  Time use zone    it can be used in a controller  around action  to easily set the beginning of the week for code executing within a controller action  Similar to  Time use zone   this is helpful when rendering a calendar or performing date calculations when the beginning of the week may depend on some user setting or other customization  x000D \n x000D \n    Other Information x000D \n x000D \nI also went ahead and adjusted the tests that were using  with bw default  to set and reset  Date beginning of week  to utilize this new method  x000D \n", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Use an easier form to calculate the expected size ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "After the failed attempt to reuse code https   github com rails rails pull 34538 the regression was added https   github com rails rails commit ba4e68f577efc76f351d30a2914e29942b97830e x000D \n x000D \nThis patch incorporates the regression by extending a more low level methods inside  AssociationScope  which is the only place the  limit 1   can be shared across all usages  x000D \n x000D \ncc  eileencodes  x000D \n x000D \nr   kamipo  x000D \n x000D \n", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis pull request upgrades Ubuntu version used at Travis CI from Trusty  14 04  to Xenial  16 04   x000D \nhttps   docs travis ci com user reference xenial  x000D \n x000D \nSince MySQL 5 7 is available by default x000D \nhttps   docs travis ci com user reference xenial  databases and services x000D \n x000D \nAdded  WIP  label since CI will not run from forked Rails  this pull request commit may fail ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This PR adds a few builds on CI with Ruby  2 6 0  and  head  versions ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Improve actionmailbox s  gitignore and remove redundant files x000D \n   strike Remove comment    rubocop disable Layout TrailingWhitespace   strike  x000D \n  Fix Ruby warnings in actionmailbox x000D \n        x000D \n    rails actionmailbox  bundle exec rake tests x000D \n     snip  x000D \n        x000D \n    rails activerecord lib active record persistence rb 48  warning  in  create    x000D \n    the last argument was passed as a single Hash x000D \n    rails actionmailbox app models action mailbox inbound email message id rb 21  x000D \n    warning  although a splat keyword arguments here x000D \n        x000D \n     snip  x000D \n        x000D \n x000D \n Follow up  34786 x000D \n x000D \nr   georgeclaghorn ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The   csrf meta tags  and   token tag  Action View helper methods are x000D \nexpecting the class in which are included to explicitly define the x000D \nmethod   protect against forgery   or else they will fail with x000D \n NoMethodError   x000D \n x000D \nThis is a problem if you want to use Action View outside of Rails x000D \napplications  For example  in  34788 I used the   button to  helper x000D \ninside of the error pages templates that have a custom x000D \n ActionView  Base  subclass  which did not defined x000D \n  protect against forgery   and trying to call the button failed  x000D \n x000D \nI had to dig inside of Action View to find out what was going on  I x000D \nthink we should either set a default method implementation in the x000D \nhelpers or check for the method definition  but don t explicitly require x000D \nthe presence of   protect against forgery   in every  ActionViews  Base  x000D \nsubclass as the errors are hard to figure out ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Because method arguments are different in the methods provided by form helpers and form builders  I think these are necessary to prevent confusion  x000D \n x000D \nFixes  34787 x000D \n", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nWhile evaluating  multi environment credentials  https   github com rails rails pull 33521 issuecomment 449735483   I came across a problem trying to create a new environment for my app  x000D \n x000D \nOnce you have created your first environment  e g   development   you might start adding configuration in initialisers that tries to access encrypted credentials like so  x000D \n x000D \n   ruby x000D \n  config initializers sidekiq rb x000D \nSidekiq  Web set  session secret  Rails application credentials secret key base  x000D \n    x000D \n x000D \nThat works fine when running  rails credentials edit   environment development   x000D \n x000D \nIf you now decide to create a  staging  environment   doing  rails credentials edit   environment staging  will fail with something similar to     ordered options rb 49 in  method missing    secret key base is blank  KeyError   x000D \n x000D \nA great many gems that access 3rd party APIs use an initialiser for configuring credentials so the above situation is quite likely to occur  x000D \n x000D \nI worked around the issue by creating a new empty Rails app  running  rails credentials edit   environment staging  in it  and copying across the generated credential files   x000D \n x000D \nThis PR attempts to fix the issue by not loading the application environment for  rails credentials    commands  x000D \n x000D \nI ve added a test but I am not sure that it is correct  or sufficient  as I struggled to fully understand the railties test harness  Happy to try another way to test this ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThe existing method   attribute changed  now supports to send arrays to  from   and  to   optional params  x000D \nIt will allow checking if a specific attribute has changed  from  a list of values or  to  a list of values  x000D \nNow  we ll be able to do something like this  x000D \n x000D \n    person name    Bob  x000D \n    person name changed  from  nil  to    Bob    Bill         true x000D \n    person name changed  from    Pete    Bill    to   Bob         false x000D \n x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rubygems update  only supports Ruby    2 3 0  So it cannot install in x000D \nRuby 2 2  fall back to the old version failed to install  x000D \n x000D \nRef  https   travis ci org rails rails jobs 471729316 L749 L754 x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "If  Basecamp is a Facebook free business  https   m signalvnoise com become a facebook free business 5bfefc20c09d   then Rails should be Facebook free framework ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nRails 6 requires Ruby 2 5  which introduces  FrozenError  https   docs ruby lang org en 2 5 0 NEWS html x000D \n x000D \nRelated to  31520 x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nReplacing the   inject  call in   inject join  with a  for  loop removes 5 out of 7 stack frames associated with the call to   visit Arel Nodes And   This increases the complexity of queries that Arel is able to construct by delaying a  SystemStackError   x000D \n x000D \nBefore these changes the stack looked like this  x000D \n x000D \n1   Arel  Visitors  ToSql visit Arel Nodes And  x000D \n2   Arel  Visitors  ToSql inject join  x000D \n3   Arel  Visitors  ToSql inject  x000D \n4   Arel  Visitors  ToSql each  x000D \n5   Arel  Visitors  ToSql each with index  x000D \n6   Arel  Visitors  ToSql each  x000D \n7   block in  Arel  Visitors  ToSql inject join   x000D \n8   call   visit  for each child and   join str  for all children but the last  x000D \n x000D \nAfter these changes  it looks like this   EDIT  this was speculative  see comments below    x000D \n x000D \n1   Arel  Visitors  ToSql visit Arel Nodes And  x000D \n2   Arel  Visitors  ToSql inject join  x000D \n3   call   visit  for each child and   join str  for all children but the last  x000D \n x000D \nAll the existing tests pass when I run  rake test sqlite3  ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It should make the test more readable since  flunk  emphasizes better x000D \nthan  yield  that the block shouldn t be called  x000D \n x000D \nAlso  it improves error message  x000D \n    x000D \n snip  x000D \nshould not call this block x000D \n snip  x000D \n    x000D \n x000D \n    x000D \n snip  x000D \n ArgumentError  exception expected  not Class   LocalJumpError  x000D \nMessage    no block given  yield    x000D \n   Backtrace    x000D \n snip  x000D \n    x000D \n x000D \nRelated to  34753", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I have a test app that was on Ruby 2 4  When I pulled Rails master the x000D \napp no longer would boot because of this change and I saw the following x000D \nerror  x000D \n x000D \n    x000D \nSyntaxError  x000D \n Users eileencodes open source real rails railties lib rails all rb 18  x000D \nsyntax error  unexpected keyword rescue  expecting keyword end x000D \nrescue LoadError x000D \n        x000D \n    x000D \n x000D \nRuby 2 4 doesn t support removing redundant begins so the real issue is x000D \nthat this app is on Ruby 2 4 and not on Ruby 2 5  But it s super x000D \nconfusing for a user to understand the reason the app is failing to boot x000D \nis because we need Ruby 2 5  x000D \n x000D \nI added this redundant begin back because we need to give a clearer x000D \nerror message  x000D \n x000D \nFollowup to https   github com rails rails pull 34764  cc   kamipo ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This PR  fixes  the fixtures so that when there are 2 connections  primary   replica  to a database the tests can see data inserted during the test run on the primary connections  We can t actually use replica connections in tests because Rails keeps a transaction open in order to rollback  I ve explained in detail below  x000D \n x000D \nThis is kind of hacky but I m not sure there s a better way to make sure the replica connections can see data inserted on the primary connections  x000D \n x000D \ncc   matthewd  tenderlove  rafaelfranca  x000D \n x000D \n    x000D \n x000D \nIn an application that has a primary and replica database the data x000D \ninserted on the primary connection will not be able to be read by the x000D \nreplica connection  x000D \n x000D \nIn a test like this  x000D \n x000D \n    x000D \ntest  creating a home and then reading it  do x000D \n  home   Home create  owner   eileencodes   x000D \n x000D \n  ActiveRecord  Base connected to role   default  do x000D \n    assert equal 3  Home count x000D \n  end x000D \n x000D \n  ActiveRecord  Base connected to role   readonly  do x000D \n    assert equal 3  Home count x000D \n  end x000D \nend x000D \n    x000D \n x000D \nThe home inserted in the beginning of the test can t be read by the x000D \nreplica database because when the test is started a transasction is x000D \nopened byy  setup fixtures   That transaction remains open for the x000D \nremainder of the test until we are done and run  teardown fixtures   x000D \n x000D \nBecause the data isn t actually committed to the database the replica x000D \ndatabase cannot see the data insertion  x000D \n x000D \nI considered a couple ways to fix this  I could have written a database x000D \ncleaner like class that would allow the data to be committed and then x000D \nclean up that data afterwards  But database cleaners can make the x000D \ndatabase slow and the point of the fixtures is to be fast  x000D \n x000D \nIn GitHub we solve this by sharing the connection pool for the replicas x000D \nwith the primary  writing  connection  This is a bit hacky but it works  x000D \nAdditionally since we define  replica     preventing writes   as the x000D \ncode that blocks writes to the database this will still prevent writing x000D \non the replica   readonly connection  So we get all the behavior of x000D \nmultiple connections for the same database without slowing down the x000D \ndatabase  x000D \n x000D \nIn this PR the code loops through the handlers  If the handler doesn t x000D \nmatch the default handler then it retrieves the connection pool from the x000D \ndefault   writing handler and assigns the reading handler s connections x000D \nto that pool  x000D \n x000D \nThen in enlist fixture connections it maps all the connections for the x000D \ndefault handler because all the connections are now available on that x000D \nhandler so we don t need to loop through them again  x000D \n x000D \nThe test uses a temporary connection pool so we can test this with x000D \nsqlite3 mem  This adapter doesn t behave the same as the others and x000D \nafter looking over how the query cache test works I think this is the x000D \nmost correct  The issues comes when calling  connects to  because that x000D \nestablishes new connections and confuses the sqlite3 mem adapter  I m x000D \nnot entirely sure why but I wanted to make sure we tested all adapters x000D \nfor this change and I checked that it wasn t the shared connection code x000D \nthat was causing issues   it was the  connects to  code ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "See https   travis ci org rails rails jobs 470890129 L2361", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nUpdate the rdoc comment for  Module delegate  to clarify that the   to  parameter must be the  name  of the target object  not the object itself ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " String to d  does not raise an exception if an invalid value is specified  x000D \nSo can remove exception handling  x000D \n x000D \n    x000D \n  bundle exec ruby  v  rbigdecimal  rbigdecimal util  e  p  123 003  to d  x000D \nruby 2 6 0dev  2018 12 21 trunk 66474   x86 64 linux  x000D \n0 123e3 x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is a regression test for  34751 ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Currently we sometimes find a redundant begin block in code review x000D \n e g  https   github com rails rails pull 33604 discussion r209784205   x000D \n x000D \nI d like to enable  Style RedundantBegin  cop to avoid that  since x000D \nrescue else ensure are allowed inside do end blocks in Ruby 2 5 x000D \n https   bugs ruby lang org issues 12906   so we d probably meets with x000D \nthat situation than before ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "When I generate a scaffold controller   for example with the model name  post   I always get the same on the lines 32 and 41  x000D \n    x000D \n32 redirect to     post   notice   Post was successfully created   x000D \n41 redirect to     post   notice   Post was successfully updated   x000D \n    x000D \nThis correction may solve this mistake or not  Check if I am doing right  please  x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Fix a few deprecation warnings x000D \n  Remove testing of  Hash slice  x000D \n  Improve test of  Hash slice   x000D \n  Remove mention about  Hash slice  from the guide x000D \n", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since Rails 6 requires Ruby 2 5  x000D \n x000D \nhttps   github com ruby ruby blob ruby 2 5 NEWS x000D \n x000D \nFollow up  34754 ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \n    Other Information x000D \n x000D \n     If there s anything else that s important and relevant to your pull x000D \nrequest  mention that information here  This could include x000D \nbenchmarks  or other information  x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "fixes https   github com mikel mail issues 1304", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nWhen generating a new rails application   rails new   using a custom template that  x000D \nincludes gems from an authenticated source  the user has to provide credentials to  x000D \n bundler   x000D \n x000D \nOne way to do this is by  exporting environment variables  https   bundler io v1 16 bundle config html CREDENTIALS FOR GEM SOURCES   for example  x000D \n x000D \n export BUNDLE GITHUB  COM user pass   provides credentials for bundler to fetch x000D \ngems from  github com   x000D \n x000D \nThe problem this PR addresses is that we are currently scrubs all   BUNDLE      x000D \nenvironment variables by wrapping our system calls in   Bundler with clean env   https   github com rails rails blob 5b5319413a611c949cb796351ff42fa0c0299252 railties lib rails generators app base rb L381 L388   x000D \n x000D \nWe do this because we don t want our commands executed against the generated project x000D \nto use the generator s  bundler  environment  e g  our gems   the generated project should x000D \nuse it s own configuration  x000D \n x000D \nThe problem with  Bundler with clean env  is that  on top of restoring environment x000D \nvariables to their original state  it also scrubs any   BUNDLE      variables  which is harmful for authenticated gem sources  x000D \n x000D \nThis PR replaces  Bundler with clean env  with  Bundler with original env   which only x000D \nrestores environment variables to their initial state  without additional scrubbing  x000D \n", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Generally followed the pattern for https   github com rails rails pull 32034 x000D \n x000D \n  Removes needless CI configs for 2 4 x000D \n  Targets 2 5 in rubocop x000D \n  Updates existing CHANGELOG entries for fewer merge conflicts x000D \n  Removes Hash slice extension as that s inlined on Ruby 2 5  x000D \n  Removes the need for send on define method in MethodCallAssertions  x000D \n x000D \ncc  jeremy  matthewd  dhh", "annotation": {"notes": "", "label": ["offer"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "If you try to call  connected to  with a role that doesn t have an x000D \nestablished connection you used to get an error that said  x000D \n x000D \n    x000D \n   ActiveRecord  Base connected to role   i dont exist    Home first   x000D \n x000D \nActiveRecord  ConnectionNotEstablished Exception  No connection pool x000D \nwith  primary  found  x000D \n    x000D \n x000D \nThis is confusing because the connection could be established but we x000D \nspelled the role wrong  x000D \n x000D \nI ve changed this to raise if the  role  used in  connected to  doesn t x000D \nhave an associated handler  Users who encounter this should either check x000D \nthat the role is spelled correctly  writin    writing   establish a x000D \nconnection to that role in the model with connects to  or use the x000D \n database  keyword for the  role   x000D \n x000D \nI think this will provide a less confusing error message for those x000D \nstarting out with multiple databases  x000D \n x000D \ncc   tenderlove  matthewd  rafaelfranca ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since production applications typically run with log level info and email adresses should be considered as sensitive data  or personal data under GDPR  we want to prevent them from ending up in the logs  In development mode  with log level debug  they are still logged as part of the Mail  Message object  x000D \n x000D \nWhile we could add another config option for this   19293  I propose we fix the privacy issue by doing the right thing by default  and custom log subscribers could be written to restore the old functionality  x000D \n x000D \n As a bonus  the wording in the logs is now consistent with the event name    ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \n    Other Information x000D \n x000D \n     If there s anything else that s important and relevant to your pull x000D \nrequest  mention that information here  This could include x000D \nbenchmarks  or other information  x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since MySQL 5 7 9  the  innodb default row format  option defines the x000D \ndefault row format for InnoDB tables  The default setting is  DYNAMIC   x000D \n x000D \nThe row format is required for indexing on  varchar 255   with  utf8mb4  x000D \ncolumns  x000D \n x000D \nAs long as using MySQL 5 6  CI won t be passed even if MySQL server x000D \nsetting is properly configured the same as MySQL 5 7 x000D \n  innodb file per table   1    innodb file format    Barracuda    and x000D \n innodb large prefix   1   since InnoDB table is created as the row x000D \nformat  COMPACT  by default on MySQL 5 6  therefore indexing on string x000D \nwith  utf8mb4  columns aren t succeeded  x000D \n x000D \nMaking  ROW FORMAT DYNAMIC  create table option by default for legacy x000D \nMySQL version would mitigate the indexing issue on the user side  and it x000D \nmakes CI would be passed on MySQL 5 6 which is configured properly  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "A big thanks to  palkan for his hard work on ActionCable testing  Here is a small enhancement with some additional assert methods to check started streams in a more convenient way   x000D \n x000D \nWorking with raw subscription identifiers is good enough while you deal with streams created by  stream from  method  If you try to use  stream for  it requires you to build up an identifier on your own directly in the test  The provided methods try to simplify this process ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Double nesting of configuration is   not supported    without using an intermediate object   even though the   docs suggest it is    This corrects the docs  x000D \n x000D \nPersonally  I think it would be great if it   was   supported  but that s a whole other can of worms PR \ud83d\ude05 ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   Summary x000D \n x000D \nThe following controller test code works fine on Rails 5 0 7  x000D \n x000D \n   rb x000D \nget  index  params  nil x000D \n    x000D \n x000D \nbut on Rails 5 1 or the later versions  NoMethodError is raised with the following error message  x000D \n x000D \n    x000D \nNoMethodError  undefined method  symbolize keys  for nil NilClass x000D \n    x000D \n x000D \nI think this behavior was changed at https   github com rails rails commit 98b8309569a326910a723f521911e54994b112fb  x000D \n x000D \n   Other Information x000D \n x000D \nHere is an example code to reproduce this error  x000D \n x000D \n   rb x000D \n  controller params test rb x000D \nrequire  bundler inline  x000D \n x000D \ngemfile do x000D \n  source  https   rubygems org  x000D \n x000D \n    gem  rails    5 0 7  x000D \n  gem  rails    5 1 6  x000D \nend x000D \n x000D \nrequire  action controller railtie  x000D \nrequire  minitest autorun  x000D \nrequire  rails test help  x000D \n x000D \nclass TestApp   Rails  Application x000D \n  secrets secret key base    secret key base  x000D \n x000D \n    Rails logger     Logger new nil  x000D \n x000D \n  routes draw do x000D \n    get         test index  x000D \n  end x000D \nend x000D \n x000D \nclass TestController   ActionController  Base x000D \n  include   Rails application routes url helpers x000D \n x000D \n  def index x000D \n    head 200  x000D \n  end x000D \nend x000D \n x000D \nclass ControllerParamsTest   ActionController  TestCase x000D \n  def setup x000D \n    super x000D \n     controller     TestController new x000D \n  end x000D \n x000D \n  def test params with empty hash x000D \n    get  index  params     x000D \n    assert equal 200  response status x000D \n  end x000D \n x000D \n  def test params with nil x000D \n    get  index  params  nil x000D \n    assert equal 200  response status x000D \n  end x000D \nend x000D \n    x000D \n x000D \n    Expected x000D \n x000D \n    x000D \n  ruby controller params test rb x000D \nRun options    seed 8188 x000D \n x000D \n  Running  x000D \n x000D \n   x000D \n x000D \nFinished in 0 069279s  28 8688 runs s  28 8688 assertions s  x000D \n2 runs  2 assertions  0 failures  0 errors  0 skips x000D \n    x000D \n x000D \n    Actual x000D \n x000D \n    x000D \n  ruby controller params test rb x000D \nRun options    seed 46396 x000D \n x000D \n  Running  x000D \n x000D \n E x000D \n x000D \nError  x000D \nControllerParamsTest test params with nil  x000D \nNoMethodError  undefined method  symbolize keys  for nil NilClass x000D \n x000D \n x000D \n x000D \nbin rails test controller params test rb 43 x000D \n x000D \n x000D \n x000D \nFinished in 0 065820s  30 3859 runs s  15 1930 assertions s  x000D \n2 runs  1 assertions  0 failures  1 errors  0 skips x000D \n    x000D \n x000D \n    FYI x000D \n x000D \nActionDispatch  IntegrationTest can take nil params like this  x000D \n x000D \n   rb x000D \nclass RequestParamsTest   ActionDispatch  IntegrationTest x000D \n  def test params with nil x000D \n    get      params  nil x000D \n    assert equal 200  response status x000D \n  end x000D \nend x000D \n    x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Also  use the physical core count of the machine as x000D \nthe default number of workers  and generate the  test helper rb  file x000D \nwith  parallelize workers   number of processors   x000D \n x000D \nCloses  34734", "annotation": {"notes": "", "label": ["offer"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixes the rdoc formatting for this block  x000D \n x000D \nBefore  x000D \n x000D \n  ruby on rails api 2018 12 17 15 58 27  https   user images githubusercontent com 308724 50115769 60517d00 0216 11e9 9983 0c1d791c6b31 png  x000D \n x000D \nAfter  x000D \n x000D \n  actionview rendering 2018 12 17 16 09 29  https   user images githubusercontent com 308724 50115776 65aec780 0216 11e9 9a39 166111f3a4e5 png  x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nhttps   github com rails rails pull 34352 introduced individual execution counters for  retry on  declarations  I run into an issue with in flight jobs when trying to upgrade a production app to Rails edge  Jobs enqueued before this change won t have the individual counters as part of their data  which means they d error if they happen to be retried  with x000D \n    x000D \nNoMethodError  undefined method     for nil NilClass x000D \n  from active job exceptions rb 47 in  block in retry on  x000D \n    x000D \n x000D \nSince I was there  I tried to make the behaviour of these individual counters a bit clearer  as I was confused in the beginning about how many times each exception would be retried with a declaration like this  and figured that others might be confused as well  x000D \n    x000D \nretry on CustomException  OtherException  attempts  3 x000D \n    x000D \n x000D \nWith the current implementation  the job would be retried  at most 3 times in total  for both x000D \n CustomException  and  OtherException   To have the job retry 3 times at most for each exception individually  the following  retry on  declarations are necessary  x000D \n x000D \n    x000D \nretry on CustomException  attempts  3 x000D \nretry on OtherException  attempts  3 x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes  34718  x000D \n x000D \nFrom the description given in the issue  matching regexes for Integers or classes will always return nil in Ruby 2 6 0  x000D \n x000D \nTherefore  this pull request calls to s before matching regexes to make sure they are actually being validated  x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Adding general info to those interested ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "1  Extend documentation of  ActiveSupport  Notifications subscribe  x000D \n  Add mention that a block with only one argument passed to the method x000D \n  will yield an event object  x000D \n x000D \n2  Emphasize that  SubscribeEventObjects  is a test class by adding suffix  Test  x000D \n x000D \n Related to  33451", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n Ruby 2 6 0 rc2 Released  https   www ruby lang org en news 2018 12 15 ruby 2 6 0 rc2 released   and Ruby 2 6 will be released on this December 25  I expect Rails 5 2 should run with Ruby 2 6 without errors warnings  x000D \n x000D \nThis pull request backports changes to 5 2 stable branch to suppress errors and warnings which have been already addressed in the master branch  I m wondering if these kinds of backporting should be done by Rails committers and or release manager  Let me open a pull request first  x000D \n x000D \n    Other Information x000D \n x000D \nThere are some errors remained  One can be  fixed  but it needs to backport pull requests with CHANGELOG  Another one  I do not know why it fails with 5 2 stable  x000D \n x000D \n  It has been addressed by  32938 to master branch  It has changelog entry then I did not backport it to this pull request  x000D \n x000D \n   ruby x000D \n  cd activesupport x000D \n  bundle exec ruby  w  Itest test core ext range ext test rb  n  test should compare  x000D \nRun options   n  test should compare    seed 24989 x000D \n x000D \n  Running  x000D \n x000D \nF x000D \n x000D \nFailure  x000D \nRangeTest test should compare other with exclusive end  test core ext range ext test rb 72   x000D \nExpected false to be truthy  x000D \n x000D \n x000D \nbin rails test test core ext range ext test rb 71 x000D \n x000D \nF x000D \n x000D \nFailure  x000D \nRangeTest test should compare identical exclusive  test core ext range ext test rb 68   x000D \nExpected false to be truthy  x000D \n x000D \n x000D \nbin rails test test core ext range ext test rb 67 x000D \n x000D \nF x000D \n x000D \nFailure  x000D \nRangeTest test should compare identical inclusive  test core ext range ext test rb 64   x000D \nExpected false to be truthy  x000D \n x000D \n x000D \nbin rails test test core ext range ext test rb 63 x000D \n x000D \n x000D \n x000D \nFinished in 0 001701s  1763 5357 runs s  1763 5357 assertions s  x000D \n3 runs  3 assertions  3 failures  0 errors  0 skips x000D \n    x000D \n x000D \n   test restart rails server with custom pid file path  fails  x000D \nIt passes with the master branch   x000D \n x000D \n   ruby x000D \n  cd railties x000D \n  bundle exec ruby  w  Itest test application server test rb  n test restart rails server with custom pid file path x000D \nRun options   n test restart rails server with custom pid file path   seed 41272 x000D \n x000D \n  Running  x000D \n x000D \nF x000D \n x000D \nFailure  x000D \nApplicationTests  ServerTest test restart rails server with custom pid file path  test application server test rb 53   x000D \n Inherited  expected  but got  x000D \n x000D \n    x000D \nTraceback  most recent call last   x000D \n\t2  from bin rails 4 in   main   x000D \n\t1  from  home yahonda  rbenv versions 2 6 0 rc2 lib ruby 2 6 0 rubygems core ext kernel require rb 54 in  require  x000D \n home yahonda  rbenv versions 2 6 0 rc2 lib ruby 2 6 0 rubygems core ext kernel require rb 54 in  require   cannot load such file    rails commands  LoadError  x000D \n  x000D \nExpected      r n e 1mTraceback e m  most recent call last   r n t2  from bin rails 4 in   main   r n t1  from  home yahonda  rbenv versions 2 6 0 rc2 lib ruby 2 6 0 rubygems core ext kernel require rb 54 in  require  r n home yahonda  rbenv versions 2 6 0 rc2 lib ruby 2 6 0 rubygems core ext kernel require rb 54 in  require    e 1mcannot load such file    rails commands   e 1 4mLoadError e m e 1m  e m r n  to include  Inherited   x000D \n x000D \n x000D \nbin rails test test application server test rb 35 x000D \n x000D \n x000D \n x000D \nFinished in 14 595938s  0 0685 runs s  0 4111 assertions s  x000D \n1 runs  6 assertions  1 failures  0 errors  0 skips x000D \n   ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nAllow using  parsed body  in  ActionController  TestCase  by switching the initialzation of an appropriate response parser x000D \nin  ActionDispatch  TestResponse  from eagerly to lazily  x000D \n x000D \nBy doing so  the response parser can be correctly set for x000D \n ActionController  TestCase   which doesn t include x000D \nthe content type header in the constructor but only sets it at x000D \na later time  x000D \n x000D \nFixes  34676 ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Context x000D \n x000D \nWhen trying to create a separate  cable  instance  e g  within an engine   we faced a problem of  ActionCable  Server  Base  relying on the  global  configuration  i e   ActionCable  Server  Base config     x000D \n x000D \nWe want our engine to have a separate  isolated  Cable server instance with its own configuration  x000D \n x000D \nSee the example app using this patch  https   github com palkan engine cable app x000D \n x000D \n    Summary x000D \n x000D \n  Add ability to pass a config as a  Server new  argument  x000D \n x000D \n    Other Information x000D \n x000D \nThis problem has been already discussed here  https   github com rails rails pull 27425 discussion r96065280  we ve adjusted the test from that PR as well   x000D \n x000D \nThe related issue not included into this patch  separate PR    currently  only the Redis adapter supports channels prefixes   With the ability to have  engined  cables we ll need to isolate streams for all  distributed  adapters  e g   postgresql    async   inline  adapters do not share anything   x000D \n x000D \nOne potential caveat of using multiples cables within the app is the lack of isolation for channel classes  i e  it is possible to subscribe  or at least try to  to any channel from any connection  see https   github com rails rails blob v5 2 2 actioncable lib action cable connection subscriptions rb L35   x000D \n x000D \nOne possible solution is to add  config base channel class  parameter and use it instead of a  ActionCable  Channel  Base   i e   config base channel class    subscription klass    x000D \n x000D \nAnother way is to get away from using Ruby class names as identifiers  and build a per connection registry map of identifiers  class  like it s done in https   github com palkan litecable   x000D \n x000D \nP S  Thanks to  composerinteralia for pairing with me on this feature ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hello  I am requesting the inclusion of result set with payload  to use in ActiveSupport  Notifications pub sub  Currently  I am required to use class eval to extend ActiveRecord  but would prefer a cleaner solution ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nI noticed in the guide we re still using sprockets and coffeescript to demo action cable  Since Webpacker is going to be default in Rails 6  and ActionCable has been converted to ES6  I think this makes sense to change  x000D \n x000D \nI ve never actually used ActionCable in a non trivial app before  so I d like some feedback on the snippets ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\u2026s and ActiveSupport  LogSubscriber documentation files x000D \n x000D \n    Summary x000D \n x000D \nThis PR adds some missing code samples describing error handling in  ActiveSupport  Notifications  and  ActiveSupport  LogSubscriber  documentation files  It also includes some minor formatting updates to  ActiveSupport  LogSubscriber  docs ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nAdd missing keys type casted binds   statement name x000D \n x000D \nSee https   github com rails rails blob master activerecord lib active record connection adapters abstract adapter rb L625 ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nDalli uses  ENV  MEMCACHE SERVERS    to default memchached server address when not any address passed in client new   x000D \n x000D \nBut ActiveSupport uses  localhost 11211  in  ActiveSupport  Cache  MemCacheStoreTest build mem cache  called x000D \nwithout arguments  x000D \nIts behavior can t overwrite by environment variable  MEMCACHE SERVERS   x000D \n x000D \nIf address passed  use this  x000D \nElse  check  MEMCACHE SERVERS  then it has value  use this  x000D \nIf neither  use nil to initialize  Dalli  Client    x000D \n x000D \n    Other Information x000D \nI found this problem when run ActiveSupport test by memcached that running other host   x000D \n x000D \nIn my opinion  ActiveSupport has to respects to Dalli behavior to use MEMCACHE SERVER environment variable   wink   x000D \n", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " ActiveSupport  Deprecation deprecate methods  without alternate method name is not tested ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes https   github com rails rails issues 34694  x000D \n x000D \nPreserves order of keys passed to   fetch multi   x000D \n x000D \nIf for some reason the current functionality is intended  I ll refactor this PR to document the behaviour  x000D \n", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nNew migration generator action  add indexed    x000D \n x000D \nThis will generate migration file only with add index  table name   attribute section x000D \n x000D \nUsage   rails generate migration add indexed email to users   x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nAdd multiple sources docu to Collection caching guide x000D \n", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nLooking at the past commits  it seems to follow Ruby s version upgrade  x000D \nSo I thought it better to raise the version  x000D \n x000D \n     past commits x000D \nhttps   github com rails rails commit 6b3acf151829ee16a946c0d77529d236f115234c x000D \nhttps   github com rails rails commit c2c9839a3d9b2c8c3bc5b717f23928d856c7e922", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nno need to set backreferences  in these cases using match  is more appropriate x000D \n x000D \n    Other Information x000D \n    x000D \nINTEGER REGEX x000D \n                    656 097k  \u00b1 5 1   i s        3 311M in   5 060584s x000D \n            match    2 673M  \u00b1 4 0   i s       13 432M in   5 034181s x000D \n    x000D \n", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFollowup on https   github com rails rails pull 34591  This moves the setting of using  ActionMailer  MailDeliveryJob  as the default delivery job to defaults only applied to new 6 0 apps  Upgraded apps need to upgrade this manually to avoid having issues on deployment discussed  here  https   github com rails rails pull 34591 issuecomment 444157404   x000D \n x000D \ncc  rafaelfranca   Edouard chin   eileencodes  x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nRemove redundant suffixes on generated helpers  x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nRemove redundant suffixes on generated integration tests  x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nhttps   github com kr beanstalkd has moved to x000D \nhttps   github com beanstalkd beanstalkd as permanently  x000D \n x000D \n    Other Information x000D \n   shell x000D \n  curl   head https   github com kr beanstalkd x000D \nHTTP 1 1 301 Moved Permanently x000D \nDate  Wed  12 Dec 2018 15 18 59 GMT x000D \nContent Type  text html  charset utf 8 x000D \nServer  GitHub com x000D \nStatus  301 Moved Permanently x000D \nCache Control  no cache x000D \nVary  X PJAX x000D \nLocation  https   github com beanstalkd beanstalkd x000D \n    x000D \n   ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The second attempt     x000D \nThe previous one  https   github com rails rails pull 25369 by  timthez ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nIssue  https   github com rails rails issues 34676", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nRemoves redundant   test  suffix on generated system tests  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes https   github com rails rails issues 34677  x000D \n x000D \nFixes boolean interaction in scaffold generated system tests ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This can be used to check the currently connected role  It s meant to mirror  ActiveRecord  Base connected to  introduced in  34052  x000D \n x000D \nUsage  x000D \n x000D \n    ruby x000D \nActiveRecord  Base connected to role   writing  do x000D \n  ActiveRecord  Base connected to  role   writing      true x000D \n  ActiveRecord  Base connected to  role   reading      false x000D \nend x000D \n    x000D \n x000D \ncc  eileencodes ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes https   github com rails rails issues 30967 for 5 2 stable", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes  30967", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \nFixes https   github com rails rails issues 30967 x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \nThis updates the ActiveStorage overview documentation to prepend a module onto  IntegrationTest   rather than straight overriding the  after teardown  method  as per  this discussion with  rafaelfranca in  34619  https   github com rails rails pull 34619 discussion r238882327 ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis pull request attempts to fix  34664 by increasing ramfs size before installing for CI against 5 2 stable  x000D \n x000D \nFor master branch  https   github com rails rails pull 33861 has been merged  which depends on https   github com rails rails pull 33608   33608 has not and should not be backported to 5 2 stable  Increasing ramfs should be a better way to address  34664 for 5 2 stable  x000D \n x000D \ncc  y yagi ", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Just fix typos in test descriptions", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis simple pull request upgrades Rubocop to 0 61 1 and fixes the remaining issues  x000D \n x000D \nAll of them were related to indentation after private   protect  which  as described in the  Contributing to Rails Guide  should be of 2 spaces  x000D \n x000D \n Contributing to Rails Guide   https   edgeguides rubyonrails org contributing to ruby on rails html x000D \n x000D \n", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "In the text in the h1 tag  which is called out in the explanation text does not match  I ve changed the explanation  below the html erb examples   L1123   L1130  to match the h1 tags  But  this change could easily go the other way  x000D \n x000D \n    Summary x000D \nThere was a simple error in the guide text  which referenced the wrong text  possible due to the example html erb files changing   The text was close  but not correct  I have changed the text to match the html erb h1 tag titles  x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nProblem occurs in the following scenario for   jruby    x000D \nWhen 2 threads are trying to access the same ActiveRecord object  one of the thread is updating an attribute while the other one is trying to read an attribute  x000D \n x000D \nFixes  34615 x000D \n x000D \n    Script to reproduce x000D \n   ruby x000D \n  frozen string literal  true x000D \n x000D \nrequire  bundler inline  x000D \n x000D \ngemfile true  do x000D \n  source  https   rubygems org  x000D \n  ruby  2 5 0   engine   jruby   engine version   9 2 3 0  x000D \n x000D \n  gem  rails  x000D \n  gem  activerecord jdbcsqlite3 adapter  x000D \n  gem  parallel  x000D \nend x000D \n x000D \nrequire  active record  x000D \nrequire  minitest autorun  x000D \nrequire  logger  x000D \nrequire  parallel  x000D \n x000D \n  This connection will do for database independent bug reports  x000D \nActiveRecord  Base establish connection adapter   sqlite3   database   bug test   pool  5000  x000D \nActiveRecord  Base logger   Logger new STDOUT  x000D \n x000D \nActiveRecord  Schema define do x000D \n  create table  posts  force  true do  t  x000D \n    t string  name x000D \n  end x000D \nend x000D \n x000D \nclass Post   ActiveRecord  Base x000D \nend x000D \n x000D \nclass BugTest   Minitest  Test x000D \n  def test concurrency issue x000D \n    post   Post create  x000D \n x000D \n    tasks      x000D \n x000D \n    10000 times each do x000D \n      tasks    Proc new do x000D \n        j   post name x000D \n      end x000D \n    end x000D \n    10000 times each do x000D \n      tasks    Proc new do x000D \n        post update  name   random   x000D \n      end x000D \n    end x000D \n x000D \n    Parallel each tasks shuffle  in threads  6  do  task  x000D \n      task call x000D \n    end  nil x000D \n  end x000D \nend x000D \n x000D \n    x000D \n     System configuration x000D \n  Ruby version    2 5 0 x000D \n  engine    jruby x000D \n  jruby version    9 2 3 0 x000D \n x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together     ", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nAll native DS support  blank   and  present   except  OpenStruct   I have added an implementation for  OpenStruct   Any reason this was left out  x000D \n x000D \nMy argument for this would be  since it is a  Hash  like DS  it should have the presence methods as well  just like a  Hash  does", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nVery small correction to documentation on per form CSRF tokens where the term  specified  is changed to  specific   x000D \n x000D \n    Other Information", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This PR  x000D \n  Adds more tests for   create or find by    methods x000D \n  Fixes docs of  create or find by   This method uses  find by   internally instead of  find by  x000D \n x000D \nRelated to  31989", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This only updates the pull request https   github com rails rails pull 32852 to the current master  This would close the issue https   github com rails rails issues 26085 x000D \n x000D \nBesides the conflicts is there anything missing from  gmcgibbon that prevents the PR from being merged  afaict it solves the bug x000D \n x000D \n", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Before  33325   deprecate  works for non exist methods  x000D \nThis is necessary  for example  if want to deprecate dynamically defined x000D \nmethods like attributes methods  x000D \n x000D \nFixes  34646", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "For method which is not yet defined when evaluating  deprecate   x000D \n alias method  raises NameError  x000D \nPostponed defining deprecated version of method until original one is added  x000D \n x000D \nFixes  34646 x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n ActionDispatch  Journey  Nodes  Symbol type  was generated dynamically with the help of an  each  block  While this is OK for classes like  ActionDispatch  Journey  Nodes  Slash  or  ActionDispatch  Journey  Nodes  Dot  which don t have further implementation  all other classes containing more logic have this method defined within their class  body  x000D \n x000D \nThis patch puts the definition of  ActionDispatch  Journey  Nodes  Symbol  in one place instead of having two separate places defining logic for this class ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Rails 4    Rails 5 introduced a  to hash call in HashWithIndifferentAccess initialize to guarantee access to the  default and  default proc methods   This can be an expensive operation for very large HashWithIndifferentAccess objects  x000D \n x000D \nThis commit bypasses this  to hash call if it is already a Hash  giving a performance boost to the copy constructor of huge HWIAs ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Before  ruby ruby a0e438c diff 6b866d482baf2bdfd8433893fb1f6d36R144  bigdecimal 1 4 0 pre 20181130a   BigDecimal  123 non numeric    returns  0 123e3   After that commit  it raises  This causes  Decimal type cast  123 non numeric    to  rescue  and return  0 0   x000D \n x000D \nThis patch conserves current behavior  x000D \n x000D \nSee test failure in CI  https   travis ci org rails rails jobs 462532922 L4501", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Description x000D \n x000D \nThis PR aims to fix a corner case concerning UJS behavior  x000D \nReproduction steps are laid out in  33889  x000D \nThe issue occurs because the a data disable  with   within a form will cause both the x000D \n x000D \n  delegate document  Rails formSubmitSelector   ajax send   disableElement  x000D \n x000D \n which disables all child form elements as well as the  x000D \n x000D \n delegate document  Rails linkClickSelector   click   disableElement  x000D \n x000D \nto attempt to disable the element  x000D \nThe first invocation change the text inside the a tag to be saved as attribute while being replaced by the data disable with attribute data  x000D \nThe second invocation again takes the inner text  now the data diable with  and overwrites the saved text making the link always show the data disabled with text  even after reenabling  since the original text  saved within an attribute was overwritten during the second invocation  x000D \n x000D \nTl Dr  Disabling an element that already is disabled is not handled well  x000D \n x000D \n    Fixes x000D \n x000D \nWhile you could make sure none of the handlers target the same elements  disabling a disabled element should not cause issues at any time  Since the current implementation already marks an element as disabled by ujs  we should use that information to determine if we should actually disable or just return early ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I originally named this  StatementInvalid  because that s what we do in x000D \nGitHub  but   tenderlove  pointed out that this means apps can t test x000D \nfor or explitly rescue this error   StatementInvalid  is pretty broad so x000D \nI ve renamed this to  InvalidWriteOnRead   x000D \n x000D \nI also changed the  while preventing writes  block to reset to false   x000D \nwe always want to turn this feature off at the end of the block  x000D \n x000D \ncc   rafaelfranca  matthewd  tenderlove   thoughts on the error name ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nDefines  Object include  that allows for including a module on an instance level  This is facilitated by including the module on the instance s singleton class  x000D \n x000D \nA practical use for this is to provide controller specific validations to a model  x000D \n x000D \n   ruby x000D \nmodule SpecialUserValidations x000D \n  extend ActiveSupport  Concern x000D \n x000D \n  included do x000D \n    validates  name  presence   true x000D \n  end x000D \nend x000D \n x000D \nclass FooController x000D \n  def update x000D \n     user   User find params  id   x000D \n     user include SpecialUserValidations  x000D \n           user now requires name to be set x000D \n  end x000D \nend x000D \n    x000D \n     x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes https   github com rails rails issues 34622  x000D \n x000D \nQuotes joined columns properly in SQLite  x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nIMO the previous header   Serving GZipped version of assets   was misleading  because it was suggesting that the config will enable us serving the gzipped version of assets out of the box  which is not true  because we need to configure it on a server  e g  nginx  x000D \n x000D \nIn fact  the paragraph is explaining how to enable disable gzipping assets in the config and I believe that my change will be more straightforward for readers ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Implements  33064 x000D \n x000D \n  When using the actioncable javascript package  if you want to pass an authorization token you need to do so when creating the cable consumer  However  this is not dynamic  ideally you could modify this token after the consumer is created so if the token expires or is refreshed it could be updated  x000D \n x000D \nNow you can update the authorization token in cable consumers ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n\ud83d\udc4b I m the release manager for Bundler and i m currently preparing for the release of Bundler 2  I wanted to test Bundler 2 on Rails  test suite and make sure I didn t break anything  After talking with  rafaelfranca  we agreed that we should update the repo to the use the latest pre release  x000D \n x000D \nOnce the final release is made  I ll make another PR to update Travis to pull the latest stable release  x000D \n x000D \n cc  rafaelfranca  x000D \n", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "According to  Ruby on Rails Guides Guidelines  https   guides rubyonrails org ruby on rails guides guidelines html html guides generation   environment variable  DIRECTION  is t necessary to give in order to generate Rails Guides   But   bundle exec rake guides generate  gives me errors below  x000D \n x000D \n    x000D \nysksn at T460s in   Projects rails guides on master using 2 5 3 x000D \n \u00b1 bundle exec rake guides generate x000D \n home ysksn  rbenv versions 2 5 3 bin ruby rails guides rb x000D \nTraceback  most recent call last   x000D \nrails guides rb 29 in   main    undefined method  to sym  for nil NilClass  NoMethodError  x000D \nrake aborted  x000D \nCommand failed with status  1     home ysksn  rbenv versions 2 5 3 bin ruby     x000D \n home ysksn Projects rails guides Rakefile 24 in  block  3 levels  in  top  required    x000D \n home ysksn Projects rails vendor bundle gems rake 12 3 1 exe rake 27 in   top  required    x000D \n home ysksn  rbenv versions 2 5 3 bin bundle 23 in  load  x000D \n home ysksn  rbenv versions 2 5 3 bin bundle 23 in   main   x000D \nTasks  TOP    guides generate    guides generate html x000D \n See full trace by running task with   trace  x000D \n    x000D \nSo  I ve changed that if environment variable  DIRECTION  isn t given  set   ltr  as default value  x000D \n x000D \nThanks   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \nThis leverages  ActiveSupport on load  in the guides and generated  test helper rb   rather than reopen classes  This practice can help safeguard against load order issues  x000D \n x000D \nSpin off from  discussion  https   github com rails rails pull 34563 discussion r237374753  with  Edouard chin   gmcgibbon     rafaelfranca in  34563  x000D \n x000D \n    Other Information x000D \n x000D \n     If there s anything else that s important and relevant to your pull x000D \nrequest  mention that information here  This could include x000D \nbenchmarks  or other information  x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n x000D \n      Update CHANGELOG  does updating the generated  test helper rb  warrant this   x000D \n      Either update  34563 after merging this  or update this after merging  34563 x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hello  x000D \n x000D \nI ve found a few places in Rails code base where I think it makes sense to calculate elapsed time more precisely by using  Concurrent monotonic time   x000D \n x000D \n   ActiveSupport  Cache  MemoryStore prune  x000D \n   ActiveRecord  ConnectionAdapters  ConnectionPool  Queue wait poll  x000D \n   ActiveRecord  ConnectionAdapters  ConnectionPool attempt to checkout all existing connections  x000D \n   ActiveRecord  ConnectionAdapters  Mysql2Adapter explain  x000D \n x000D \nSee x000D \nhttps   docs ruby lang org en 2 5 0 Process html method c clock gettime x000D \nhttps   blog dnsimple com 2018 03 elapsed time with ruby the right way x000D \n x000D \nRelated to 7c4542146f0dde962205e5a90839349631ae60fb x000D \n x000D \n del  x000D \nAdd private  ActiveSupport  ProcessClock  module x000D \n x000D \nIn the codebase  we use  Process  CLOCK PROCESS CPUTIME ID   x000D \nbut it doesn t work on Windows so we should add conditions x000D \nto support Windows  It is a good idea to handle all those cases x000D \nin one place to prevent spreading those conditions in the codebase  x000D \n x000D \nRelated to  34374   34410 x000D \n  del ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis small change simply colorizes the unpermitted params warning error log output to make it easier for scanning and identifying issues with strong params  I ve been helping out some junior beginner engineers with rails and more than a few times they ve run into issues where they re just overlooking the log message  Not ashamed to say that this still gets me every once in a while  mostly because I feel like I ve scanned the log and I don t see the message  so I go looking elsewhere  x000D \n x000D \n It seems like moving the default to   raise  instead of   log  is probably a good idea  https   github com rails rails pull 32206   but regardless if we d raise an error  it seems like colorizing the log message makes sense as a parallel ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes https   github com rails rails issues 34608  x000D \n x000D \nAdds note to the routing guide about defining additional resource routes with symbols ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This patch modifies XmlMini  Parsing  decimal   to handle a string that contains an invalid number  Since  ruby ruby a0e438c diff 6b866d482baf2bdfd8433893fb1f6d36R144  https   github com ruby ruby commit a0e438cd3c28d2eaf4efa18243d5b6edafa14d88 diff 6b866d482baf2bdfd8433893fb1f6d36R144  this case raises an  ArgumentError    String to f  returns 0 0 if there is not a valid number at the start of the argument  so current behavior is conserved  x000D \n     x000D \nSee https   travis ci org rails rails jobs 463180341 L6264 x000D \n     x000D \nRelated   34600   34601 x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Unlike the  Relation delete all    delete all  on collection proxy x000D \ndoesn t return affected count  Since the  CollectionProxy  is a subclass x000D \nof the  Relation   this inconsistency is probably not intended  so it x000D \nshould return the count consistently  x000D \n", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes https   github com rails rails issues 34460  x000D \n x000D \nCalls   reset scope  after every delete method call on a collection association  This clears stale memoized offsets containing removed records here  x000D \nhttps   github com rails rails blob 6ca6478a67ecdff58c29d10cd408b7259ed89e2b activerecord lib active record relation finder methods rb L512", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes  34599  x000D \n x000D \nBy default  ActiveRecord enum  generates several default scopes based on the values  This PR adds an option to disable those scopes which could possibly cause conflicts with existing methods for the model  x000D \n x000D \n     Provide a general description of the code changes in your pull x000D \nrequest    were there any bugs you had fixed  If so  mention them  If x000D \nthese bugs have open GitHub issues  be sure to tag them here as well  x000D \nto keep the conversation linked together      x000D \n x000D \n    Other Information x000D \n x000D \n     If there s anything else that s important and relevant to your pull x000D \nrequest  mention that information here  This could include x000D \nbenchmarks  or other information  x000D \n x000D \nIf you are updating any of the CHANGELOG files or are asked to update the x000D \nCHANGELOG files by reviewers  please add the CHANGELOG entry at the top of the file  x000D \n x000D \nFinally  if your pull request affects documentation or any non code x000D \nchanges  guidelines for those changes are  available x000D \nhere  http   edgeguides rubyonrails org contributing to ruby on rails html contributing to the rails documentation  x000D \n x000D \nThanks for contributing to Rails      x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "See  34568", "annotation": {"notes": "", "label": ["greeting"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixes  34600  x000D \n x000D \n    Summary x000D \n x000D \nNumericData average was returning nil on ruby versions    ruby 2 6 0dev  2018 12 03 trunk 66154  x000D \n x000D \nNow it returns 0 0 instead of nil", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nI accidentally forgot to add the author line to my changelog entry from 2bb4fdef5efc70327c018e982ff809a29ac6708b   34590   Sorry about that \ud83d\ude33 x000D \n x000D \n", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "See  https   travis ci org rails rails jobs 462233144 L1384", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Fix formatting x000D \n  Don t repeat  Active Record automatically handles creating and migrating a new database for each worker to use   x000D \n  Tell that AR loads the schema to a database for each process Related to  33479  x000D \n  Clarify that  parallelize teardown  is executed for each process x000D \n", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nThe variable  route  was only allocated to hold an object that was immediately returned  This patch removes that variable ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nIn https   github com rails rails pull 34367  we merged a breaking change to  actionmailer  that changed the parameters of  DeliveryJob   This will cause upgrade pains for any app delivering mail in the background  This patch attempts to rectify the situation by reverting and deprecating  DeliveryJob  and  Parameterized  DeliveryJob  and introducing  NewDeliveryJob  to send either kind of mail  x000D \n x000D \nBecause web and job workers aren t always deployed to in lockstep  and enqueued jobs can be worked off at any time during a deployment  we have two problems to solve  x000D \n x000D \n1  Old delivery jobs need to be able to be worked off by a rails 6 job worker  x000D \n2  New delivery jobs have to be able to be worked off by an old rails 5 x job worker  x000D \n x000D \nSo  the parameter change to  DeliveryJob  needs to be reverted and  Parameterized  DeliveryJob  needs to be brought back to satisfy problem 1  And  the  NewDeliveryJob  class needs to be backported to 5 x to satisfy problem 2  I ll followup with a backport PR if we can all agree on this course of action  x000D \n x000D \ncc  eileencodes  Edouard chin  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThe  WebSocket  dependency of  ActionCable Connection  was made configurable in 66901c1849efae74c8a58fe0cb36afd487c067cc x000D \n x000D \nHowever  the reference in  Connection getState  was not updated to use the configurable property  This change remedies that and adds a test to verify it  Additionally  it backfills a test to ensure that  Connection open  uses the configurable property  x000D \n x000D \nResolves  34589", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Resolves  34587  x000D \n x000D \n details  x000D \n summary Issue description  summary  x000D \n x000D \n      Steps to reproduce x000D \n      x000D \n  cd actioncable x000D \n  yarn add   dev left pad x000D \n      x000D \n   x000D \n      Expected behavior x000D \n  There should be changes to  yarn lock  that are tracked by git  x000D \n   x000D \n      Actual behavior x000D \n  There are only changes to  package json  tracked by git   no changes to  yarn lock  tracked by git x000D \n   x000D \n      System configuration x000D \n    Rails version    N A x000D \n   x000D \n    Ruby version    N A x000D \n   x000D \n     Analysis x000D \n   x000D \n  This seems to be because the repository is now using  Yarn Workspaces  https   yarnpkg com lang en docs workspaces    added in https   github com rails rails pull 33079   x000D \n   x000D \n  https   github com rails rails blob a429b29425027006f2bbd4d267928dde1dc2c31a  yarnrc L1 L2 x000D \n  https   github com rails rails blob a429b29425027006f2bbd4d267928dde1dc2c31a package json L3 L10 x000D \n   x000D \n  This makes the  yarn lock  files inside the  actioncable  and  activestorage  directories obsolete  Now the only  yarn lock  that matters is in the repository root  However  that file is currently in the   gitignore   x000D \n  https   github com rails rails blob a429b29425027006f2bbd4d267928dde1dc2c31a  gitignore L19 x000D \n   x000D \n  This seems undesirable  If you have a stale  yarn lock  in the root  it won t be modified to add new packages when you  git pull   even if new dependencies have been added in one of the workspaces  This means that when you run  yarn install   you won t have all the dependencies installed  You have to first run  rm yarn lock  to remove your stale lockfile  and then run  yarn install  to get everything installed  Since the root  yarn lock  is currently in the   gitignore   it s easy to miss that you have this file locally  so it s not obvious that you should run  rm yarn lock  before  yarn install   x000D \n   x000D \n  I think we should remove   yarn lock  from the   gitignore  and check in the root  yarn lock  like we check in  the root  Gemfile lock   https   github com rails rails blob a429b29425027006f2bbd4d267928dde1dc2c31a Gemfile lock   x000D \n   x000D \n  Related thread  https   github com rails rails pull 34370 issuecomment 443449106 x000D \n  details ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I added  require  database setup   in the  activestorage test service s3 service test rb  file to test it in isolation as discussed in  this  https   github com rails rails pull 33795 issuecomment 435152682  commentary ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Better descriptions for   rubocop yml  cops ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nAdds  yield  to parameterized mail test helper so assertions x000D \npassed into  with delivery job  are actually ran ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nCloses https   github com rails rails issues 34574  x000D \n x000D \nAdds docs to clarify that we don t support non primary key ID columns  x000D \n x000D \nI had originally tried adding a warning upon setting  primary key    similar to what we do for  composite primary keys  https   github com rails rails blob 25c076117ce9bb3efcf686c110187206e428b96a activerecord lib active record attribute methods primary key rb L131   but we have test coverage for not hitting the DB while setting the primary key  and I don t want to add a runtime check  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n S3Service upload  was broken in  5 2 1 1  and got fixed in https   github com rails rails pull 34550 x000D \n x000D \nThis adds a shared test ensuring that the  upload  method accepts the extra hash for all the services  x000D \n x000D \nThis takes the keys present in the documentation around  attachments attach  x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFirefox fires click events on left button  right button and scroll wheel  any non primary mouse key  clicks while other browsers don t  x000D \nThis commit stops these firefox specific events from being handled like a primary click before other Rails UJS handlers start processing the event by checking which mouse key was used to trigger the event  x000D \n x000D \n    Other Information x000D \nFirefox fires click events even if the click originated from right clicking or the scroll wheel  x000D \nSee  here  https   developer mozilla org en US docs Web Events Mouse Events   x000D \n x000D \n  A pointing device button  ANY button  soon to be primary button only  has been pressed and released on an element  x000D \n x000D \nAccording to the  Mozilla Docs  https   developer mozilla org en US docs Web Events click   this should be safe for left and right handed mice  x000D \n x000D \n  The button number that was pressed when the mouse event was fired  Left button 0  middle button 1  if present   right button 2  For mice configured for left handed use in which the button actions are reversed the values are instead read from right to left  x000D \n x000D \n    Related issue x000D \n 34541 x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Follow up  33394  x000D \n x000D \n 33394 only fixes the case of scoping with klass methods in the scope x000D \nblock which invokes  klass all   x000D \nQuery methods in the scope block also need to invoke  klass all  to be x000D \naffected by the scoping ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nBackport of https   github com rails rails pull 34569 to  5 2 stable  ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nAllow aliased attributes to be used in   update columns  and   update   x000D \n x000D \nFixes https   github com rails rails issues 34565  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nPass the  connection  to the   instrumenter instrument  call in the  ActiveRecord  ConnectionAdapters log  method  x000D \n x000D \n   Why we need that   x000D \n x000D \nBecause you already pass the  object id     connection id     object id   of the  ActiveRecord  ConnectionAdapters  instance which will then force us to use  ObjectSpace  id2ref  function to retrieve this instance but  x000D \n 1   ObjectSpace  id2ref  is not accessible in JRuby x000D \n 2   headius said this    id2ref should never be use by any code anywhere  It isn t even safe on MRI    Here  https   twitter com headius status 1068188351012966402 x000D \n x000D \nSo when you pass   connection id     object id   it s not that useful  \ud83d\ude15 x000D \nPassing directly the reference of the object is better for users  x000D \n x000D \nIt ll allow us to cleanly solve this issue in the Datadog instrumenter  https   github com DataDog dd trace rb issues 640 x000D \n x000D \nWDYT   x000D \n x000D \n x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Delayed Job is mentioned multiple times in the document  but it is not linked from anywhere  x000D \n x000D \n    Summary x000D \n x000D \nAdded a link to the Delayed Job product page  since it is mentioned in the document  x000D \n x000D \n    Other Information x000D \n x000D \nNone  x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis updates the guides to include examples of useful patterns for organizing  test helpers   and preventing  test helpers rb  from getting bloated  It adds two sections  x000D \n x000D \n    Extracting Files    which discusses extracting modules and where they could be put x000D \n    Eagerly Requiring Helpers    which discusses how to easily require these modules for convenience x000D \n x000D \n    Motivation x000D \n x000D \nI was unable to find good documentation on how to organize test helpers or custom assertions  Unfortunately  the existing documentation s pattern of adding directly to  test helper rb  can lead to that file becoming bloated  The closest related information I could find was  RSpec s documentation on the use of  spec support   https   github com rspec rspec rails blob 8c3a238f8cb26b5821dc4ccaacff2f2088bf2adc lib generators rspec install templates spec rails helper rb L10 L23   x000D \n x000D \n    Why not  test support   x000D \n x000D \nIn my discussion with  rafaelfranca  I had originally leaned towards  test support   However  in the event that the helpers are complex enough to warrant tests  it is not obvious how this should be handled  x000D \n x000D \n  Should the tests be in  test support   and explicitly ignored when eagerly requiring the contents of that directory  x000D \n  Should the tests be in another folder  such as  test unit   x000D \n x000D \n rafaelfranca s suggestion of promoting the helpers to the  lib test  directory has an obvious test location of  test lib   making it a good fit for a recommended pattern  x000D \n x000D \n     x000D \n x000D \n      Either update  34619 after merging this  or update this after merging  34619", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nI had some trouble reading through API docs for ActiveRecord  Querying  so I edited them to be easier to understand  x000D \n x000D \n    Break up long sentences x000D \n    Reword some sentences to clarify subject  predicate  and object x000D \n    Explain drawbacks of using count by sql x000D \n    Reformat documentation to 80 characters wide to improve editability x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes https   github com rails rails issues 34540  x000D \n x000D \nAllows spaces in postgres table names  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes https   github com rails rails issues 34555  x000D \n x000D \n SerializedAttributeTest  appears to leak attribute decorations triggered by  this line  https   github com rails rails blob 00638f31d1f5c914bac32c5f00cb0e0693274b99 activerecord test cases serialized attribute test rb L17  when placed in the test s teardown block  This makes it so the next test that uses an instance of  Topic  is unable to cast its time attributes properly because  Time zone  is nil by default in the AR test suite  x000D \n", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nI stumbled upon this error while trying to make a basic    x000D \n x000D \n    x000D \n2 3 4  008   ActiveRecord  Base establish connection                                                                                            x000D \n2 3 4  009          adapter       sqlite3                                                                                                       x000D \n2 3 4  010          database      path to dbfile                                                                                                x000D \n2 3 4  011                x000D \n    x000D \nAnd it gave out a  x000D \n    x000D \nArgumentError  wrong number of arguments  given 1  expected 2                                                                                                                                    x000D \n        from  Users sergio  rvm rubies ruby 2 3 4 lib ruby site ruby 2 3 0 rubygems errors rb 28 in  initialize                                                                                  x000D \n        from  Users sergio  rvm gems ruby 2 3 4 gems activerecord 5 2 1 1 lib active record connection adapters connection specification rb 203 in  exception                                    x000D \n        from  Users sergio  rvm gems ruby 2 3 4 gems activerecord 5 2 1 1 lib active record connection adapters connection specification rb 203 in  raise                                        x000D \n        from  Users sergio  rvm gems ruby 2 3 4 gems activerecord 5 2 1 1 lib active record connection adapters connection specification rb 203 in  rescue in spec                               x000D \n        from  Users sergio  rvm gems ruby 2 3 4 gems activerecord 5 2 1 1 lib active record connection adapters connection specification rb 190 in  spec                                         x000D \n        from  Users sergio  rvm gems ruby 2 3 4 gems activerecord 5 2 1 1 lib active record connection adapters abstract connection pool rb 950 in  establish connection                         x000D \n        from  Users sergio  rvm gems ruby 2 3 4 gems activerecord 5 2 1 1 lib active record connection handling rb 60 in  establish connection                                                   x000D \n        from  irb  21                                                                                                                                                                            x000D \n        from  Users sergio  rvm rubies ruby 2 3 4 bin irb 11 in   main                                                                                     x000D \n    x000D \n x000D \nIt seems that I was missing a dependency  sqlite3  sigh     and Gem  MissingSpecError  has some problems here in initialisation    it requires 2 arguments    x000D \n x000D \nI replicated the offending line  x000D \n    x000D \n byebug  raise e class   Hello   e backtrace x000D \n    ArgumentError Exception  wrong number of arguments  given 1  expected 2  x000D \n x000D \nnil x000D \n    x000D \n x000D \n x000D \nIt seems like  LoadError  also catches  MissingSpecError   The last one requires 2 arguments  and fails to provide a meaningful error message     http   ruby doc org stdlib 2 4 0 preview1 libdoc rubygems rdoc Gem MissingSpecError html x000D \n x000D \nIn this PR we would be casting that error to a  LoadError  instead when rescuing and re raising a  MissingSpecError   since we would need more complex arguments    x000D \n x000D \nThe alternative would be to create some convoluted logic for handling these 2 types of exceptions", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nI stumbled upon this error while trying to make a basic    x000D \n x000D \n    x000D \n2 3 4  008   ActiveRecord  Base establish connection                                                                                            x000D \n2 3 4  009          adapter       sqlite3                                                                                                       x000D \n2 3 4  010          database      path to dbfile                                                                                                x000D \n2 3 4  011                x000D \n    x000D \nAnd it gave out a  x000D \n    x000D \nArgumentError  wrong number of arguments  given 1  expected 2                                                                                                                                    x000D \n        from  Users sergio  rvm rubies ruby 2 3 4 lib ruby site ruby 2 3 0 rubygems errors rb 28 in  initialize                                                                                  x000D \n        from  Users sergio  rvm gems ruby 2 3 4 gems activerecord 5 2 1 1 lib active record connection adapters connection specification rb 203 in  exception                                    x000D \n        from  Users sergio  rvm gems ruby 2 3 4 gems activerecord 5 2 1 1 lib active record connection adapters connection specification rb 203 in  raise                                        x000D \n        from  Users sergio  rvm gems ruby 2 3 4 gems activerecord 5 2 1 1 lib active record connection adapters connection specification rb 203 in  rescue in spec                               x000D \n        from  Users sergio  rvm gems ruby 2 3 4 gems activerecord 5 2 1 1 lib active record connection adapters connection specification rb 190 in  spec                                         x000D \n        from  Users sergio  rvm gems ruby 2 3 4 gems activerecord 5 2 1 1 lib active record connection adapters abstract connection pool rb 950 in  establish connection                         x000D \n        from  Users sergio  rvm gems ruby 2 3 4 gems activerecord 5 2 1 1 lib active record connection handling rb 60 in  establish connection                                                   x000D \n        from  irb  21                                                                                                                                                                            x000D \n        from  Users sergio  rvm rubies ruby 2 3 4 bin irb 11 in   main                                                                                     x000D \n    x000D \n x000D \nIt seems that I was missing a dependency  sqlite3  sigh     and Gem MissingSpecError has some problems here in initialisation with this Ruby syntax   x000D \n x000D \nI replicated the offending line  x000D \n    x000D \n byebug  raise e class   Hello   e backtrace x000D \n    ArgumentError Exception  wrong number of arguments  given 1  expected 2  x000D \n x000D \nnil x000D \n    x000D \nJust like my initial error  x000D \nand again with the Ruby   new  object syntax  x000D \n    x000D \n byebug  raise e class new  Hello   e backtrace  x000D \n    Gem  MissingSpecError Exception  Could not find  Hello      Users sergio  rvm rubies ruby 2 3 4 lib ruby site ruby 2 3 0 rubygems dependency rb 308 in  to specs      Users sergio  rvm rubies ruby 2 3 4 lib ruby site ruby 2 3 0 rubygems dependency rb 320 in  to spec      Users sergio  rvm rubies ruby 2 3 4 lib ruby site ruby 2 3 0 rubygems core ext kernel gem rb 65 in  gem      Users sergio  rvm gems ruby 2 3 4 gems activerecord 5 2 1 1 lib a x000D \n x000D \n    x000D \n    x000D \nWhich looks correct   x000D \n x000D \nCould this be a backward compatibility issue   x000D \nYet  this was made in Ruby 2 3 and according to rails x000D \n Rails 5 requires Ruby 2 2 2 or newer   x000D \nSo it should be in the clear  x000D \n x000D \nDisc  This might have been a beginners mistake   x000D \n x000D \n x000D \n      EDIT x000D \nTried with ruby 2 4 and activerecord 5 2 1 1 x000D \nSame result  x000D \n    x000D \n2 4 1  007   require  active record  x000D \n    true  x000D \n2 4 1  008   ActiveRecord  Base establish connection  x000D \n2 4 1  009          adapter       sqlite3   x000D \n2 4 1  010          database      path to dbfile  x000D \n2 4 1  011         x000D \nArgumentError  wrong number of arguments  given 1  expected 2  x000D \n        from  Users sergio  rvm rubies ruby 2 4 1 lib ruby site ruby 2 4 0 rubygems errors rb 28 in  initialize  x000D \n        from  Users sergio  rvm gems ruby 2 4 1 gems activerecord 5 2 1 1 lib active record connection adapters connection specification rb 203 in  exception  x000D \n        from  Users sergio  rvm gems ruby 2 4 1 gems activerecord 5 2 1 1 lib active record connection adapters connection specification rb 203 in  raise  x000D \n        from  Users sergio  rvm gems ruby 2 4 1 gems activerecord 5 2 1 1 lib active record connection adapters connection specification rb 203 in  rescue in spec  x000D \n        from  Users sergio  rvm gems ruby 2 4 1 gems activerecord 5 2 1 1 lib active record connection adapters connection specification rb 190 in  spec  x000D \n        from  Users sergio  rvm gems ruby 2 4 1 gems activerecord 5 2 1 1 lib active record connection adapters abstract connection pool rb 950 in  establish connection  x000D \n        from  Users sergio  rvm gems ruby 2 4 1 gems activerecord 5 2 1 1 lib active record connection handling rb 60 in  establish connection  x000D \n        from  irb  8 x000D \n        from  Users sergio  rvm rubies ruby 2 4 1 bin irb 11 in   main   x000D \n2 4 1  012    x000D \n    x000D \n x000D \n x000D \n x000D \n", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "When distributed over multiple logger calls the lines can become intermixed with other log statements  Combining them into a single logger call makes sure they always get logged together ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "If the same block is included multiple times  we no longer raise an exception or overwrite the included block instance variable  x000D \n x000D \nFixes  14802 ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nI fixed lack of modification the following commit  x000D \nhttps   github com rails rails commit 54ed6ad8d7468dc3a0b690e629c7c18497552eb8 x000D \n x000D \nIn rails 5 2 1 1  when I uploaded object using   attach  to amazon s3   ArgumentError  unknown keyword  content type  was occurred ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This prevents the array from being dumped as a DRbObject so we can reduce x000D \ncommunication with the server  x000D \n x000D \nIn DRb  if  Marshal dump  fails   Marshal dump  is executed again after converting the object to  DRbObject   This also possible to reduce the execution of  Marshal dump  by converting to a format that can be marshalized in advance using  DRbObject   x000D \nThis is the same approach to Action Pack s parallel test  Ref  5751b7ea58d7cf259dda30fb42fff51fc6ae93d5 x000D \n x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Currently  ASt build is broken  This PR fixes them   x000D \nhttps   travis ci org rails rails jobs 460454477 ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nfix the merge conflict in  Gemfile lock  x000D \n x000D \n    Other Information x000D \n x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nJust a small typo in Active Storage docs  \ud83d\ude03  x000D \n", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This adds a new method  or  to WhereChain  This can be used to more easily write WHERE clauses that use the OR operator  using familiar hash array string arguments that  where  takes  But unlike the existing ActiveRecord  Relation  or   this will not require repeating the scope  x000D \n x000D \nFor example  where you previously would have had to go with one of these options  x000D \n   ruby x000D \nPost where title   Goodbye   or Post where active  true   x000D \nPost where  title    Goodbye  OR active   true   x000D \n    x000D \nNow you can define the two  or more  operands using the same types of arguments passed to  where   x000D \n   ruby x000D \nPost where or  active   true     created at       Date today     title   Goodbye     x000D \n    x000D \nThis is good for simple  OR  scenarios  where repeating the starting scope would make things messier  If the conditions that need to be combined with  OR  are more complex  then defining two scopes and combining them using the existing  or  method is probably the better option  x000D \n x000D \nMaking this a method on WhereChain ought to alleviate the concerns in  9052 about how a more flexible  or  method would affect what comes before or after it in a method chain  In this implementation  the  OR  operator only gets applied to the conditions included in its own arguments  x000D \n x000D \nThis new method is currently written to use the existing ActiveRecord  or  method under the hood  but I m open to alternatives  x000D \n", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Before this patch  singular and collection associations x000D \nhad different implementations of the  find target method  x000D \nThis patch reuses the code properly through extending the low level x000D \nmethods  x000D \n x000D \n", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes https   github com rails rails issues 34532  x000D \n x000D \nClarifies that all  ActiveRecord  scope bodies must return an  ActiveRecord  Relation  or  nil  ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "First of all  let me explain my use case  I have a heavy JSONB DB column which I want to exclude from most of the queries  that s why I ve decided to use  ignored columns  https   api rubyonrails org classes ActiveRecord ModelSchema ClassMethods html method i ignored column  feature  This column is populated via DB trigger  and sometimes I do want to have it loaded  in such cases I explicitly load it  for instance  using   select         Also  I have a custom  ActiveRecord  Type  to make interactions with the underlying JSON easier  The problem is that with this combination the value I get when I call that accessor is a  value from the DB   custom type is completely ignored  x000D \n x000D \nHere is a simplier example with a string instead of JSON  x000D \n x000D \n   ruby x000D \nclass DeveloperName   ActiveRecord  Type  String x000D \n  def deserialize value  x000D \n     Developer    value   x000D \n  end x000D \nend x000D \n x000D \nclass AttributedDeveloper   ActiveRecord  Base x000D \n  self table name    developers  x000D \n x000D \n  attribute  name  DeveloperName new x000D \n x000D \n  self ignored columns      name   x000D \nend x000D \n x000D \ndeveloper   AttributedDeveloper create x000D \ndeveloper update column  name   name  x000D \n x000D \nloaded developer   AttributedDeveloper where id  developer id  select      first x000D \nputs loaded developer name   should be  Developer  name  but it s just  name  x000D \n    x000D \n x000D \nHere is a reason why it happens  x000D \n1   ignored columns  removes the column from the column hash x000D \n2    select all  can fill  column types  for the result set when DB provides the types  only PostgreSQL does it  so other tests for other DBs cannot reproduce the problem  x000D \n3  when   find by sql  prepares the  ActiveRecord  Result   it uses  column hash  to remove all the types coming from the DB because we know how to handle them x000D \n4  Ignored columns are not in the  column hash  so   find by sql  defines the accessor method with the DB provided type and custom  attribute  is ignored x000D \n x000D \nMy solution is to remove  attributes to define after schema loads  keys from the  column types  along with  column hash  keys because having the custom attributes means that we do know how to deserialize this field ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \n ActiveRecord  Base cache key  will now return a stable key without a timestamp  x000D \nSo we should use  cache key with version  for the example in  1 7 Low Level Caching   x000D \n x000D \nSorry  this is a missing fix for  my pull request I submitted before  https   github com rails rails pull 34363   x000D \n", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve updated the Rails Guide on Testing to reflect testing emails that have been delivered with the  deliver later  method  The example provided in the original guide does not take that that into account or show the more recent assertions that can be used in functional and system tests  x000D \n x000D \nThis is a corrected PR originally submitted  34502 ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nThis pull request executes  test composite primary key out of order  with sqlite3 adapter  x000D \n x000D \nhttps   www sqlite org releaselog 3 7 16 html x000D \n x000D \n  9 Enhance the PRAGMA table info command so that the  pk  column is an increasing integer to show the order of columns in the primary key  x000D \n x000D \nRails 6 supports SQLite 3 8 then we can remove this skip condition  x000D \n x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixes  34506   When running  exec query  with INSERT  or other write commands   MySQL returns  ActiveRecord  Result ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nThis pull request bumps the minimum version of PostgreSQL to 9 3  dropping PostgreSQL 9 1 and 9 2 support  x000D \n x000D \nhttps   www postgresql org support versioning  x000D \n x000D \n  9 1 EOLed on September 2016  x000D \n  9 2 EOLed on September 2017  x000D \n x000D \n9 3 is also not supported since Nov 8  2018   https   www postgresql org about news 1905  x000D \nI think it may be a little bit early to drop PostgreSQL 9 3 yet  x000D \n x000D \nHere are other changes included in this pull request  x000D \n  Deprecated  supports ranges   since no other databases support range data type x000D \n x000D \n  Add  supports materialized views   to abstract adapter x000D \nMaterialized views itself is supported by other databases  other connection adapters may support them x000D \n x000D \n  Drop CI against PostgreSQL 9 2 x000D \n x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "When the  Duration  class was introduced in 276c9f29  the  parts  were x000D \nrepresented as an array of arrays x000D \n for example     seconds  5     days  3     seconds  7      x000D \nAt that time the  reduce  in   inspect  made sense  x000D \nsince we would need to get the totals for each part x000D \n the example would become    seconds  12  days  3      x000D \n x000D \nWith the current version of  Duration  we call  to h  on the  parts  x000D \n immediately on initialize  https   github com rails rails blob b2eb1d1c55a59fee1e6c4cba7030d8ceb524267c activesupport lib active support duration rb L211   see 32f215c3 for details on why we do that   x000D \nso now the  reduce  doesn t seem to be doing x000D \nanything meaningful  x000D \n x000D \n I was looking at this method because I was pondering https   github com rails rails issues 34369 ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Updating the Testing Guide to Reflect Emails Enqueued With ActiveJob  x000D \n x000D \nI ve updated the Rails Guide on Testing to reflect testing emails that have been delivered with the  deliver later  method  The example provided in the original guide does not take that that into account or show the more recent assertions that can be used in functional and system tests  x000D \n x000D \nThis particular PR reflects the current 5 2 functionality  A separate PR for 6 0 has been submitted with updated documentation as well ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes https   github com rails rails issues 34514 x000D \n x000D \nThe pluralized method created to access each enum now raises an error when attempting to modify the original  x000D \n x000D \nProblem being addresed  x000D \n   ruby x000D \nexpected copy   Model states     foo   0   bar   1   baz   2  x000D \n x000D \n  All the application would be silently affected with the following lines x000D \nexpected copy delete  foo     previously deleted foo from Model states x000D \nexpected copy  bad key     10   previously added a new key on Model states x000D \n    x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes https   github com rails rails issues 34514 x000D \n x000D \nThe pluralized method created to access each enum now returns a copy of  enum values   preventing modifications on the original   x000D \n x000D \nProblem being addresed  x000D \n   ruby x000D \nexpected copy   Model states     foo   0   bar   1   baz   2  x000D \n x000D \n  All the application would be silently affected with the following lines x000D \nexpected copy delete  foo     previously deleted foo from Model states x000D \nexpected copy  bad key     10   previously added a new key on Model states x000D \n    x000D \n x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nChange the homepage link to https ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Adds   to README md to make title a question ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \nThis patch improves readability by using  direction   instead of  rtl flag  as  CSS does  https   developer mozilla org en US docs Web CSS direction   x000D \n x000D \nI have also took the chance to  x000D \n  Use   to sym  when getting direction s  env value  as it could be a String  x000D \n  Removed the call to  FileUtils rm  as  FileUtils mv   already overwrites  https   ruby doc org stdlib 2 5 1 libdoc fileutils rdoc FileUtils html method c mv  the assets if it exists  x000D \n x000D \n    Other Information x000D \nContinues   34486 x000D \nGives credit to  paracycle x000D \n x000D \nr   rafaelfranca ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We use this at GH but I m not 100  sure whether others will find this useful  Thoughts  x000D \n x000D \nThe other open question I have is whether the  write query   should be defined by  is a query that writes  or  is a query that is not reading   ie not select  etc   For now I chose some common write queries to demonstrate the goals of this feature but I d love input into what  rafaelfranca  tenderlove and  matthewd think about this  x000D \n x000D \n    x000D \n x000D \nThis PR adds the ability to block writes to a database even if the x000D \ndatabase user is able to write  ie the database is a primary and not a x000D \nreplica   x000D \n x000D \nThis is useful for a few reasons  1  when converting your database from x000D \na single db to a primary replica setup   you can fix all the writes on x000D \nreads early on  2  when we implement automatic database switching or x000D \nwhen an app is manually switching connections this feature can be used x000D \nto ensure reads are reading and writes are writing  We want to make sure x000D \nwe raise if we ever try to write in read mode  regardless of database x000D \ntype  x000D \n x000D \nThis should be used in conjunction with  connected to  in write mode  x000D \nFor example  x000D \n x000D \n   ruby x000D \nActiveRecord  Base connected to role   writing  do x000D \n  Dog connection while blocking writes do x000D \n    Dog create    will raise because we re blocking writes x000D \n  end x000D \nend x000D \n x000D \nActiveRecord  Base connected to role   reading  do x000D \n  Dog connection while blocking writes do x000D \n    Dog first   will not raise because we re not writing x000D \n  end x000D \nend x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  See https   github com rails rails pull 29092 issuecomment 437572543 x000D \n  After introducing cache versioning  even with cache versioning off x000D \n  there s a performance regression when passing an Active Record x000D \n  relation to cache x000D \n  This happens in ActiveSupport  Cache inside  normalize version  x000D \n  This method would check if the relation responds to cache version x000D \n  and if not  would recrusively normalize it with  to a  x000D \n  This would lead to the relation being retrieved from database and x000D \n  enumerated  causing the performance regression x000D \n  This fix simply adds  cache version  returning  nil  to Active Record x000D \n  relations x000D \n  This is a temporary stopgap  until relation cache versioning is x000D \n  implemented  See https   github com rails rails pull 34378", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\u2026nqueued with ActiveJobs  x000D \n x000D \n    Summary x000D \nI ve updated the Rails Guide on Testing to reflect testing emails that have been delivered with the  deliver later  method  The example provided in the original guide does not take that that into account or show the more recent assertions that can be used in functional and system tests  x000D \n x000D \n    Other Information x000D \nThis is my first PR  so please let me know how I could make this better ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixes  34493 ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nExpand the documentation for  slice   method in order to make explicit what it really does  x000D \n x000D \nTaking ActiveSuport  Multibyte as example  x000D \n x000D \nhttps   github com rails rails blob 4800fd072f2a8349e92cf9386da4b66de712a669 activesupport lib active support multibyte chars rb L96 ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The connection handler was using the RuntimeRegistry which kind of x000D \nimplies it s a per thread registry  But it s actually per fiber  x000D \n x000D \nIf you have an application that uses fibers and you re using multiple x000D \ndatabases  when you switch the connection handler to swap connections x000D \nnew fibers running on the same thread used to get a different connection x000D \nid  This PR changes the code to actually use a thread so that we get x000D \nthe same connection  x000D \n x000D \nFixes https   github com rails rails issues 30047 x000D \n x000D \ncc   tenderlove  arthurnn  matthewd  rafaelfranca ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFixes https   github com rails rails issues 34479  x000D \n x000D \nDisallows multiple uses of  root  within the same routing context without  as    x000D \n x000D \nThe referenced issue maps the first  root  to   form  foo   and a second one to      When calling  root path  in the template rendered by      Rails knows to call the first root path  because it is the one with the name   The second root is not used  and can t be referenced by a named route helper because it doesn t have a name  x000D \n x000D \nThis whole situation can be avoided by not assuming a root route should be unnamed if one already exists  x000D \n x000D \nr   rafaelfranca ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Summary x000D \n x000D \nFix typo in  development dependencies install md   everyting    everything", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Currently the query cache is only aware of one handler so once we added x000D \nmultiple databases switching on the handler we broke query cache for x000D \nthose reading connections  x000D \n x000D \nWhile  34054 is the proper fix  that fix is not straight forward and I x000D \nwant to make sure that the query cache isn t just broken for all other x000D \nconnections not in the main handler  x000D \n x000D \ncc   rafaelfranca  matthewd  tenderlove ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sorry  but this isn\u2019t an acceptable fix for the referenced issue  It\u2019s a feature that a rich text attribute isn\u2019t backed by a text column on the original model\u2019s table ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks   georgeclaghorn for taking a look  Even I had a little doubt in my mind about the fix because to fix the test cases I had to add migration and make them database column s on the model and documentation here https   edgeguides rubyonrails org action text overview html examples  did not mention anything regarding  has rich text  isn\u2019t required to be backed by a text column on the original model\u2019s table  x000D \n x000D \nBut I learned a lot in debugging the issue \ud83c\udf89 \ud83d\ude04  x000D \n x000D \nAnother way to fix this would be by making changes in the dirty tracking  attribute changed    for the rich text field ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I can live with a slightly ugly deprecation warning since they have such a short life  It\u2019s better to keep the history for a deprecation warning I find ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  I can live with a slightly ugly deprecation warning since they have such a short life  x000D \n x000D \nThat is a valid point  Thanks ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "There is no reason to mention about all of the content type  but it is worth especially if  application json  to me ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ohh   sorry I forgot to add  skip ci  to commit message  x000D \n x000D \n kamipo  x000D \nThank you review  x000D \nI made the following corrections  x000D \n x000D \n  Minimized explanation x000D \n  Added    json  and   xml  example to TIP x000D \n x000D \nTell me If OK with you  x000D \nWhy is  application   json  particularly worthwhile  x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Why is  application   json  particularly worthwhile  x000D \n x000D \nSince you removed that in the first commit 598a289638d0d7b9000f77b1838afc525eaa03d8  in other words  I meant there is no reason to remove the  application json  example at least  x000D \n x000D \nThis looks cosmetic to me  x000D \nWe generally do not accept a cosmetic change  x000D \nWhat is worth of this change more than before  x000D \n x000D \nhttps   guides rubyonrails org contributing to ruby on rails html write your code x000D \n x000D \n  Changes that are cosmetic in nature and do not add anything substantial to the stability  functionality  or testability of Rails will generally not be accepted  read more about  our rationales behind this decision  https   github com rails rails pull 13771 issuecomment 32746700    x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kamipo  x000D \nThank you  I understood  x000D \nThe reason for this change is as follows  x000D \n x000D \nIn original sentences default  of MIME content type is described as  text   html  or  application   json  or  application   xml   but actually many content types are set  x000D \n x000D \nI suggested updating because I thought that confusing developers who read guide ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "But if you think so on the committer it is okay to close it ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This PR will close ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you please add these assertions to the first test  named \u201cattaching existing blobs to an existing record\u201d  and remove this one ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ditto  Let\u2019s fold these assertions into the first test  named \u201cattaching an existing blob to an existing record \u201d", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " georgeclaghorn   Merged both test assertions as suggested \u2705 ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Does the method signature in this error message need updating ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "How is the virtual path built here  like it was with Path build in decorate  I don\u2019t see how decorate can be removed yet ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "1    find templates  uses  Path build  and passes that to  query   https   github com rails rails blob 0e13941dbe9c4840175e5c6f5b2c3f572249a4ec actionview lib action view template resolver rb L210 L213  x000D \n2    query  passes the virtual path to the template constructor  https   github com rails rails blob 0e13941dbe9c4840175e5c6f5b2c3f572249a4ec actionview lib action view template resolver rb L222 L228 ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "ah yep  I ll fix that", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ah  thanks  I was looking for the build path method  which uses Path build  and found no occurrences  so I got confused  Seems like we could kill that build path private method  I\u2019ll take a look later unless you want to look into it ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think this needs to be x000D \n x000D \n    suggestion x000D \n        find templates name  prefix  partial  details  false  locals  x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "You re totally right   I ll rm that method   Thank you ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Should we handle the case were people to marshal load an object created before this change ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I don t think so   I think the reason we introduced the marshal stuff is for parallel testing   according to this comment  https   github com rails rails blob 082130d1d43620ca29c2f2f169a5059fa0065a8c actionview lib action view template rb L265 L267     Those shouldn t stick around ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udc4d ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I updated this PR to include a commit that deletes the  decorate  method and makes the  Template  object a read only object ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I\u2019m guessing what\u2019s identifier and short identifier here is what\u2019s path    and virtual path elsewhere in Action View  Might be nice if the naming was unified for our internals  Though that\u2019s another PR ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think they are a little different   virtual path  is relative to the view directory  ex   app views    where  short identifier  is relative to the app root  or from     if from a gem outside   I think it s also possible for identifier not to be from the FS if the template comes from some other source  x000D \n x000D \nI do agree that it does feel like something here could be unified though ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Do we print the inspect output in logs or the log subscriber  Could be good to double check what a rendering log output looks like  x000D \n x000D \n\ud83d\udc4d Good idea  Logging looks unchanged in my test app  I also tested an exception from a view and it looked normal  x000D \n x000D \n img width  691  alt  screen shot 2019 02 25 at 14 33 30  src  https   user images githubusercontent com 131752 53373626 db1bd000 390a 11e9 90db 4374ed4e90cf png   x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Gotcha  Thanks for checking both ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Why should we do deprecation here in HTML and in Text  They\u2019re both marked nodoc ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "tbh  I think we can remove them   The problem is that these are  supposed  to quack the same as instances of  Template    I really don t think people are calling  formats  on anything but instances of  Template   but I figured I d add the deprecation warning since these are  duck typing buddies  with  Template   x000D \n x000D \nActually I think these should probably share inheritance hierarchy with  Template   but that s a later patch ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " we were definitely calling  formats  on Text   HTML instances  and the deprecation warning helped me track   fix them ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " tenderlove Method  formats  was renamed to  format   Can I update the test description here to  format  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Changed here  35406  ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\u2764\ufe0f", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \n    def formats     x000D \n   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Are you thinking that eventually formats on the template will just be format   I\u2019m a little confused as to why it\u2019s an array today  I guess  ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kaspth https   github com rails rails pull 35406", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I didn t add leading parenthesis to the sqlite3 test because sqlite3 didn t consider it valid syntax ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " matthewd I fixed this   memcache store tests are running on Buildkite   https   buildkite com rails rails builds 59125 961452d7 452f 4d8b ae40 300ad492dc45 x000D \n hr   x000D \nEdited  x000D \n x000D \nOh  there is still something to fix  x000D \n   bash x000D \nW   2019 02 26T22 09 35 905507  16   WARN      localhost 11211 failed  count  0  Errno  EADDRNOTAVAIL  Cannot assign requested address   connect 2  for  localhost  port 11211 x000D \n    x000D \nFixed  https   buildkite com rails rails builds 59128 09e12043 28c3 417e 8021 bda18a92de60", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\ude47\ud83c\udffb\u200d\u2642\ufe0f heart ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Closing since we don t accept backport PRs  only if asked ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hmm  will investigate the test failures in the next few days and report back ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " Sigh   The app s  mailers  are eager loaded in production  so they subclass  ActionMailer  Base  before  ActiveSupport on load  after initialize    and hence before being configured  in this PR   x000D \n x000D \nThe ActionMailer  design is in general highly problematic  There s probably a reason for it  but presumably it would make a lot more sense if it just read the config on demand  when creating mail  rather than differing in behavior when eager loading is enabled  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yeah  we can t change the way configurations are loaded in the framework  x000D \n x000D \nThe correct way too add deliveries methods is using  x000D \n x000D \n    x000D \nclass Railtie     Rails  Railtie x000D \n  initializer  foo mail register delivery method  do x000D \n    ActiveSupport on load  action mailer  do x000D \n      add delivery method  foo  FooMailer x000D \n    end x000D \n  end x000D \nend x000D \n    x000D \n x000D \neven if you always use this way it is not possible to set the  config action mailer foo settings  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Unfortunately  no it doesn t work  that will raise a missing method error because  add delivery method  is set to be called once  ActionMailer  Base  is loaded  which is too late  x000D \n x000D \nBasically it s a catch 22  we need the ActionMailer loaded to add a delivery method  but we need the delivery method added before hand so the delivery method can be configured as ActionMailer is loaded  x000D \n x000D \nThe approach I ve taken in this PR is likely too major of a change  x000D \n x000D \nThe alternative is to add  method missing  method that matches       settings   and stores the hash  even though the delivery method is not available yet  It s a lot less invasive than this approach ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Just to clarify the issue is eager loading  It  will  work in development because the gems initializer and hence its  on load  action mailer   hook gets called before the config is copied  However  in production  eager loading  ActionMailer is loaded before the gems initializer is called so the hooks get called in the reverse order and an error is raised  x000D \n x000D \n  EDIT    My apologies  this is misleading  eager loading only comes into play when using this PR ", "annotation": {"notes": "", "label": ["greeting"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "In eager load  ActionMailer  is not loaded before the gems initializer  It only happens in the application Finisher so it is after all railties initializers are run  x000D \n x000D \nCan you create an example application reproducing the issue  It would be good if you don t use any gem and instead build a rails plugin inline because the problem might be in the gem you are using ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Closing this PR as the approach being taken is too major of a change e g  disabling eager loading of  app mailers   x000D \n x000D \nHowever  I ve opened https   github com rails rails issues 35416 to document the issue and will try my hand at a less intrusive PR  x000D \n x000D \n rafaelfranca An example application  and a fake  foomailer  gem  reproducing the issue is available in the issue mentioned above ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  kamipo you are super fast and active in merging PR s  Thanks a ton ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the PR  but it is fine as is ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  but this is already covered by  lib active support rb   which should always be required before any individual files within the gem ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you review and merge ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " dhh  I think you need to add extra 2 spaces here  The example structure is broken here https   github com rails rails blob negative enum scope activerecord CHANGELOG md", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Also  I don t know if it matters or not  but we should inherit class  Post  from  ApplicationRecord  instead here", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ll do the indent  but ApplicationRecord is really a Rails concern  not an Active Record concern  Maybe a fine point of difference  but it s there ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " dhh   I think we should also add  post not active   like we already have  post active    What do you think ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Not needed  You can always negate a predicate method in a variety of ways with       unless   and a million other ways  Not so with a scope  thus the need for the help there ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What Inflector does the constantize and safe constantize methods end up referring to  Zeitwerk\u2019s or Active Support\u2019s  I\u2019d think the latter  so I\u2019m confused why this is needed  x000D \n x000D \nAlso sounds like Zeitwerk should have a default inflector akin to its logger ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Correct  in this file  Inflector  is referring to the ActiveSupport  Inflector   and everything in this file is all well and good  This setting is so that https   github com fxn zeitwerk blob ccd4b76647e9ca90f0811b7b0f98782b07c4739a lib zeitwerk loader rb L341 uses the same inflections this module would use to populate the constants that zeitwerk then autoloads  In the test I added  if we didn t make this change  zeitwerk would populate    GraphqlController  instead of    GraphQLController   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Oh  This is an overlook  totally forgot about the inflector  x000D \n x000D \nJust a heads up  I ll write back a bit later  Please note that the method called by Zeitwerk needs to have arity 2  from memory this probably needs a wrapper  x000D \n x000D \n kaspth you can t really have a global default inflector setter  it is fundamental that each instance has total control over its inflector  When you ship a gem  you cannot get the inflector changed  your code depends on the inflector you configure  Logging is a bit different  because the only purpose is to debug problems  gems are expected to ship with the default  nil  logger  x000D \n x000D \nWill write back later ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Please note that the method called by Zeitwerk needs to have arity 2  from memory this probably needs a wrapper  x000D \n x000D \nAh  oops  you re totally right   ActiveSupport  Inflector camelize  does have airty 2 which is why this worked for me and the tests pass  but the second argument is  uppercase first letter  as opposed to the  abspath   Sounds like we need a  Zeitwerk  ActiveSupportInflector  or a  ActiveSupport  ZeitwerkIntegration  Inflector  wrapper doodad  In which project do you think it should live ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It was easier for me to implement it than to communicate the details  so I fixed this in 39b2a6374b49dba43606b1a806899e49aa055a81 giving of course credit to you too for the work on this patch  x000D \n x000D \nThat was a good catch  thanks ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you note about that like here  We can drop the workaround if older SQLite3 support is dropped in the future  x000D \n x000D \nhttps   github com rails rails blob a796de1bd644b54e2c27577319c262af0de56e8f activerecord lib arel visitors mysql rb L68 L73", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  1  Make sense  I fixed  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Passed both Travis https   travis ci org rails rails jobs 497367021  and buildkite https   buildkite com rails rails builds 59012 5991b123 d333 45b3 bad2 344eabc789c4   x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "When I run the test from  35372 you can see that the methods go away  x000D \n x000D \n    x000D \n  be ruby a controller test rb x000D \nMethods  349 x000D \n 0   Methods  375   x000D \n 1   Methods  361   x000D \n 2   Methods  351   x000D \n 3   Methods  462   x000D \n 4   Methods  533   x000D \n 5   Methods  414   x000D \n 6   Methods  518   x000D \n 7   Methods  448   x000D \n 8   Methods  405   x000D \n 9   Methods  388   x000D \n    x000D \n x000D \nThe number of methods isn t stable  but it s not growing  it just goes up and down with GC  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " tenderlove I think the comment above needs to be updated to talk about the new argument ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "CI is broken so I don t think we are ready to relax this version constraint ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Related   34799 ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Duplicate of  35209 ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I merged just because this is the getting started guide ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the PR  but it is correct as is  x000D \n x000D \nhttps   github com rails rails blob b75192845a6aa89b35c857e9f3de443ae1a0fbd5 activerecord test cases associations has and belongs to many associations test rb L460 L469", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you for teaching me", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   diff x000D \ndiff   git a activerecord lib active record relation calculations rb b activerecord lib active record relation calculations rb x000D \nindex 3fb1fdc605  4f9ddf302e 100644 x000D \n    a activerecord lib active record relation calculations rb x000D \n    b activerecord lib active record relation calculations rb x000D \n    233 11  233 11    def perform calculation operation  column name  x000D \n         distinct   distinct value x000D \n  x000D \n         if operation     count  x000D \n           distinct   select for count if distinct select  select for count  x000D \n  x000D \n           column name     select for count x000D \n           if column name     all x000D \n             if distinct     group values any     select values empty     order values empty   x000D \n             if  distinct x000D \n               distinct   distinct select  select for count  if group values empty  x000D \n             elsif group values any     select values empty     order values empty  x000D \n               column name   primary key x000D \n             end x000D \n           elsif distinct select  column name  x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you remove this line in favor of https   github com rails rails pull 35361 discussion r259570692 ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This should return 5  since it should be the same result with  Account select  DISTINCT accounts firm id   group  accounts firm id   load size  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Don t use   to h   but just use a hash like here  x000D \n x000D \nhttps   github com rails rails blob 1cf72affe0ac0c7dac557fe463d2153c758bf7af activerecord test cases calculations test rb L765 L769", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Also I think the test cases about  size  shouldn t be on  test cases calculations test rb  file x000D \n x000D \nYes  just put them in  test cases relations test rb  for now  x000D \n x000D \nhttps   github com rails rails blob be442ccd8342baf39e73b01a6fdd38e1a3b15c2c activerecord test cases relations test rb L957 L973", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Use double quotes  x000D \n x000D \nhttps   codeclimate com github rails rails pull 35361 x000D \n x000D \n  image  https   user images githubusercontent com 12642 53363588 36d47080 3980 11e9 86bc 7ca80ea496f9 png  x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Somehow executing  x000D \n   ruby x000D \nAccount select  DISTINCT accounts firm id   group  accounts firm id   size x000D \n    nil    1  1    1  2    1  6    2  9    1   x000D \n    x000D \nNow returns the hash  But I agree that it should return the same of   x000D \n   ruby x000D \nAccount select  DISTINCT accounts firm id   group  accounts firm id   load size x000D \n  5 x000D \n    x000D \nShould I investigate this for this PR   x000D \n x000D \n", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Woops sorry   man facepalming  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Done ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "There is a weird situation added a test with  includes   x000D \n   ruby x000D \ndef test size with eager loading and manual distinct select and includes x000D \n  accounts   Account select  DISTINCT accounts firm id   includes  firm  order  firms id   x000D \n x000D \n  assert queries 1    assert equal 5  accounts size   x000D \n  assert queries 1    assert equal 5  accounts load size   x000D \nend x000D \n    x000D \nIt raises  x000D \n   ActiveRecord  StatementInvalid  SQLite3  SQLException  near  DISTINCT   syntax error  x000D \nI can investigate further if you want   x000D \n x000D \nBut this also gets raised when using  x000D \n   ruby x000D \nAccount distinct  credit limit  select  DISTINCT accounts firm id   count  all  x000D \n  ActiveRecord  StatementInvalid  SQLite3  SQLException  near  DISTINCT   syntax error x000D \n    x000D \n x000D \nWhat do you think about this ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Feel free to create another PR ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is an issue for  count  with eager loading  x000D \nI d prefer to address it in another PR  since it is a little complex than what this PR fixes ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "As an user  I expect   group size   same as   group count   to return an hash  And doing   load size     to a size  would return a collection of the instances of the model and then how many of them there are ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Originally   relation size  behaves fragile  that is a breaking change though  x000D \n x000D \n   ruby x000D \nrelation   Post left joins  comments  group  id  x000D \nrelation size      return a hash x000D \nrelation each    record  puts record id   x000D \nrelation size      return an integer x000D \n x000D \nrelation   Post left joins  comments  group  id  x000D \nrelation count      return a hash x000D \nrelation each    record  puts record id   x000D \nrelation count      return a hash x000D \n x000D \nrelation   Post left joins  comments  group  id  x000D \nrelation length      return an integer x000D \nrelation each    record  puts record id   x000D \nrelation length      return an integer x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ok I ll work it in another PR  ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "But in my opinion  size  and  load size  should have the same return value the difference should be that when using just  size  if the collection is loaded it will not execute a query but if it isn t it executes a query without loading the collection instances   x000D \n x000D \nThat they return different values when the collection is loaded and when it isn t is confusing  ", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This change also affects to  count  all    x000D \nCan you add test case for  count  all   as well  e g  ebc09ed9ad9a04338138739226a1a92c7a2707ee  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for your reply  Totally  I will add more tests cases  ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hey  kamipo I added more test cases  as some of them didn t gave the correct original count value when reassigning the  column name    x000D \n x000D \nSo in order to fix the issue and keep the functionality instead of changing the  column name    distinct  is assigned with the  select for count  values   x000D \n x000D \nI think this fixes the issue with the minor impact   x000D \n x000D \nHowever in terms of code I don t think it s very understandable   Assigning  distinct  to  select for count  but then 4 lines below assign  distinct  to  nil   when  column name  isn t   all  is very confusing   x000D \n x000D \nWhat do you think would be better   x000D \n x000D \nAlso I think the test cases about  size  shouldn t be on  test cases calculations test rb  file but inside  test cases relation  folder  Do you think that creating a file  test cases relation size test rb  there would be a good approach   x000D \n x000D \nThanks  ", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Done  Thank you so much for your help  This is my first Rails PR  smile   Is it correct  ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  And congrats on your first Rails contribution \ud83c\udf89 ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Weird    This test isn t failed locally    I suspect a bug on SQLite3    x000D \n x000D \nhttps   travis ci org rails rails jobs 496726410 L1198 L1208", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It did fail on buildkite as well https   buildkite com rails rails builds 58981", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "ah    skipped on buildkite as well for now a333ba3f7f24dff3c50c7cf26a2fe2caa748a851 ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can we use  I18n with locale  instead  x000D \n x000D \n   ruby x000D \ntest  form with rich text area having placeholder with locale  do x000D \n  I18n with locale  placeholder do x000D \n    form with model  Message new  scope   message do  form  x000D \n      form rich text area  title  placeholder  true x000D \n    end x000D \n  end x000D \n x000D \n        x000D \n   ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " georgeclaghorn   Yep  Used  I18n with locale  instead of  with locale   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " georgeclaghorn   Sorry for ping you so much  Is it okay if we extract code for  ActionView  Helpers  Tags  ActionText  and  ActionView  Helpers  FormHelper  in separate files like we have in  ActionView  for text field  etc ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think it\u2019s fine for them to stay in one file for now ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks   abhaynikam  This could use some tests along the lines of the ones  here  https   github com rails rails blob 49f9dff9b6ba1451d8c85927d5f75327bd2322d9 actionview test template form helper test rb  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " georgeclaghorn   Added tests  Do we need to add changelog entry for the fix  This is not yet released so I don t think it should be still wanted to confirm ", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Incrementing the lock version invalidates any other process s optimistic lock  which is the desired outcome  the record no longer looks the same as it did when they loaded it ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "If so  we need the update not only in  touch all  but also in  update counters  and  update all  ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Changed to opposite direction c14e161 ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you for the pull request  Duplicate of  22440 ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca I m sorry for this duplicate ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is caused by 311f00116738df175c12cb36bebe79587f88e00b  x000D \nCan you address it in  when Symbol   x000D \n x000D \n   diff x000D \ndiff   git a activerecord lib active record relation query methods rb b activerecord lib active record relation query methods rb x000D \nindex 3566a57ddc  5563dfb6c9 100644 x000D \n    a activerecord lib active record relation query methods rb x000D \n    b activerecord lib active record relation query methods rb x000D \n    1157 9  1157 9    def preprocess order args order args  x000D \n         order args map  do  arg  x000D \n           case arg x000D \n           when Symbol x000D \n             field   arg to s x000D \n             arel column field    x000D \n               Arel sql connection quote table name field   x000D \n             arg   arg to s x000D \n             arel column arg    x000D \n               Arel sql connection quote table name arg   x000D \n               asc x000D \n           when Hash x000D \n             arg map    field  dir  x000D \n   ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kamipo  x000D \nThank you review  x000D \nI also changed it because the code that you presented was good ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "OK  x000D \nI squashed commits into one ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " alkesh26 I merged this by mistake  Please note this affects code changes   ci skip  should not be added in such cases  x000D \n x000D \nWe should run full CI", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " vipulnsward sorry I forgot about this change https   github com rails rails pull 35342 files diff 0f66ef96762e67b6746a49de6182c1a4R256  x000D \n x000D \nWill add   ci skip   only when my changes are related to documentation fixes  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We only deprecate things that were public API  I don t remember building  ActionView  Base  instances being public API before  Do you have a reason why you are building those instances without using public APIs ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This removes memoization  which I think we don t want  Please revert this line and only remove the  gsub  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I would say this goes against the current test suite s standards  You should be able to run tests on any DB by changing  ARCONN  and using  if  statements to not run tests that don t apply to specific adapters  Attaching a DB also doesn t seem to work in CI  Can you refactor this to use the standard test schema ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This only accounts for a single dot  but you can have multiple dots in a table name  eg   field     a b c  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I undo things to exactly how things were before your fix   super  just ends up calling  quote column name   which does cache things  I don t mind changing it back if you prefer  Let me know ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This uses  rpartition   so it splits from the last dot  x000D \nFor your example  the result would be    a b         c   ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Weird  the whole test suite passed on my rails dev box  I will not have time to look into it until tomorrow  x000D \n x000D \nThere are plenty of tests that are specific to one adapter like that  I basically copied the  schema test rb  file name and basic structure from the postgresql side of things  https   github com rails rails blob master activerecord test cases adapters postgresql schema test rb  there is also an equivalent file in the mysql side  x000D \n x000D \nI m not quite sure what is wrong here to be honest  I work a lot by following examples I find in the project that match my need  Could you show me what you expect  x000D \n x000D \nI agree a single set of tests to checks schema s behaviors  with conditions to setup the schema correctly for each databse would be optimal  thats what I do in the gem that found this issue  But I m not confortable doing a refactor of hundreds of lines  all 3 databases s schema test files  of test code in this massive test suite ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you fix it in the  quote table name   x000D \nHere is not only place we use  quote table name  ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ah  on second thought this is an edge case to do with a specific adapter  I had forgotten we have adapter specific tests  this is in the right place  \ud83d\udc4d Still  I think the implementation is off  Let s not attach the database and try creating a one off table with a dot in the name  Something like  this  https   github com rails rails blob fd8e5eee014b8e8fb3015a312c5c1217f1273a37 activerecord test cases adapters sqlite3 json test rb L11  maybe ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "hm   I see the problem  x000D \n x000D \nhttps   github com rails rails blob 825d70b4069df3411b77636c98ca668292bbc03a activerecord lib active record connection adapters abstract schema creation rb L42 L44 x000D \n x000D \nWe should use  quote table name  only to quote actual table name or schema qualified table name  x000D \nHere is one of the case of quoting table name qualified  column name   x000D \nWe probably need new method for the purpose ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I can transfer my logic to  Quoting  under the name  quote table and column name   x000D \n x000D \nThe issue is how to deal with column names which might also contain dots  My fix doesn t deal with those  that s why I didn t want to make a method  it wasn t as general purpose as I would like ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yes   abstract table quoting  https   github com rails rails blob dfa857ef25b5abf7485e4f7115e4a311e00c599c activerecord lib active record connection adapters abstract quoting rb L72  calls  quote column name   but it uses the wrong ivar  I would prefer keeping them separate as they were before ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "At least the  quote table name  is also used for quoting the order by column  x000D \n4650874073bef4f02da3c2b0bfc4ba2a6fd5d562 would be broken by this change for now ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Okay  but then do I use  super  or not  Because if I do  then both ivar will cache the value which feels wasteful ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "PostgreSQL does create an actual schema for its tests  so in my mind I should do the same   x000D \n x000D \nI understand that you don t want me to use  ActiveRecord  Schema   I can look at doing it from the connection object as you ask  That was the first thing I did  but I had the weird issue where  Thing first  and  Thing create  would return a  Thing  that had nil as id  This gets solved by using the Schema  I guess it s another bug down in the rabbit hole  x000D \n x000D \nI ll look into it tomorrow ", "annotation": {"notes": "", "label": ["greeting"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Alright  thnx  I ll rebase and fix test again when I move the logic to Quoting ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Okay  so the root cause of all of this is absolutely bonkers  Nothing is what it seems and I was wrong  But the story is interesting  x000D \n x000D \nTL DR  Quoting schema tables is the same in SQLite as the other databases  No weird need for      the fix is correct and just made my code start actually testing the right thing and find a subtle bug elsewhere  SQLite s Attached database was never actually supported  and supporting them appears not worth the trouble  x000D \n x000D \nBecause of the bad quoting that was going on before the fix  when my gem  in its tests  would create a table in a database  using  create table  my schema thing  do        the actual generated SQL would be a  CREATE TABLE  my schema thing     This is actually a table with a name that contain a dot  and not a table that refers to the schema  x000D \n x000D \nThen  later on  the code in all my tests also also used the quote table name  and so everything always used a table name with a dot instead of testing actual schemas  x000D \n x000D \nWhat threw me in this weird quoting behavior understanding in 6 0 is that I would get syntax errors when trying to use the models  But that was not form the select or such things  No  It was from a call to PRAGMA which does things special for schemas  attached database   See  this is the query to get the table information in SQLite  x000D \n x000D \n  PRAGMA table info   quote table name table name      x000D \n x000D \nHowever  when dealing with database  the actual syntax is x000D \n x000D \n  PRAGMA schema name table info table name    x000D \n x000D \nBut those kinds of calls are not shown in the log  so I would get confused thinking the problem was in the previous query  because the problematic query is not shown in the error messages    which i don t know why   x000D \n x000D \nNow that part could be fixed with some code to split the table name into schema   table in an intelligent way  so that quoted parts remain the same   But here is a the kicker  x000D \n x000D \nIn a  SELECT  in SQLite  you cannot specify the database at the attributes parts  Meaning  x000D \n x000D \n SELECT bar id FROM foo bar  is valid  but x000D \n SELECT foo bar id FROM foo bar  is not valid  its a syntax error  x000D \n x000D \nSo in order to generate correct queries here  things get even more wild  It s clear to me that this is not worth my trouble  or anyone s   x000D \n x000D \nSorry for the waste of time  Such a rabbit hole   ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We don\u2019t necessarily want to expose every attribute just because  x000D \n x000D \nBy the way  sometimes it can be annoying for contributors to \u201cstalk\u201d ones commits and do follow up PRs  I\u2019d recommend commenting on the original PR with a question if it was intentional  Thanks ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The LookupContext is private API  why bother deprecating the attribute reader writer ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hehe  I ll \u2702\ufe0f   No reason really ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Actually I wanted to make 100  sure nobody else was calling it  and it looks like not", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I am not sure why we have used string interpolation here    parent id     id    can be replaced with  parent id  id ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yeah  that does seem odd  Does git blame or the Topic using tests say anything  While it doesn t matter in tests  this also technically is vulnerable to SQL injections so at the very least it should use        But let s just switch it to the hash as you mention ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kaspth Changes seem to be very old can be changed to  parent id  id   I have done that here ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  If you d like to delete several records in bulk  you may use  destroy all  method", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "CI is failing with the following error  I am not sure how to fix it  Can anybody help me with it  x000D \n x000D \n    x000D \nThe command  sudo  E apt add repository  y  ppa jonathonf ffmpeg 3   failed and exited with 1 during x000D \n    x000D \n x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We can also say  run  instead of  execute  as we ve used on  another line  https   github com rails rails pull 35324 files diff 23bde35a6dadcaeb7fb6918f754ee591R353  ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  both work better in different sentences  Can keep as is", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I don t think this should be merged  We already use  happen  a lots for callbacks and validations  x000D \n x000D \nhttps   github com rails rails blob b2eb1d1c55a59fee1e6c4cba7030d8ceb524267c activemodel lib active model validations absence rb L13 L14 x000D \n x000D \nhttps   github com rails rails blob b2eb1d1c55a59fee1e6c4cba7030d8ceb524267c activemodel lib active model validations presence rb L12 L13 x000D \n x000D \nhttps   github com rails rails blob 1cbc6555f5eeaae32abaf7f35db807cbb3a3a9c9 activerecord lib active record transactions rb L85 L87 x000D \n x000D \nhttps   github com rails rails blob 02e6abd8fd5ad883fd2f29fd5850e650dd121805 guides source active record validations md L72 x000D \n x000D \nhttps   github com rails rails blob 02e6abd8fd5ad883fd2f29fd5850e650dd121805 guides source active record validations md L630 L631 x000D \n x000D \nhttps   github com rails rails blob 02e6abd8fd5ad883fd2f29fd5850e650dd121805 guides source active record validations md L638 L639 x000D \n x000D \nhttps   github com rails rails blob 02e6abd8fd5ad883fd2f29fd5850e650dd121805 guides source active record validations md L828 x000D \n x000D \nhttps   github com rails rails blob 02e6abd8fd5ad883fd2f29fd5850e650dd121805 guides source active record validations md L915 L917 x000D \n x000D \nhttps   github com rails rails blob 02e6abd8fd5ad883fd2f29fd5850e650dd121805 guides source active record validations md L921 L922 x000D \n x000D \nhttps   github com rails rails blob 02e6abd8fd5ad883fd2f29fd5850e650dd121805 guides source active record validations md L975 L977 x000D \n x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Reverted 30016df82f892f621c4937f3aec397f8d4cb30f2 for now ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  We already use  happen  a lots for callbacks and validations  x000D \n x000D \nI see we use it for validations  For callbacks though  it just felt unnatural to read it that way  given its more referred to as  callback execution    x000D \n x000D \nBefore merging  I tried searching if  callback happening  is a normal term to used anywhere  did not find many examples  x000D \n x000D \nAnyway happy to leave as is for now though ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the PR  but it is fine as is to allow any callable object ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  In the future  you can add   ci skip   to your commit message for documentation only changes to skip the Travis build ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks   kamipo  I will remember this next time ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Why not just   args   What s the purpose of splitting the first one out ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Just   args  make sense  Fixed it  \ud83d\udc4d ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Need a blank line above ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Need a blank line above ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Need more two space indentation ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\u2702\ufe0f a blank line ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \n      x000D \n   ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \n      x000D \n   ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \n      This is short hand for  tt relation where condition  destroy all  tt   x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \n      This is short hand for  tt relation where condition  delete all  tt   x000D \n   ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This doesn\u2019t seem to match  dhh\u2019s description  I don\u2019t think we want   all  before a destroy by  It should work like find by straight on Person ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think the plural of person is people  at the very least Rails\u2019 inflector says so   so let\u2019s go with that ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Just use  delegate  like as other query methods  x000D \n x000D \nhttps   github com rails rails blob ef602f8892fa4c41d7b0bb7868fc9084a9888212 activerecord lib active record querying rb L5 L16", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It s easier to read  x000D \n x000D \n assert equal  david   destroyed ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think we can pare back the testing a lot  This is basically just a delegator to where   destroy delete all  So we just need to test the delegation  not all the ways  where  works  x000D \n x000D \nAlso  should probably just spell out that this is shorthand for where   delete destroy all ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " dhh   Cutoff most of the test cases and added some basic test case to check delegation  Also  updated the comments to mention  shorthand for where   delete destroy all  ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Looking good  Waiting for the builds to finish  but otherwise I believe good to merge ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kamipo   Fixed all suggestions  Thank You  \ud83d\udc4d ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kaspth   Done with the changes  Please have a look ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kaspth   Fixed all the review comments   x000D \n x000D \ncc   dhh  kamipo ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \nWhen multiple conditions define whether or not a callback should happen  an  Array  can be used  Moreover  you can apply both   if  and   unless  to the same callback  x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \nThe callback only runs when all the   if  conditions and none of the   unless  conditions are evaluated to  true   x000D \n   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \n    if   Proc new    c  c user allow send email      author wants emails    x000D \n   ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \n    unless  Proc new    c  c article ignore comments    x000D \n   ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kamipo x000D \n x000D \nThank you for review  x000D \nI have committed the proposal ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you for your contribution  x000D \nIn the future  you can add   ci skip   to your  commit message  for documentation only changes to skip the Travis build ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "merge Thank you  x000D \nI gained good insight through this contribution  x000D \nNext time  when updating only doc   ci skip  will be careful ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think we should remove  that  from here   x000D \n x000D \nFollowing sounds correct to me   x000D \n    x000D \nDon t allow  where  with invalid value matches to nil values  x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you for the pointing out  I ve removed that ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \nIt is possible to associate   if  and   unless  with a  Proc  object  This option is best suited when writing short validation methods  usually one liners  x000D \n   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \nIt is possible to associate   if  and   unless  with a  Proc  object x000D \n   ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Looks like we have one another  Finally  in the guides  x000D \n x000D \nhttps   github com rails rails blob 03c2bb6b9dd5d0c35dd0e7e71927cc0f28ab59e0 guides source active record validations md L937", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Is this also inconsistent with  active record validations md    x000D \nOr should we interpret the preamble  finally  as  fainally  in the description of    if   unless  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I also deleted  finally  in  active record validations md   kamipo  taught ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kamipo  x000D \n x000D \nThank you for review  x000D \nWe have committed the proposal ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I digged the history  but the items are not the last item from the first merge from docrails  x000D \nAnyway  the  Finally  doesn t make sense ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "merge Thank you  x000D \nI gained good insight through this contribution ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks you guys for taking the time   yhara  nobu ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "How does this change anything  If it s only being retained by the machine stack  I don t see how that s a real problem  x000D \n x000D \nIf there s real retention   35296 sounds more like  33094 to me ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We ve disscussed about the usage of the  ObjectSpace define finalizer  in the thread https   twitter com yhara status 1096765718698192896  x000D \n x000D \nAs  yhara described at https   github com rails rails issues 35296 issuecomment 464319765  the default proc in the   owner to pool  has a reference to the handler as the implcit  self   so the finalizer proc which has a reference to the   owner to pool  is not right usage to pass  ObjectSpace define finalizer   x000D \n x000D \nThat is noted the doc in Japanese https   docs ruby lang org ja latest method ObjectSpace m define finalizer html  not in English though https   ruby doc org core 2 6 1 ObjectSpace html method c define finalizer  x000D \n x000D \nDo you mean that there is no reason to touch the code unless that is a real world problem ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ah okay  I didn t read that comment closely because it seemed to be in between several other theories  and because its last line suggested it was already disproven  x000D \n x000D \nBeyond the fact this PR wasn t clear in describing the reason for a very subtle change  my remaining concern would be that we don t have anything to prevent a future change from breaking it again  and unlike  unowned pool finalizer   it s less obvious even for a reviewer familiar with the special needs of finalizers   x000D \n x000D \n The new method should also be   nodoc    and the  the above early discard  comment probably needs rephrasing    and finally  looking at the set of four methods  I get the feeling a different arrangement of responsibilities might be clearer  x000D \n x000D \n    x000D \n x000D \nA true leak is definitely worth fixing  I just didn t read closely enough to confirm that the machine stack theory was eliminated  and  that  would not be a true leak  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m taking this is the main difference  We ve now captured the currently rendering template and can derive the format directly from it ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I don t see how the old code would get a  rendered format  here  Did you already consolidate  rendered format   on the finder lookup context or am I misremembering ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yep  exactly", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It s pretty confusing  but  the template renderer would set it on the lookup context  https   github com rails rails blob df12a1b2413906ee38a977e3cbb325512c184837 actionview lib action view renderer template renderer rb L13    The partial renderer  could do it too  https   github com rails rails blob df12a1b2413906ee38a977e3cbb325512c184837 actionview lib action view renderer partial renderer rb L317 L323  ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Uhhh  right  they both set the same info but from slightly different vantage points  Got it  thanks \ud83d\udc4d", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  When the template is being rendered  it pushes the x000D \ncurrent template on to a stack  setting   current template  to the x000D \ntemplate currently being rendered  When the cache helper asks the x000D \ndigestor for a key  it uses the format of the template currently on the x000D \nstack  x000D \n x000D \nI ve chased down  a bunch of  Digestor  issues  https   github com rails rails commits master actionview lib action view digestor rb author javan  stemming from mixed format templates  e g  a   js erb  template that renders   html erb  partials   Any chance this change could reintroduce some of them  Hard to tell if  changes to the tests like these  https   github com rails rails pull 35293 files diff fe08eaa05da7c13bcd3c20c7c90b6591L148  might be covering them up ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Hard to tell if  changes to the tests like these  https   github com rails rails pull 35293 files diff fe08eaa05da7c13bcd3c20c7c90b6591L148  might be covering them up  x000D \n x000D \nI only removed those because they had no impact on the change   I can undo that change  but it has no impact on the tests   Since the digestor  doesn t look at the  renderd format  anymore  https   github com rails rails pull 35293 files diff 7ee9dc74b44ac1e2c604f7bc0791475dL23   setting it to some value shouldn t have any impact ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the suggestion  but I think this sounds too specialized for Active Support ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Side note  Storing a monetary value in as decimal is also risky as well due to how computer handle floating point number  Best practice is to store your amount as integer in cents and use something like  Money  https   github com RubyMoney money  gem to help with the conversion  x000D \n x000D \nSo  I m also against adding this to the core as it might promote practice that could lead into errors ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " matthewd yes  it is too specialized  like other features that ActiveSupport adds over core ext  but OK    x000D \n x000D \nMy intention was add support  in cents  only to  BigDecimal   but I extend to Float as sugar syntax  x000D \n x000D \n sikachu I agree to store monetary value as integer in cents is the best practice when we do not have an alternative  like BigDecimal  that provides arbitrary precision floating point decimal arithmetic  And about promote the best practice  why not add Money gem into Rails stack  x000D \n x000D \nI wish you all the best ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "cc  tenderlove", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think it can break  or leak memory  in some cases  but I think you re right  it s better to emit a warning and continue to work than to raise an exception  x000D \n x000D \nWeb console probably doesn t get reloaded  so there s probably no memory leak   x000D \n x000D \nActually  maybe we should only emit the warning if self class    AV  Base ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Actually  maybe we should only emit the warning if self class    AV  Base  x000D \n x000D \nI think that it makes sense because I couldn t come up with a case with an original view class other than debug view   I fixed condition and message ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I took a swing at this message  x000D \n x000D \n   Class level methods will no longer inherit scoping from   scope  deprecated scope source  in Rails 6 1  To continue using the scoped relation  pass it into the block directly  To instead access the full set of models  as Rails 6 1 will  use    name  unscoped     ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What we d like to see at    scope  deprecated scope source   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It is hard to show dynamic value without    name   in this context  x000D \nIt could be to be    Class level methods will no longer inherit scoping from the scoped relation in Rails 6 1  To continue using the scoped relation  pass it into the block directly  To instead access the full set of models  as Rails 6 1 will  use    name  unscoped     ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "ah I misunderstand that  If we d like  To continue using the scoped relation   we can use    name  all  to drop the deprecated flag ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "ah couldn t use klass all in this context for the purpose   ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Reworded ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I was thinking that   deprecated scope source  would be something like      create     ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Okey  addressed at https   github com rails rails compare f86693cd04f19817028d189caec7430ca7df836d  18f0ca7bfdcb103323dc6f951301cefbf5ebc28a ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What are the non  leak  ways a scope can be set after this  Is it only explicit   scoping         ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yes  since   scoping         is public API  I leaved the way as to inject the scope at global ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Maybe I don t get the point of  What are the non  leak  ways a scope can be set after this    x000D \n x000D \nCan you expand about your concerned situation   matthewd ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Instead of saying  consult the documentation   can we add the link to the documentation here ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Also  can we rename  throw setter deprecation      throw setter deprecation warning    ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Docs get released when the version gets released so I can t yet link to the API docs  ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We re deleting this code in 6 1   I think the current method name is fine ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "If the  order  has two or more spaces between  nulls  and  first   the regex still doesn t match to the  order   x000D \n e g  x000D \n   ruby x000D \nTopic order Arel sql  title NULLS  FIRST    x000D \n    x000D \n  x000D \n x000D \n   suggestion x000D \n            bnulls s    first last  b i match  order  x000D \n   ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Should I add a new record to the changelog ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think this is not a critical bug  so it is fine as is to me ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "done", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This seems to break other time related tests strangely  I will continue to investigate  x000D \n x000D \nI should mention too that this is not specific to MySQL  You can reproduce the problem with any adapter  x000D \n x000D \n bin test test cases serialized attribute test rb test cases attribute methods test rb test cases base test rb  n       SerializedAttributeTest    test serialize does not eagerly load columns  AttributeMethodsTest    test YAML dumping a record with time zone aware attribute  BasicsTest    test preserving time objects with time with zone conversion to default timezone local        seed 17411  v ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It turns out  this line  https   github com rails rails blob ccaa6199a74906ccb45fadbe1ce6a7e1fdd3d0d1 activerecord test cases attribute methods test rb L710  initializes a Topic  with  time zone aware attributes  enabled  https   github com rails rails blob ccaa6199a74906ccb45fadbe1ce6a7e1fdd3d0d1 activerecord test cases helper rb L188   which causes the date time attribute differences  We need to use a global class here because of how YAML dumping loading works  other tz aware column tests don t use the global Topic class   I ve opted to simply reset column info on Topic after the test to tell Active Record to forget about the attribute change ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "How about using splat hash  x000D \n x000D \nSince Ruby 2 6  this options hash would cause a warning like here  x000D \n x000D \n   ruby x000D \ndef foo a        x000D \n  a x000D \nend x000D \n x000D \na     foo   foo    x000D \n x000D \np foo a merge bar   bar    x000D \np foo   a  bar   bar   x000D \n    x000D \n x000D \n    x000D \n  ruby  w xxx rb x000D \n  foo   foo    bar   bar   x000D \nxxx rb 1  warning  in  foo   the last argument was passed as a single Hash x000D \nxxx rb 8  warning  although a splat keyword arguments here x000D \n  foo   foo    bar   bar   x000D \n   ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  make sense  I fixed ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Could switch to tag meta while we\u2019re here ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What about keeping the line the same but unsplatting the options at the end of the tag call ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "In  tag  meta    and  tag meta   the generated tags are slightly different   x000D \n x000D \n   ruby  x000D \nhelper tag  meta   name   csp nonce   x000D \n      meta name   csp nonce       x000D \nhelper tag meta name   csp nonce   x000D \n      meta name   csp nonce     x000D \n     x000D \n x000D \nOf course  since meta tag is a void element  it is not necessary to have a close tag  However  the tag generated by  csrf meta tags  have a close tag  and I think that it is better to behave similarly so that the closing tag is generated   x000D \n x000D \n  What about keeping the line the same but unsplatting the options at the end of the tag call   x000D \n x000D \n  1  I fixed  x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  What about keeping the line the same but unsplatting the options at the end of the tag call  x000D \n x000D \nIt would cause a warning https   travis ci org rails rails jobs 493601600 L1254 L1256 ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I screwed up  Thanks again ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This test passes without the code change  We want to test that the mirror delegates  path for  to the primary  x000D \n x000D \n   ruby x000D \ntest  path for file in primary service  do x000D \n  assert equal  service primary path for  key    service url for  key  x000D \nend x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sorry  I used  url for  in my example when I meant  path for   \ud83e\udd26\u200d\u2642\ufe0f x000D \n x000D \n   suggestion x000D \n    assert equal  service primary path for  key    service path for  key  x000D \n   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sorry  My bad  I should have checked it ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks   abhaynikam  This needs a test ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " georgeclaghorn   Added test cases  Please let me know if we should add more cases ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " georgeclaghorn   Done with the changes  ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the PR  Can you add a test case about what this fixes ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I added some tests  now  foo nulls first  can be reversed x000D \nI m not really sure why current rule for nulls first last implemented in this way  x000D \n    x000D \n      def does not support reverse  order  x000D \n          Account for String subclasses like Arel  Nodes  SqlLiteral that x000D \n          override methods like  count  x000D \n        order   String new order  unless order instance of  String  x000D \n x000D \n          Uses SQL function with multiple arguments  x000D \n         order include          order split      find    section  section count         section count            x000D \n            Uses  nulls first  like construction  x000D \n           nulls  first last  Z i match  order  x000D \n      end x000D \n    x000D \nshould  nulls first  construction be irreversible only in case if order ends with this construction  x000D \nor is it a bug and should be  x000D \n    x000D \n      def does not support reverse  order  x000D \n          Account for String subclasses like Arel  Nodes  SqlLiteral that x000D \n          override methods like  count  x000D \n        order   String new order  unless order instance of  String  x000D \n x000D \n          Uses SQL function with multiple arguments  x000D \n         order include          order split      find    section  section count         section count            x000D \n            Uses  nulls first  like construction  x000D \n           nulls  first last  Z i match  section  x000D \n      end x000D \n    x000D \n    order  replaced with  section   x000D \n x000D \nif it s a bug and rails should see the whole order irreversible no matter where  null first  is   I happy to create a new pull request to fix this bug  and close this one    x000D \n x000D \nif it s ok to have  nulls first  as a non last option   this PR should fix broken AR behavior x000D \n x000D \npreviously AR having  foo NULLS FIRST  bar  made  foo NULLS FIRST DESC  bar DESC  from it and raised pg exception because of wrong query syntax  this pr should fix it x000D \n x000D \n", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I can also drop      nulls  first last  Z i match  order   as with those changes it will work keeping original first last order", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " does not support reverse   wad added at  18928  x000D \n x000D \nI suppose the reason that does not support reverse NULLS FIRST LAST is that we could not decide the behavior user expected whether or not NULLS FIRST LAST should be reversed  x000D \n x000D \n IMO at least unless NULLS FIRST LAST is reversed   relation order  id NULLS FIRST   reverse order to a  is not to be the same result with  relation order  id NULLS FIRST   to a reverse  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "fair  I created a new  PR  https   github com rails rails pull 35274  to fix already existing regex bug ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Should this comment be here ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Should this be nodoc ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think so   I wasn t sure exactly how public this should be   I ll remove comments and put   nodoc   for now   Thank you for reviewing  \ud83d\ude47\u200d\u2642\ufe0f", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I assume this is what gets the axe next  Are you thinking something similar for the variants assignment above ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The nil in here reads a little confusing  How about making layout an optional kw arg  Then we can just omit nil here ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Could keep the style similar to below with parens ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Why call  presence   if you know the value will match  ACCEPTABLE UUID  it can t be blank  or am I missing something ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Good point  I had done it as homage to the original functionality of  UUID cast  but unless there s a form of  ACCEPTABLE UUID  which is also blank  then it won t be relevant ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This could break existing apps  it isn t tested  but   UUIDType new guid    A0EEBC99 9C0B 4EF8 BB6D 6BB9BD380A11   guid  is worked for a long time ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "So there is some reliance on   to s  for other types which implement that function  for users who use Object UUIDs instead of serialized UUIDs  Thanks for that feedback I wasn t aware  and it wasn t tested  I ll look into the tests and add a case for a UUID type  I always use  SecureRandom uuid  myself  x000D \n x000D \nFortunately   String to s  is just an identity function  so there s only minor performance overhead to returning it  no allocations ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m sorry I misunderstood your meaning  You are referring to an existing test case in  test acceptable uuid regex  which is a passing test in my change  I thought you were referring to some UUID object library like  uuidtools   which creates objects to represent UUIDs  x000D \n x000D \nThis does not appear to be supported by the existing test cases  though it might work  Because I know I have done that in the past and that others might be expecting it to work  I ll add a test to cover such a case  x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you change the assertion to ensure returning string as before  x000D \n   suggestion x000D \n      assert instance of String  uuid guid x000D \n   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is an improvement I can get behind ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ah  It caused another bug because I also implemented the DuckUUID compatability   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you change the  cast  method to private  cast value  method  x000D \nAlso  I d prefer  value if value match  ACCEPTABLE UUID   style as most other type cast do so  x000D \n x000D \nhttps   github com rails rails blob 5ca19efafea08984ff1c464c64969f82b9db3569 activemodel lib active model type value rb L37 L39 x000D \n x000D \nhttps   github com rails rails blob 5ca19efafea08984ff1c464c64969f82b9db3569 activemodel lib active model type value rb L118 L123", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I intentionally hadn t done the compact style because I was wary of the magical nil return when a conditional is the last statement in a method  But if that s recommended then I don t mind it too badly  I had no idea about the  cast    cast value  delegation  so thank you for that information ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " casted to s  is redundant ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you make the  cast value  method private  x000D \n x000D \nhttps   github com rails rails blob 5ca19efafea08984ff1c464c64969f82b9db3569 activemodel lib active model type value rb L116 L123", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you fix the style issue  x000D \n x000D \nhttps   codeclimate com github rails rails pull 35263 x000D \n x000D \n  image  https   user images githubusercontent com 12642 53067077 f0ad8600 3515 11e9 9f66 dd6701eced1b png  x000D \n", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I abandoned the guard clause style to maximize clarity ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can I backport this to Rails 5 1 and 5 2  What do you recommend ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We basically backport only bug or security fixes  x000D \nSee the Maintenance Policy https   guides rubyonrails org maintenance policy html ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \nNOTE  Basic knowledge of relational database management systems  RDBMS  and structured query language  SQL  is helpful in order to fully understand ActiveRecord  Please refer to  this tutorial  https   www w3schools com sql default asp   or  this one  http   www sqlcourse com    or study them by other means if you would like to learn more  x000D \n   ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since you are now a Rails committer I feel I need to correct your on this  x000D \n x000D \nWhen we talk about the framework we always separate the names  so Active Record  When we are talking about the constant the words are together and if you can with monospaced fonts  so  ActiveRecord  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  rafaelfranca  I ll keep that in mind writing docs going forward ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " I can t think in a way we can cache collections like this so I feel like raising an exception on this case is better than silently not caching it  At least the users can make the decision to use the same template if cache is important or remove the  cache  call that was not doing anything ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  I can t think in a way we can cache collections like this so I feel like raising an exception on this case is better than silently not caching it  At least the users can make the decision to use the same template if cache is important or remove the  cache  call that was not doing anything  x000D \n x000D \nCool   That was my feeling too  but I wanted to hear other opinions   I ll update this to raise a  NotImplementedError  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I d rather not change  HWIA  for the sake of the subclass  Maybe we can just override  nested under indifferent access  in the subclass  Or to be more explicit about behaviour  we could alias over top of the superclass implementation  x000D \n x000D \n    x000D \ndef nested as self x000D \n  self class new self  x000D \nend x000D \n x000D \nalias method  nested under indifferent access   nested as self x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Maybe we can just override  nested under indifferent access  in the subclass  x000D \n x000D \nCan t do that sadly  nested under indifferent access  is defined on the  Hash  class https   github com rails rails blob 840f55567191c96bdf4250a339759dbb532d351e activesupport lib active support core ext hash indifferent access rb L23 x000D \nOverriding it inside the subclass will have no effect", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ah  my mistake  but I still think  as self  is an inheritance hack  Can we just override  convert value  in the subclass instead ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This changelog entry is not needed  This should be invisible for the users ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the \ud83d\udc40   I made the suggested change  If we come across a similar use case in the future we can maybe reconsider extracting the code that returns a a HWIA into a separated method ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \n            if reflection type     reflection through reflection  x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \n    assert equal original posts first comments ids  preloaded posts first comments ids x000D \n   ", "annotation": {"notes": "", "label": ["offer"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Why not using just   find 2   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I don t think this is right assertion to have  x000D \n x000D \nHere I check the following situation  x000D \n x000D \nThe has many through association of the second tier  aka  has many through through   may have same records in the through association  x000D \n x000D \n    x000D \ncategory 1  posts first comments first    category 2  posts first comments first x000D \n    x000D \n x000D \nNote that this can never happen for through association in the 1st tier  x000D \n x000D \nWhen we reset the source reflection after processing each owner  e g  category   the following  x000D \nowner may not be able to use the same through record  shared comment  because source reflection would already be reset  x000D \n x000D \nThat is why reset code for the source reflection was moved out of  owners each  loop   x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "See my comment 2 lines below  This test is for a very tricky situation ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The reason that I suggested is the assertion isn t failed without this patch in locally ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That is true  I had a version of the patch with only one line of code changed  x000D \n x000D \n    diff x000D \n  association reset if preload scope\t x000D \n  association reset if scope x000D \n    x000D \n x000D \nHowever  in a separated branch where I made experiments with other things  I realized this one line patch adds a regression  That is how this patch end up having 2 tests  x000D \n x000D \n  first test x000D \n  one line of code patch x000D \n  discovered regression x000D \n  second test x000D \n  improved patch x000D \n x000D \nI was trying to invent the version of this test that would fail on master but no luck  x000D \nYou may try it yourself using my description of the problem above  It should theoretically exist   Maybe with  has many through through through     ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I see  I know it is hard to invent the  has many through through through  failing test  x000D \nIt is fine as is since this may prevent any regression by any other refactoring in the future ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "For some reason I have a collection where some of the  middle records  are  nil  and this explode  I ll try to reproduce but does someone know if that can be the case ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "hmm    somehow preloaded records have  nil   at least that is skipped in  grouped records  for now  x000D \n I removed the skip in the past  but as far as I remember tests aren t passed   x000D \n x000D \nhttps   github com rails rails blob bd4eff2f99ffa5868574c497bc63f320cbda3083 activerecord lib active record associations preloader rb L152 L155", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Got a reproduction script  x000D \n x000D \n   ruby x000D \n  frozen string literal  true x000D \n x000D \nrequire  bundler setup  x000D \n x000D \nrequire  active record  x000D \nrequire  minitest autorun  x000D \nrequire  logger  x000D \n x000D \n  This connection will do for database independent bug reports  x000D \nActiveRecord  Base establish connection adapter   sqlite3   database    memory    x000D \nActiveRecord  Base logger   Logger new STDOUT  x000D \n x000D \nActiveRecord  Schema define do x000D \n  create table  posts  force  true do  t  x000D \n  end x000D \n x000D \n  create table  foos  force  true do  t  x000D \n    t integer  post id x000D \n  end x000D \n x000D \n  create table  comments  force  true do  t  x000D \n    t integer  post id x000D \n  end x000D \nend x000D \n x000D \nclass Post   ActiveRecord  Base x000D \n  has many  comments x000D \n  has one  foo x000D \nend x000D \n x000D \nclass Comment   ActiveRecord  Base x000D \n  belongs to  post x000D \n x000D \n  has one  foo  through   post x000D \nend x000D \n x000D \nclass Foo   ActiveRecord  Base x000D \n  default scope   order  id    x000D \n x000D \n  belongs to  post x000D \nend x000D \n x000D \nclass BugTest   Minitest  Test x000D \n  def test association stuff x000D \n    Comment create  x000D \n    Foo create  x000D \n x000D \n    assert equal 1  Comment preload  post   foo  to a x000D \n  end x000D \nend x000D \n    x000D \n x000D \nI ll write a test and commit the fix  Not sure if we should fix the root cause of having  nil s at that point or just skip if there are  nil s  WDYT ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ideally we d like to find the root cause  But for now just skip  nil  record is also fine to me since we already have that skip in  grouped records  for a long time ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixed in 572dcdd7e8", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Looks good to me  Can you squash your commits ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "done", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This change is causing a few extra queries in my application and it is really hard to me to understand why those association needs to be reset to chose if this is the expected behavior or not  x000D \n x000D \nCan you explain why we need to reset those associations now  And if we don t reset  which problems will happen ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   Patch motivation x000D \n x000D \n Here is the test that fails  https   github com rails rails pull 35247 files diff f51660d918ba5921aaae392122026533R2088 x000D \n x000D \nIt fails because source association is loaded with the a target through association scope aka  reflection scope   the one that is at the association definition   x000D \n x000D \n    ruby x000D \ntest models author rb 44   has many  comments desc       order  comments id DESC      through   posts sorted by id  source   comments x000D \n    x000D \n x000D \nBut this scope is alien to the  source reflection   x000D \nSo the reset should happen based on the scope passed to the source reflection preloader  https   github com rails rails pull 35247 files diff ca84a6da4dec54d0ca3e430fbb352ad9R12 x000D \n x000D \nIt makes the reset consistent with the custom scope  3rd argument  passed to the preloader  when passed non empty scope always reset  x000D \n x000D \n x000D \n   Reset problem x000D \n x000D \nCurrent implementation of the preloading is odd  at first we load the records into the association  aka assigning the  Association target   with an alien scope and then we take the records from there into memory and reseting the association  There should be test cases where the already loaded association would be reset if we put the  preload  argument to the right order  Like  x000D \n x000D \n    x000D \nAuthor has many  posts       custom scope1   x000D \nAuthor has many  comments  through   posts       custom scope2    x000D \nAuthor preload  posts      comments     comments         first x000D \n    x000D \n x000D \nIn this example  we preload the  comments  association before the through association that would use that association as a source  x000D \n x000D \nOnly in this specific order  it will cause the  Post comments   to be reset after being preloaded  x000D \n x000D \nA more complex scenario to reveal this bug should exist before this patch  The reset was happening only when  preload scope  was given which can only present for through association of the 2nd tier  aka has many through through     x000D \n x000D \n   Solution x000D \n x000D \nThe only way to fix that in all cases is never set the  Association target  inside preloader when  preload scope  is given  x000D \n x000D \nI am working on this patch now and I am optimistic it is doable in an adequate way  However  this is not a trivial patch   100 lines changed in the diff   x000D \n  x000D \nI was thinking it would be easier for the Rails core team to review patches ones by one as the tackle deeper and deeper problems of the preloading code instead of all of them dumped together with a several pages of description  x000D \n x000D \n  x000D \n x000D \n x000D \n", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That colon sticks out a bit to me x000D \n x000D \n   suggestion x000D \n                   Setting  ActiveRecord  Base configurations  with       is deprecated  Use  ActiveRecord  Base configurations   directly to set the configurations instead   x000D \n   ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Is this going to be a close enough approximation to work for most existing callers  I would ve imagined something a bit more    concat  y ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "If the expectation is that  super  is going to raise   deprecated  is a bit of a misnomer here  x000D \n x000D \nPerhaps we should only produce this deprecation warning for each first fetch values  and have the  else  case below raise a custom exception  with a similar  but harsher  message   ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Per above  while this sounds  100     I love that we re able to provide this sort of transitional smoothing    I think it s surprising  read  not how 5 2 acts  for the other configurations to have disappeared   Assuming that is what s happening  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "If we re calling        we re replacing already created configurations and those will be an array ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ok I redid this PR  Here s what the changes consist of now  x000D \n x000D \n1  Introduces a new setter called  configs for     that will add a new x000D \nhash to the configurations list OR replace an existing hash if that x000D \nenvironment is already declared  This restores  hash like  behavior that x000D \nRails 5 and below supported  x000D \n x000D \n 2  Deprecates getter for      because I think leaving this one hash x000D \nmethod in would be confusing   changed my mind on this bc it s actually used a lot in our codebase and makes sense to just leave it  x000D \n x000D \n3  Changed to throw deprecation warnings on the methods we decided to support x000D \nfor hash conversion and raise on the methods we don t support  x000D \n x000D \n4  Refactored the setter getter hash deprecation warnings messages and x000D \nrewrote them  x000D \n x000D \nGetters message  x000D \n x000D \n    x000D \nDEPRECATION WARNING   ActiveRecord  Base configurations  no longer x000D \nreturns a hash  Methods that act on the hash like  values  are x000D \ndeprecated and will be removed in Rails 6 1  Use the  configs for  x000D \nmethod to collect and iterate over the database configurations  x000D \n    x000D \n x000D \nSetter message  x000D \n x000D \n    x000D \nDEPRECATION WARNING  Setting  ActiveRecord  Base configurations  with x000D \n      is deprecated  Use  ActiveRecord  Base configurations   directly x000D \nto set the configurations instead  x000D \n    x000D \n x000D \n5  Rewrote the legacy configurations test file to test all the public x000D \nmethods in the DatabaseConfigurations class  x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Update  chatted with  matthewd and we decided that adding a  configs for   is overkill and we should only support the old way of doing things with deprecation ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the PR  but it was already fixed by  35154 ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m suspecting this test to be flakey  It does a  SHOW FULL FIELD FROM  query  tried to revert all the change from this PR and it still fails pretty consistently  I was able to reproduce the failure on master but it s not as frequent  not sure why", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What is not clear is how this change fix the problem since  destroy all  still call  load target  that still check for the counter cache  Can you explain better how overriding  find target   affects  destroy all  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hmm that s embarassing \ud83d\ude13   I added the check in the  load target  after a test failed and didn t think about it twice since test was passing  That test isn t testing anything actually  updating the counter cache value manually has no effect  x000D \n x000D \nLet me find write a better test and find another way to solve the issue", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "After digging more on this  the  destroy all  issue seems to be just the tip of the iceberg and the counter cache optimization patch makes other significant changes  x000D \n x000D \nThanks to  byroot for this snippet x000D \n x000D \n   ruby x000D \n    post   Post create  x000D \n x000D \n    second post   Post create  x000D \n    comment   second post comments create  name   Hello World    x000D \n    comment update column  post id  post id  x000D \n    post reload x000D \n x000D \n    assert equal 0  post comments count x000D \n    assert equal 0  post comments to a size x000D \n x000D \n    assert equal 1  Comment where post id  post id  count x000D \n    x000D \n x000D \nAlso  any method like  Post comments sample    Post comments shuffle      basically all methods here https   github com rails rails blob 8d9d46fdae4502b8881eca641c51a64ee7804194 activerecord lib active record relation delegation rb L71 L74 will have this issue of not loading the target if the counter cache value is 0  x000D \n x000D \nConsidering that messing with the counter cache value is not difficult  see example below   I believe that https   github com rails rails pull 35127 should be reverted  At this current state  counter cache doesn t seem to be reliable enough to be used for optimizations such as this one x000D \n x000D \n   ruby x000D \n    post   Post create  x000D \n x000D \n    second post   Post create  x000D \n    post comments create  name   Hello World    x000D \n    assert equal 1  post comments count x000D \n    post reload x000D \n x000D \n    assert equal 1  post comments where  1 1   delete all x000D \n    post reload x000D \n    assert equal 1  post comments count x000D \n  end x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Agree  marking as loaded without actual loading is too greedy optimization  x000D \nI m going to revert that commit ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Maybe we should use the UTC time ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can we make the wait time part of the other log message   Then we don t need to have two  info  blocks  x000D \n x000D \nI believe the  job   event     line was moved inside the info block for performance  so it doesn t get executed unless the logger is in info mode  ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Do we actually need to calculate how long the job has been in the queue   I would expect the log messages to have a timestamp   If the log message has a time stamp  we can just log the  enqueued time  and whatever reads the log messages can calculate how long the message sat in the queue   Logging just the duration means that we lose the  enqueued at  information  or we have to take the log timestamp and subtract the duration to back in to the value  ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Not sure if returning a Time object from serialize is a good idea  It will work in JSON based adapters but the problem is that the roundtrip of this value will return a String  so maybe it better to be explicit about the string conversion we want to do ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Is this working   enqueued at  will be a string and when I try  Time now utc   JSON load JSON dump Time now utc    I get an error ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "In our application we only lock the enqueued at ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Is there a Rails preferred format for this sort of data ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think I will remove it per  tenderlove s suggestion ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Let\u2019s just say \u201cenqueued at\u201d  so we keep the language the same ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I changed it to be a string then added a test to make sure it could be parsed ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " mayb  Time now utc iso8601  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    https   imgs xkcd com comics iso 8601 png ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Should we take retries in consideration  Let say a job needs to be retried 10 times  is the time on queue the same as the difference between the first time it was enqueued and the time it is being executed or should we just consider the last time it was retried ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I just checked our application and we don t take in consideration retries  so this is enough for me ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I am not sure how to get the test to rebuild  it looks like it just failed to start ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  Merged in ac68550ae6", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I really like that setting autoload paths is split from the other initializer  \ud83d\udc4d", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Need  platform   here   if  and Gemfiles don t mix well", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "All the rest of this file uses single quotes", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Oh yes ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "But our style guidelines have changed over time  saw an opportunity to update that one I was touching  x000D \n x000D \nTrue that the file should be consistent ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    A file should define only one constant in its namespace  but can define inner ones   So  if  app models foo rb  defines  Foo  and also  Bar    Bar  won t be reloaded cleanly  x000D \n x000D \nIs this classic mode behavior  or Zeitwerk behavior   I thought it wouldn t be reloaded cleanly in classic mode ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "      A file should define only one constant in its namespace  but can define inner ones   So  if  app models foo rb  defines  Foo  and also  Bar    Bar  won t be reloaded cleanly  x000D \n   x000D \n  Is this classic mode behavior  or Zeitwerk behavior  I thought it wouldn t be reloaded cleanly in classic mode  x000D \n x000D \nIn classic mode  if you define  Foo   Bar   1  in  app models foo rb   dependencies has  Bar  in  autoloaded constants   I believe that is a side effect of the implementation  more than a deliberate feature  x000D \n x000D \nIn the new mode we enforce one file   one constant path  except for inner classes  There is a technical reason for it  which is that we keep track of what is loaded in the decoration of  Kernel require   Given an absolute file name  we know the parent module and constant name that corresponds to  there is no way to detect  Bar   x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    Autoload paths that do not exist on boot are ignored  x000D \n x000D \nCan you expand on that one  x000D \n x000D \nIs that true even after a reload  Because that sounds Bad ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Should zietwerk be an explicit dependency of activesupport  x000D \n x000D \nBeing a dependency would be fine too  Maybe better in the sense that it is a dependency  but if everything goes well one that is going to gradually replace the classic autoloader  it sends a stronger message  x000D \n x000D \nI ll change this  unless someone has an objection   x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "      Autoload paths that do not exist on boot are ignored  x000D \n   x000D \n  Can you expand on that one  x000D \n  x000D \n  Is that true even after a reload  Because that sounds Bad  x000D \n x000D \nThat is a design decision  but open to debate of course  x000D \n x000D \nIn Zeitwerk  pushing a non existing directory is an error  As always  microdecisions  In this case the idea is to prevent misconfiguring directories with typos in their names or whatever and fail fast  On the other hand  the point of view in which you do not consider that to be an error  and just ignore the non existing ones on setup  is also valid  x000D \n x000D \nThe decision depends on use cases  You can have empty directories  but not non existing directories  Do we have real use cases that deserve changing this logic  Similarly  with classic autoloading  the subdirectories under  app   at boot  are the ones in autoload paths  if you add a new one   app services    you need to restart the server  x000D \n x000D \n", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    There is a new config attribute  config autoloader  that can be   classic  or   zeitwerk   This is   zeitwerk  for new apps on CRuby  and   classic  for apps loading the defaults of previous versions or run by other interpreters  x000D \n x000D \n fxn Any reason for it to be only enabled on CRuby by default ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   fxn Any reason for it to be only enabled on CRuby by default  x000D \n x000D \nHey  eregon  It was in my TODO to contact the JRuby TruffleRuby teams about it  x000D \n x000D \nRight now  Zeitwerk only supports CRuby  One of the reasons is that it needs  Kernel autoload  to call  Kernel require   because it is key to be able to  decorate it  https   github com fxn zeitwerk blob master lib zeitwerk kernel rb   I am watching https   github com jruby jruby issues 5403 regarding this  x000D \n x000D \nAnother detail  is that in order to support what I call  explicit namespaces  https   github com fxn zeitwerk explicit namespaces  the library sets a trace point on the   class  event  Last time I checked  JRuby does not emit this particular event unless you pass the    debug  flag  I am not familiar with that flag  but does not seem like something you d enable in production normally  x000D \n x000D \nOn the other hand the   class  event is triggered rarely in regular code bases  so I wanted to ask if the JRuby team would consider broadcasting that one in the default mode  x000D \n x000D \nFurthermore  the test suite has a  Ruby compatibility suite  https   github com fxn zeitwerk blob master test lib zeitwerk test ruby compatibility rb  in case it helps  I don t know right now if it is exhaustive  should do a pass and document in which way we depend on each property  but it is a good indicator  x000D \n x000D \nPlease anything else just let me know  would be awesome that the library is portable  x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Do we have real use cases that deserve changing this logic  Similarly  with classic autoloading  the subdirectories under  app   at boot  are the ones in autoload paths  if you add a new one   app services    you need to restart the server  x000D \n x000D \nI strongly feel that s a bug worth fixing  not doubling down on    and I think it s hugely more common to create a new namespaced model  that is  a new namespace  than it is to invent a new  app     type  so I think this will be quickly problematic if I m correctly understanding the new behaviour  x000D \n x000D \nTo be clear  I agree with the design decision at Zeitwerk s level that a missing directory should be an error  I just think that Rails in its soft friendly autoloady configuration will want to be more forgiving  and I think that means a fully dynamic app  drawing a distinction between  basic  autoload and  genuinely expect files to change appear disappear  reload autoload  ultimately can t freeze the path list  x000D \n x000D \n Zeitwerk doesn t need to react to such directories appearing  of course    our file watcher will handle that    it just needs to be open to having its paths reconfigured during the reload cycle  ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  I think it s hugely more common to create a new namespaced model  that is  a new namespace  than it is to invent a new  app     type  so I think this will be quickly problematic if I m correctly understanding the new behaviour  x000D \n x000D \nAh  let s make sure we are in sync on this one  New namespaces are picked up just fine  If you create  app models admin  and reload   Admin  is autoloadable right away  The only thing we ignore are paths in  ActiveSupport  Dependencies autoload paths  that by the time the finisher runs do not exist   code  https   github com rails rails blob ed9acb4fcc793ce1ab68a0e5076dc9458cc7f218 activesupport lib active support dependencies zeitwerk integration rb L44   ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " matthewd now that we talk about this  I believe that I wrote that  if  influenced by the current tolerance to non existing directories  But on a second thought  I wonder if we should also err in the new mode instead of silently ignoring the autoload path ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ah okay  I misunderstood your previous wording  but I do still think we should support that too   I didn t actually think it was currently so insensitive to new appearances  modulo complications from spring  x000D \n x000D \nLoosely related   33822 ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This method is not in a performance critical codepath so this improvement is not worth it  Please read the contributing guides  https   guides rubyonrails org contributing to ruby on rails html benchmark your code x000D \n x000D \nI ll merge only because the code is now clear  but this will be the last time I ll merge a cosmetic PR from you ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca will take care of cosmetic changes in the next PR s ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca the code change done here has about 1 1x of improvement  But I need some guidance on what are the features or code tagged as performance critical code path  I thought this will come under a performance improvement  x000D \n x000D \n I went through this  link  https   github com rails rails pull 13771 issuecomment 32746700  on cosmetic changes  Is it like 1 1x of improvement not considered as a significant improvement and hence marked as cosmetic change  Do we have a performance benchmark like the optimization should be more than 5x time of previous code version  x000D \n x000D \nIf possible can you please guide me on what code blocks to look at which we are planning to optimize  And how to make sure that the optimization changes I want to get merged are not tagged as cosmetic changes ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This change isn t correct and should probably be reverted  x000D \n appendTo  Inserts every element in the set of matched elements to the end of the target  https   api jquery com appendTo  x000D \n raw  shouldn t be used either because of XSS ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Agree  this is correct as is  Reverted fb60def5a4d9eef95571b730701c55426846e0ea ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sorry my mistake   think I must ve been getting confused with jQuery s   append     \ud83d\ude15  x000D \n x000D \nRegarding the XSS  I have tested some code that s similar to the example in the docs and it seems to only work when using  raw  because otherwise Rails tries to escape all the HTML  and trying to append this escaped HTML makes the user s browser very unhappy  x000D \n   ruby x000D \n        j render  thing   thing   thing  thingy   thingy       appendTo  tr thing      thing id       x000D \n    x000D \n    x000D \nError  Syntax error  unrecognized expression   lt tr id  quot thing 6649 quot  gt  x000D \n   lt td gt Blood Music lt   47 td gt  x000D \n snip  x000D \n    x000D \n x000D \nAm I doing something wrong here  And apologies for mistakes   first PR in an open source project ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ok so I did some more digging on this    Turns out it s an issue with the  escape utils  gem which I m using  Sorry for wasting your time ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ok  seems it is not that simple and we would need to cherry pick some more stuff from master   Would it be desired to get this fixed for 5 2  If yes I would volunteer to dig deeper ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Unfortunately we can t backport or fix this on 5 2 stable  It requires too much changes that we prefer to not make in a stable branch  Because of that  Rails 5 2 will not support customization of the parameterized mailer job ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the clarification  rafaelfranca \ud83d\udc4d ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That s great  Can we add changelog entry about this change ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udc4d Added 850e6aaad9c276d1b84708448221eb3becf0b917", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Duplicated with  29311   29335   29573   30276   31144   32373  and  33820 ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I am not sure if this is a cosmetic change   flat map  works faster as compared to  map  followed by  flatten   Need inputs on this ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yes  it is considered a cosmetic change unless in a real world benchmark you can show that this performance improvement make any difference ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you mention about  column type  in the error message ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve extracted  define column methods  to ease to handle all short hand methods at c7721ea  x000D \nCan you rebase on master ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "rebased   update error message ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Would it make more sense to call this  StringAccessDeprecatedHash  and check for string access or are we genuinely concerned with all cases that aren t symbols  String access is all we are testing for ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Why is     doc   here ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Nitpick  Since you re doing a heredoc and squish  you can break up the line below with a newline ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I would rather test deprecated behaviour in deprecation tests only ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since the new behaviour restricts usage to symbol keys only  I wanted to make sure that we generate a deprecation notice for anything that is not a symbol  For all intents and purposes  you are correct  we are really trying to detect string access  but I thought it wouldn t hurt to be more general in this case  x000D \n x000D \nI am open to changing the behaviour and renaming the class  if you think otherwise  though ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sorry  that s a left over  will remove ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I have noted in the  Other Information  section of my PR that this is  not  deprecated behaviour  x000D \n x000D \n  Note that the top level access to the  OrderedOptions  object returned from  config for  has indifferent access semantics due to the nature of how  OrderedOptions  works  x000D \n x000D \nSince   my custom config  is an instance of  OrderedOptions   top level key access is indifferent  Thus  this test is asserting that that behaviour is not changed  x000D \n x000D \nI could put an  assert not deprecated  around the string access assertion if it is going to make it more readable and understandable  though ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sure  will do ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ah  my mistake  Leaving it as is if we don t expect this to be deprecated sounds good to me \ud83d\udc4d ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  I am open to changing the behaviour and renaming the class  if you think otherwise  though  x000D \n x000D \nI don t feel strongly about it  Let s get a second opinion  ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m fine with the name and implementation  We can only have strings and symbols keys anyway ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Would  slice    extract  and  except  and the     versions with string keys work  How about  fetch  ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "They wouldn t work with the current state of the PR  but I can add similar implementation for those as well ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Added support for these methods and a test that asserts they all work properly with string keys with deprecations ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Implementation seems similar to HWA  why not inheriting from it and just override the  convert key  method  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That s exactly what I tried first and decided against later  for 2 reasons  x000D \n x000D \n1  HWIA stores keys as strings  but we want symbols  So it felt like I was resisting the base class  x000D \n2  Even more importantly   convert key  is called during both read  and  write  and there is no way to know from which it is called  That would mean we would show deprecation notices as we are interning the YAML parsed hashes and thus showing notices to people who don t even access hashes via string keys  That would be confusing  x000D \n x000D \nBasically HWIA just was not flexible enough for this purpose  But I did take most of the implementation straight from it  x000D \n x000D \nHope this addresses your concern ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I applied this change to your branch  x000D \n x000D \n  1   HWIA stores keys as strings  but we want symbols  So it felt like I was resisting the base class  x000D \n x000D \nThis seems to work as expected in my tests  and passes the test suite   Rails application config my custom config  foo       bar    baz      x000D \n x000D \n  2   Even more importantly   convert key  is called during both read  and  write  and there is no way to know from which it is called  That would mean we would show deprecation notices as we are interning the YAML parsed hashes and thus showing notices to people who don t even access hashes via string keys  That would be confusing  x000D \n x000D \nI m not seeing this behaviour  Can you explain how this would happen  x000D \n x000D \nWe can revert this to not extend from HWIA if need be  but it seems to work as expected AFAICT ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "So the       method of HWIA calls  convert key   here  https   github com rails rails blob master activesupport lib active support hash with indifferent access rb L94 which would be called ultimately from a source that has nested hashes  If those hashes don t have string keys  we would get a deprecation notice  I guess what s protecting the code from doing that is the fact that you are calling   to sym  before passing  key  to  super   so that writes always get a symbol key  x000D \n x000D \nI guess that solves it more elegantly than I had it  Thanks for the rework and the simplification  \ud83d\udc4d", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think I ve addressed all PR comments and squashed my commits  so this PR should be ready to go if there are no more comments  x000D \n x000D \nAdditionally  I ve added an extra commit to fix the order of expected actual parameters of some of the assertions added in https   github com rails rails pull 33882  Since that is logically separate from the main work in this PR  I ve opted to leave that as a separate commit  and didn t squash it with my other commits ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "These links are meant to point to the stable 6 0 branch  which will be created after 6 0 release   x000D \n x000D \nExample for 5 0  https   github com rails rails blob 5 0 stable railties CHANGELOG md x000D \n x000D \nMaster ones only point to changes on master  which are cleared post release ", "annotation": {"notes": "", "label": ["offer"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hello  I did it intentionally  cause those links should refer to  6 0 stable  version of rails rails  It ll be fixed when we release  6 0 0 rc1   Thanks for the pull request ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Whose are unaligned now  since we moved them I d just remove the alignment", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It is not clear to my why the cache key is an instance of object  It is just to create a unique value ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yes   I think the original reason was that calculating a hash for the details key was expensive  essentially    some   complex  thing    a  b      hash    so we do it once and use an object instead   Apparently we have to consult the template cache many times  so we need a fast   hash   x000D \n x000D \nI think we can eliminate this cache all together and still maintain speed  but it may require changes to the lookup context   That s why I m interested in making the lookup context more private  and be more aggressive with API changes  ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Makes sense ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That s fine we usually don t followup with CHANGELOG updates until right before release but we re close enough this time it s fine  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It feels to me that this is being done at the wrong level  Relation should not know about scoping  Maybe this should be done in the scoping class  x000D \n x000D \ncc  matthewd ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I agree that here is not best place to do this  x000D \nBut Relation has  scoping  method  and already need to know the result of  klass current scope true   in some places  in  scoping    spawn   etc   so I just do this here since here is only place to do this  x000D \n x000D \nIf we d not like to do this here  an option is just extracting to method in the scoping class like the following  x000D \n x000D \n   diff x000D \ndiff   git a activerecord lib active record relation rb b activerecord lib active record relation rb x000D \nindex 32f0609798  347d745d19 100644 x000D \n    a activerecord lib active record relation rb x000D \n    b activerecord lib active record relation rb x000D \n    67 11  67 7    def bind attribute name  value     nodoc  x000D \n         user   users new    user  user name    Oscar    x000D \n         user name      Oscar x000D \n     def new attributes   nil   block  x000D \n       current scope   klass current scope true  x000D \n       block      record do x000D \n         klass current scope   current scope x000D \n         yield record if block given  x000D \n       end x000D \n       block   klass current scope restoring block  block  x000D \n       scoping   klass new attributes   block    x000D \n     end x000D \n  x000D \ndiff   git a activerecord lib active record scoping rb b activerecord lib active record scoping rb x000D \nindex 35e9dcbffc  1142a87d25 100644 x000D \n    a activerecord lib active record scoping rb x000D \n    b activerecord lib active record scoping rb x000D \n    30 6  30 14    def current scope skip inherited scope   false  x000D \n       def current scope  scope  x000D \n         ScopeRegistry set value for  current scope  self  scope  x000D \n       end x000D \n  x000D \n       def current scope restoring block  block  x000D \n         current scope   self current scope true  x000D \n             args do x000D \n           self current scope   current scope x000D \n           yield  args  if block given  x000D \n         end x000D \n       end x000D \n     end x000D \n  x000D \n     def populate with current scope attributes    nodoc  x000D \n   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Would not this cause breaking changes  x000D \n x000D \nBefore this PR  35186  the  self total count   Bird count  in  after initialize  and the  Bird find by  name   canary    are affected by  Bird where color   green   scoping      in  Bird where color   green   create   so  parrot total count  will be 0 and  Bird find by  name   canary    will raise  RecordNotFound   x000D \n x000D \n   ruby x000D \ncanary   Bird create  color   yellow   name   canary   x000D \nparrot   Bird where color   green   create do  bird  x000D \n  bird name    parrot  x000D \n  assert equal canary  Bird find by  name   canary   x000D \nend x000D \nassert equal 1  parrot total count x000D \n    x000D \n x000D \nIf anyone depends on the behavior  it is affected by this change  x000D \nBut I think the leaking scope is just a bug  probably most people use a workaround  Bird unscoped count  and  Bird unscoped find by  name   canary    for a long time ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That could be a nice refactoring", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  1 ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Applied 4cb1438b57067d637c79d49d0662c43b5b4e64c2 ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kamipo Thank you for the fix    ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m still concerned about this breaking change  If people is relying on this behavior they may start to leak information silently like happened some years ago in the GitHub incident  x000D \n x000D \nIs there any way we can detect people is relying on this behavior and show them a warning  x000D \n x000D \n tenderlove  matthewd  jeremy what do you think ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Please correct me if I m wrong  but if the scope is leaking  then the scope in  after initialize  etc would depend on the context in which the object is created   People depending on this behavior would have to have exactly one code path for initialization  otherwise they would have to do  unscoped  because the scope would be different each time  x000D \n x000D \nCould we set the scope object to something that raises an exception if  unscoped   isn t  called ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since  scoping  is public API  people may have a usage like the case  1   x000D \nIn the case  1   initialization block and callbacks are affected by the  Bird where color   yellow   scoping   x000D \nI made the case  2  working the same with the case  1  in this PR  x000D \n x000D \nWe could set the exception scope object for the case  2   it will make the case  2  working different back with the case  1  though    x000D \n x000D \n   ruby x000D \ncanary   Bird create  color   yellow   name   canary   x000D \n x000D \n   1  x000D \nBird where color   yellow   scoping do x000D \n  parrot   Bird create  color   green   do  bird  x000D \n    bird name    parrot  x000D \n    assert equal canary  Bird find by  name   canary   x000D \n  end x000D \n  assert equal 1  parrot total count x000D \nend x000D \n x000D \n   2  x000D \nBird where color   yellow   scoping do x000D \n  parrot   Bird rewhere color   green   create  do  bird  x000D \n    bird name    parrot  x000D \n    assert equal canary  Bird find by  name   canary   x000D \n  end x000D \n  assert equal 1  parrot total count x000D \nend x000D \n   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What happens if we realease new versions of our packages  Or if there\u2019s commits in them that haven\u2019t yet been pushed to npm ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Your concern is correct and we should not this approach  Since there was I wanted to confirm  I temporarily put this in ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Could should this point at the git repo instead ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  1  Totally agree  I fixed ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "OK  this approach works and cut off the run time about 10 minutes  as kaspth mentioned already   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fantastic work   y yagi  x000D \n x000D \nI wonder if we could eventually make  railties test isolation assets package json  s version specifiers auto generated from the corresponding Gemfile entries or something  that master reference is perfect now  but as this branch becomes a mature  6 0 stable  and webpacker moves forward  it ll presumably become less good ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I have been running individual tests a lot these days  this patch speeds things up significantly  \ud83d\ude4c", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Is operation the right word here  When I think about database operation I think those things you define in the database level https   docs oracle com database 121 TGSQL tgsql monit htm GUID DC573FB7 40C5 4D6D BE81 EF356900B444  x000D \n x000D \nMaybe resolver storage ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Is operation the right word here  When I think about database operation I think those things you define in the database level x000D \n x000D \nI agree  I think this name evolved out of  last DB operation   but I think that s an implementation detail and not necessarily how we re picking   storage  is better  but it isn t necessarily doing storage  this also has awareness that I think  storage  implies it wouldn t  x000D \n x000D \nHow about  resolver context   What this class does is provide the context needed by the resolver to pick a database for the request  I ve pushed up a commit renaming it to this ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ooo I like context  ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  jhawthorn  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can we name this option  incinerate  and make the default value  true   Then you\u2019d disable incineration by setting it to false ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Last thing  this should go above the beta1 heading  beta1 already shipped ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ah  missed that  Pushed a fix ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " georgeclaghorn Added it to  ActionMailbox  Engine ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Instead of hardcoding 3 and 4  can you assert that the size increases by one ", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The intent that removing  target empty   is that  target empty   should be redundant if staled   association ids  is properly cleared  But I missed  CollectionAssociation build  at  29631  x000D \n x000D \nCan you move   association ids   nil  after the  target    record  line in  replace on target  and in  remove records   x000D \n x000D \n   diff x000D \ndiff   git a activerecord lib active record associations collection association rb b activerecord lib active record associations collection association rb x000D \nindex 68f53d5c1c  fc2a40d675 100644 x000D \n    a activerecord lib active record associations collection association rb x000D \n    b activerecord lib active record associations collection association rb x000D \n    347 7  347 6    def  create record attributes  raise   false   block  x000D \n               add to target record  do x000D \n                 result   insert record record  true  raise    x000D \n                     was loaded   loaded  x000D \n                    association ids   nil x000D \n                   x000D \n               end x000D \n               raise ActiveRecord  Rollback unless result x000D \n    384 6  383 7    def remove records existing records  records  method  x000D \n  x000D \n           delete records existing records  method  if existing records any  x000D \n            target    records x000D \n            association ids   nil x000D \n  x000D \n           records each    record  callback  after remove  record    x000D \n         end x000D \n    424 7  424 6    def concat records records  raise   false  x000D \n               unless owner new record  x000D \n                 result     insert record record  true  raise    x000D \n                     was loaded   loaded  x000D \n                    association ids   nil x000D \n                   x000D \n               end x000D \n             end x000D \n    448 6  447 7    def replace on target record  index  skip callbacks  x000D \n             target index    record x000D \n           elsif   was loaded     loaded  x000D \n             target    record x000D \n              association ids   nil x000D \n           end x000D \n  x000D \n           callback  after add  record  unless skip callbacks x000D \n   ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Use double quotes ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udc4d   Are you sure the  if index  case doesn t need the   association ids   nil  ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think that case doesn t need the   association ids   nil   since the  index  is used for replacing with the same record  x000D \n x000D \nhttps   github com rails rails blob 19dc2edaab62864ea96205b78153eed30f752144 activerecord lib active record associations collection association rb L283 L288 x000D \n x000D \nhttps   github com rails rails blob 19dc2edaab62864ea96205b78153eed30f752144 activerecord lib active record associations collection association rb L411 L417", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixed  decided to use a fresh object to maintain the test readability ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you add the   association ids   nil  in  remove records  too  x000D \n x000D \n   diff x000D \ndiff   git a activerecord lib active record associations collection association rb b activerecord lib active record associations collection association rb x000D \nindex 68f53d5c1c  e718ea8393 100644 x000D \n    a activerecord lib active record associations collection association rb x000D \n    b activerecord lib active record associations collection association rb x000D \n    384 6  384 7    def remove records existing records  records  method  x000D \n x000D \n           delete records existing records  method  if existing records any  x000D \n            target    records x000D \n            association ids   nil x000D \n x000D \n           records each    record  callback  after remove  record    x000D \n         end x000D \ndiff   git a activerecord test cases associations has many associations test rb b activerecord test cases associations has many associations test rb x000D \nindex 5fdc5a92fc  d99fa3d324 100644 x000D \n    a activerecord test cases associations has many associations test rb x000D \n    b activerecord test cases associations has many associations test rb x000D \n    121 6  121 14    def setup x000D \n     Client destroyed client ids clear x000D \n   end x000D \n x000D \n   def test ids reader cache should be cleared when collection is deleted x000D \n     firm   companies  first firm  x000D \n     assert equal  2  3  11   firm client ids x000D \n     client   firm clients first x000D \n     firm clients delete client  x000D \n     assert equal  3  11   firm client ids x000D \n   end x000D \n  x000D \n   def test sti subselect count x000D \n     tag   Tag first x000D \n     len   Post tagged with tag id  limit 10  size x000D \n   ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Looking to the comment looks like this is intend to work with non Rails app  x000D \n x000D \n  If the app is a Rails app    x000D \n x000D \nThen the problem is that other non Rails apps can have also the  routes  method defined  so I think checking for routes type is a good solution to the problem \ud83d\udc4d ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "why the      is being used here  It should always return  self ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "same here  it should always return self ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The transaction above could be rolled back without exception  So this method should notify that failure to caller  x000D \n x000D \n   rb x000D \n        def concat records records  raise   false  x000D \n              x000D \n x000D \n          raise ActiveRecord  Rollback unless result x000D \n x000D \n          records x000D \n        end x000D \n    x000D \n x000D \nAnd this method is called by  replace records   which expects falsey value when transaction was rolled back  x000D \n x000D \n   rb x000D \n        def replace records new target  original target  x000D \n          delete difference target  new target   x000D \n x000D \n          unless concat difference new target  target   x000D \n             target   original target x000D \n            raise RecordNotSaved   Failed to replace   reflection name  because one or more of the     x000D \n                                   new records could not be saved   x000D \n          end x000D \n    x000D \n x000D \nNote that rollback was introduced in this commit  https   github com rails rails commit 5dc72378b783e924c5bf079ca660388ec4ac9224 diff 20f545c453ee24942b6f7ae565e9e369R450", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Looks like the implementation is completely the same with        since  CollectionAssociation concat  flatten  records   x000D \n x000D \nhttps   github com rails rails blob 272e64101bb6daaa4bbaf2d1c64f64c6b82ead8e activerecord lib active record associations collection proxy rb L1055 L1059 x000D \n x000D \nhttps   github com rails rails blob 272e64101bb6daaa4bbaf2d1c64f64c6b82ead8e activerecord lib active record associations collection association rb L115 L116 x000D \n x000D \nIf we don t intend to behave   concat  and       differently  at least the behavior is the same for now   how about just aliasing ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ah  maybe  RecordNotSaved  should be raised by  concat  method itself instead of returning falsey value  isn t it   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Remaining the doc style comment is a historical reason   CollectionAssociation  was replaced by  CollectionProxy  as public API  now  CollectionAssociation  is private API  x000D \n x000D \nhttps   github com rails rails blob 272e64101bb6daaa4bbaf2d1c64f64c6b82ead8e activerecord lib active record associations collection association rb L28 x000D \n x000D \nThus we are not always necessary to change the implementation of  CollectionAssociation concat  unless the change fixes any public behavior ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    x000D \nirb main  004 0    foo       bar  x000D \n     foo    bar   x000D \n    x000D \n x000D \nWhile it is different from behavior of plain  Array   I think this behavior is reasonable for record collection which can t contain nested array   1 for aliasing ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ll revert CollectionAssociation and remove  Returns  self   part of doc ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \n        Add  records  to this association  Since  tt     tt  flattens its argument list x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \n        to the association s primary key  Since  tt     tt  flattens its argument list and x000D \n        inserts each record   push  and  concat  behave identically  Returns  self  x000D \n   ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you for reviewing  Revised the commit ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Document fixed ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I confirmed this changed with  this commit  https   github com buildkite terminal to html commit f19721a00ff6736207a5a02d3275f73526214978   x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " betterzega Thanks  In the future  please add  ci skip  to commit message for skip the Travis build  x000D \n", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "this  as    is not necessary here anymore ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "nice catch  thanks ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hey  the dot can be eliminated because it is a word boundary  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think the idea is that this was only done when  i18n full message  is set to true  otherwise it would be a change in behavior without deprecation ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We could only call the remove  if i18n full message  but without checking if the class respond to  i18n scope  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Closing this  because I now know the reason why the   remove  had to be moved ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I won t claim to understand all the layers at play here  but passing information that s not in the cache key into a cached value s calculation makes me pretty nervous  As you re deeper in this code  can you point me to why this is safe   Or  should we instead be shoving  locals  into  details  before the cache block  when such locals are supplied  ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  passing information that s not in the cache key into a cached value s calculation makes me pretty nervous  x000D \n x000D \nIt is part of the cache key  just in a round about way  unfortunately    The details hash is  used to calculate the first  key   https   github com rails rails blob 7a3afc9a69842ddf3e0edbdf078f8f3bf3c4b8f7 actionview lib action view lookup context rb L171 L182    If the locals change  the return value of  DetailsKey get user details   will change   In this function  key  is  details key  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ahh  right   x000D \n x000D \n   does that mean  details  could be removed from the  cached  call too ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It could  but it  gets passed to this decorate  https   github com rails rails blob 2799a502ad361451ba26bcab8f9039268160bdf6 actionview lib action view template resolver rb L187  method   If we can make the Template objects read only  then we can delete the  decorate  method and then remove the parameters ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Do we consider the resolver to be public API  The class isn t really documented  so I would think  no   If we do consider it public  I think we should make it private  x000D \n x000D \nYes  the resolver is part of the public API  Jos\u00e9 s idea was to make possible to people to write custom resolvers to  for example  read a template from the database  he shows an example of that in his book  We at Shopify have a custom resolver to build a list of all view paths that are possible at boot time  Why do you think it should be private ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Why do you think it should be private  x000D \n x000D \nSome of the method parameters require knowledge of internals that I don t think people should have   The main example of this is the  key  parameter and the  details  hash  here  https   github com rails rails blob 2799a502ad361451ba26bcab8f9039268160bdf6 actionview lib action view template resolver rb L145    Key and details have to do with caching   If someone wants to write a caching resolver  they should wrap a non caching resolver with their own caching strategy   I guess the main issue for me is that these parameters are leaking implementation details about the class   Since the API is public  I think it couples us to the current caching strategy  x000D \n x000D \nTBH  I think we can maintain the API  I just want to have a gauge for how quickly it can change   I would like to change it more quickly  so making it private would help   But if there are real apps  like Shopify  using it  then I ll be more careful about maintaining the API ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "To be fair  I think we can change this more quickly than other public APIs we have  It is not like every single developer would write a custom resolver  but I think we should keep possible to write one if they like to  If this API changes without deprecation it would not be the end of the world ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca I ll pick up a copy of Jos\u00e9 s book   I can use that to get more context  and maybe we can implement the ideas in the book but with a smaller API", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you for the pull request but we can t use the post install message for this  even users that don t want to use this gem will have to see it  and every time you install in every machine this will also presented ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca  x000D \nHi  Thank you for the reply and I agree with you  x000D \nCan you share opinion to resolve or where we can add in Rails  I appreciate providing your time ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can we change it to     1 3       1 3 6  ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "sure thing  I was not sure about sqlite3 versioning  ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Closes  35153", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Am I missing something  or doesn t the underlying issue break support for the default adapter for all existing rails apps  x000D \n x000D \nLocally  x000D \n x000D \n   sh x000D \n  rails new sqlite app  cd sqlite app x000D \n  rails s x000D \n  localhost 3000 produces  Error loading the  sqlite3  Active Record adapter  Missing a gem it depends on  can t activate sqlite3     1 3 6   already activated sqlite3 1 4 0  Make sure all dependencies are added to Gemfile   LoadError  x000D \n    x000D \n x000D \nIs backporting this sufficient ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yes  backporting is sufficient  x000D \n x000D \nAnd no  it doesn t break all existing applications  it only breaks new application as you can see in your example ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "As for the red CI  x000D \n  some of the failures are unrelated https   travis ci org rails rails jobs 488684686  https   travis ci org rails rails jobs 488684690 x000D \n  guides specs are failed due to the using source code from master   https   travis ci org rails rails jobs 488684700  https   travis ci org rails rails jobs 488684701 Looks like they ll be fixed once the PR is merged x000D \n x000D \nE g  https   github com rails rails blob cc2d614e6310337a9d34ede3e67d634d84561cde guides bug report templates active record migrations gem rb L5 L13 x000D \n", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m merging this  x000D \n x000D \nSide note  it bothers me that if I do a new SQLite3 release it breaks tests   Loosening up the requirements makes sense  but it seems like we should be adding the required SQLite gem version to the bug report template  if that s possible   x000D \n x000D \nThanks ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hey all  we re still having the problem where running blacklight from scratch with the easy instructions  https   github com projectblacklight blacklight wiki Quickstart  is giving us an error  Do you know why these merged changes aren t fixing the problem for us  Also  if there s a better place to post this I m happy to post this elsewhere  x000D \n x000D \n Error  ActiveRecord  StatementInvalid in CatalogController index  x000D \n raise ActiveRecord  StatementInvalid   Could not find table    table name     if structure empty  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " dronn why do you think that it s related ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " sponomarev it s related to the sqlite3 version  but I think you re right in that I should make this an issue instead of commenting here  If I m still struggling with it I ll create an issue  Thanks ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " x000D \nEncounter the same problem  ask for help    There is no corresponding solution in the official  there are many ways to deal with google search ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  x000D \nPuma caught this error  Error loading the  sqlite3  Active Record adapter   x000D \nMissing a gem it depends on  can t activate sqlite3     1 3 6   already activated sqlite3 1 4 0  Make sure all dependencies are added to Gemfile   LoadError  x000D \n ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " zhenxingdev Please  check https   github com rails rails issues 35153 issuecomment 460455573", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " scissors  this extra newline  please ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I have completed removing extra newline ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you show where the generator and the doc generates the  to   form  Those two versions don t have two inconsistent hash format  they actually have two different argument numbers  The  get  post  id      posts show   only has one argument   get  post  id   to   posts show   have two  x000D \n x000D \nI m almost sure  get  post  id      posts show   is the preferred by the framework and I could not find where the generator generates the  get  post  id   to   posts show   form ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We don t generate this code  but I do agree the latter syntax is better so I merged ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Can you show where the generator and the doc generates the to  form   x000D \n x000D \nSorry if that was unclear  I meant the generated resourceful routes use Ruby 1 9 hash syntax ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udc4d ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udc4d ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hum this change is not so naive  sweat smile   because it seems that the order the data is extracted from the records and the order to apply the registration matters  x000D \n x000D \nI m going to try to improve the extract part  measure it and see if it worths it ", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The last change seems to work  at least in my dev env but the improvement is less as you can imagine  So is not worthy to apply it just for that  Sorry for the noise   x000D \n x000D \nClosing this PR x000D \n", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "There is a random failure being caused by the new tests being added  Can you fix it ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udc4b Thanks for opening this PR   We are targeting HEAD in our monolith and found that this commit is breaking few of our tests  x000D \nTL DR  Model destroy all  doesn t do anything when fixtures gets loaded and the parent try to destroy all children  this is because the  counter cache value  is 0 when fixtures gets loaded  we end up not loading the target https   github com rails rails pull 35127 files diff 7eee2aa7b5cdbffb0bc3ef2eb7d0b76fR70 x000D \n x000D \nAlthough the counter cache value not getting set seems to be an issue only in tests  isn t it risky that if for any reasons the counter cache is desync we can end up not deleted any records  x000D \n x000D \nI created a reproduction script here https   gist github com Edouard chin df15e2f11a9129880d264c8d861a11ae", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What is the plan to this class  We will always have a LegacyTemplate or we plan to remove it some day ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think we can remove it eventually   I want to change  this call  https   github com rails rails blob 2169bd3d2a9d2f331a5dd6e41d9d638e0da6117c actionview lib action view template rb L307  to pass in the view and the source   But for backwards compatibility we need to pass an object that has a reference to the mutated source  x000D \n x000D \nI ll follow up with another commit that deprecates arity one blocks", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I changed this to not deprecate  refresh    I think we might be able to deprecate and remove it in the future  but right now it s not clear   In test  we have a custom resolver that instantiates template objects that have a view path  but aren t associated with a file  x000D \n x000D \n  https   github com rails rails blob 2169bd3d2a9d2f331a5dd6e41d9d638e0da6117c actionview lib action view testing resolvers rb L26 L47 x000D \n x000D \nAfter this PR  the common case will be to instantiate  FileTemplate  objects  so I just implemented a  refresh  on  FileTemplate  that returns itself  since it can get the source  ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  I changed this to not deprecate  refresh   I think we might be able to deprecate and remove it in the future  but right now it s not clear  In test  we have a custom resolver that instantiates template objects that have a view path x000D \n x000D \nAh right  This is something we support and Jos\u00e9 s book talk about it in the  Retrieving View Templates from Custom Stores  chapter https   pragprog com book jvrails2 crafting rails 4 applications", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "While upgrading to Rails 6 0 I m getting warning  x000D \n    x000D \nDEPRECATION WARNING  Single arity template handlers are deprecated   Template handlers must x000D \nnow accept two parameters  the view object and the source for the view object  x000D \nChange  x000D \n     Class call template  x000D \nTo  x000D \n     Class call template  source  x000D \n  called from  top  required   at  home wojtek Projects some project config environment rb 5  x000D \n    x000D \nwhich is not really clear where to find it  I suspect some gem  as I don t mess with templates in the app  x000D \nDo you have a clue how to track it ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This shouldn t be necessary if you  include  ActiveJob  TestHelper   https   github com rails rails blob master activejob lib active job test helper rb  in your test case   see guides  https   edgeguides rubyonrails org testing html custom assertions and testing jobs inside other components    This gives you queue adapter overriding for free spanning from setup to teardown in tests  I believe we provide the async adapter by default if you just want your jobs to run and don t care about asserting their behaviour ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Closing for reasons mentioned above  If you re testing jobs  you should be using  ActiveJob  TestHelper   Thank you for your pull request ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  In the future  you can add   ci skip   to your commit message for documentation only changes to skip the Travis build ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is fine  https   en wiktionary org wiki reraise", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "https   www merriam webster com dictionary ahold", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "https   www dictionary com browse useable", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you keep just this and revert all other changes ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "sure", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " abhaynikam Thanks  In the future  please add  ci skip  to commit message for skip the Travis build ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " y yagi   Sure  I ll keep that in mind  Thanks ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  jhawthorn  ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I don t see  receiver  used in any other method docs for this class  Maybe  Adds a foreign key  to the table using a supplied table name   would sound better ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Good point  I ll use that ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This change isn\u2019t worth it  The other variables would have to be renamed as well  But let\u2019s keep the git history here ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kaspth reverted this change ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " eileencodes I confirm the fix  it s now working as it was before  x000D \n x000D \nThanks for this PR and for all your amazing contributions to the Rails  tada ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for following up  msdundar  And thank you for testing the Rails 6 beta so we could find and fix this issue before the final release \u2764\ufe0f ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "How about just using  SQLCounter log  instead of  SQLCounter log all   x000D \n", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "And also   looks like  test has one does not use order by  also have the same problem  x000D \n x000D \nhttps   github com rails rails blob 41ffddbc8b7faec66a26bd48dfd36a9def6cc23f activerecord test cases associations has one associations test rb L36 L42", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the review  Updated as suggested ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "These test cases were added at b0a8ef1  x000D \nSeems that was intended to test   firm  part  but it also covered  Client find 3   part  x000D \nI d prefer to keep to cover both part as before to prevent any other regression in the future ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Show the failed queries   ORDER BY was used in the query    log all    was added at 3d1ff79 to ease to find the cause  x000D \nCan you add the same change to  test belongs to does not use order by  too ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the review  Removing   last  to check at least two sql queries  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Let\u2019s call the splat argument  options   like we do in the S3 service ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hi George  x000D \n  I have renamed that to options now x000D \n x000D \nThanks for the feedback", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What do you think about renaming the  context  argument to  renderer  or similar ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ya  I think we should ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "If formats is  NULL   should change the value to  nil    x000D \nIf this is left as  NULL Object new    it will be incorrectly judged where the value is nil or not   x000D \n x000D \nFor example  if using web console   NoMethodError  will be raise in lookup context   x000D \n x000D \n    x000D \nDEPRECATION WARNING  ActionView  Base instances should be constructed with a view renderer  x000D \nassigments  and a controller  x000D \n  called from new at  home y yagi  rbenv versions 2 6 0 lib ruby gems 2 6 0 gems web console 3 7 0 lib web console template rb 21  x000D \n x000D \nNoMethodError  undefined method  delete  for   Object 0x000055e2e6120880  x000D \n\tfrom  home y yagi src rails master y yagi rails actionview lib action view lookup context rb 258 in  formats   x000D \n\tfrom  home y yagi src rails master y yagi rails actionview lib action view base rb 206 in  build renderer  x000D \n\tfrom  home y yagi src rails master y yagi rails actionview lib action view base rb 243 in  initialize  x000D \n\tfrom  home y yagi  rbenv versions 2 6 0 lib ruby gems 2 6 0 gems web console 3 7 0 lib web console template rb 21 in  new  x000D \n\tfrom  home y yagi  rbenv versions 2 6 0 lib ruby gems 2 6 0 gems web console 3 7 0 lib web console template rb 21 in  render  x000D \n\tfrom  home y yagi  rbenv versions 2 6 0 lib ruby gems 2 6 0 gems web console 3 7 0 lib web console middleware rb 37 in  block in call  x000D \n\tfrom  home y yagi  rbenv versions 2 6 0 lib ruby gems 2 6 0 gems web console 3 7 0 lib web console middleware rb 20 in  catch  x000D \n\tfrom  home y yagi  rbenv versions 2 6 0 lib ruby gems 2 6 0 gems web console 3 7 0 lib web console middleware rb 20 in  call  x000D \n\tfrom  home y yagi src rails master y yagi rails actionpack lib action dispatch middleware show exceptions rb 33 in  call  x000D \n    x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " y yagi I think so  Can you commit the change ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Already fixed by eda0f574f129fcd5ad1fc58b55cb6d1db71ea95c ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I don t think we can iterate over  pool connections  here without holding the pool s lock  x000D \n x000D \nRegardless  we don t need to clear the query cache on all connections  we only need read your writes consistency for the current thread  If it s acceptable for a concurrent request in another process to see stale data  it should be acceptable for a concurrent request in another thread  too  x000D \n x000D \n   suggestion x000D \n            pool connection clear query cache  if pool active connection  x000D \n   ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  1  x000D \n x000D \nBeyond it being acceptable  having one thread s wipe out every cache in the system would be not great for hit rates   performance  x000D \n x000D \nAlong that line  I think I d actually go further  and limit this to only the current thread owned connection  in the peer pools     the corresponding same named pool in other handlers    not all pools ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yea this clearly blows up in the tests but also  eugeneius version doesn t pass either  x000D \n x000D \nI m starting to get really frustrated with the query cache  It seems like it just wasn t built for multiple connections and we may need to rethink it sooner rather than later ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ok I found a fix I think and I m not proud of it but the tests pass locally  I m not sure what consequences to test for at this point if the tests pass on CI  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " tenderlove and I looked at this today and came up with a different solution  We ve fixed the issue by adding a new method that clears the query cache for all the connections but only for the current thread  x000D \n x000D \nThe reason the thread test was failing before with  eugeneius s suggested change was because when we call  clear active connections   that calls  disable query cache  which clears all the caches for all the connections  The previous change broke that  but we made a new change that s better and more accurate ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you change this to  Support for  parameter permissions  in combination with Active Model mass assignment   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think  filtering  might better convey what it actually does", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ah  I agree  Let s go with  Support for  parameter filtering  in combination with Active Model mass assignment   instead ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  reads much better ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sorry to nitpick  but this doesn t really make sense to me  Can we go with   allows all requests if hosts is empty    and   hosts can be a single element   below ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sure ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  hosts can be a single element array  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  hosts can be a string  ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  hosts include  localhost in development  ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I have fixed the other references I found  Searching for  whitelist  finds other references  but they seem like class names and settings  which would be harder to change at this point  x000D \n x000D \nFor one  I cat at least play my part and remove the  whitelist  bits and settings I have in  web console   I won t change the settings themselves for now  so I don t break the existing installs   but at least alias them more proper wording and documented it in the README ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "No worries  fixed those tests names as well    1 ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Should this condition match the one above   I see it already doesn t  but I m not sure whether that s right  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think this might be one of those rare cases where a negative condition inside an  unless  actually reads better  x000D \n x000D \n   suggestion x000D \n          unless  connection supports lazy transactions     lazy transactions enabled     options  lazy     false x000D \n   ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hum  That s weird indeed  It looks like it should have been part of the conditional but wasn t  x000D \n x000D \nI ll try to figure out what this variable is for ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ok  it s a small optimization flag  and was indeed incorrectly set before  x000D \n x000D \nI fixed it as well ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Maybe we should consider calling this   lazy  or something  to flag that even though it s on a public API method  the option itself is not public API ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Maybe we should consider calling this   lazy  or something  to flag that even though it s on a public API method  the option itself is not public API  x000D \n x000D \nIndeed  I opened the PR a bit early to get a CI run  x000D \n x000D \nIMO that option could make sense as a public API  but we don t really need it for this PR  and it s a bit late in the release cycle to introduce a new option like this  x000D \n x000D \nI m \ud83d\udc4d to rename it as    lazy  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " matthewd I applied the changes you suggested  and the CI is about to go green  railties is very slow not sure why   x000D \n x000D \ncc  rafaelfranca ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Why version locked      3 5 1    version down  3 141 0  to  3 5 2   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That was by accident  Next time you fix it in master can you leave a note here so I don t spend time starting to fix it  \ud83d\ude04 Thanks   x000D \n x000D \nFixed in https   github com rails rails commit 1cfa913948a5ed37eb78ab5e97552384788245c7", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "No worries  Edouard chin we ve all been there  ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " gmcgibbon added a changelog entry  squashed and rebased ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hi  x000D \nsomeone reply to my PR  please  ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I would like to give you  Samemura a good advice that might help hit upon a good word or an implementation for for your intention  To begin with  I must explain some grammars  In general  prepositions take objects to the right as their complements  and Adverbs to the left  like one day   ago   and   in   one day   so when we want to write code in a similar way  we have to choose a preposition for a method name  unless you want to define a DSL that enables us to place methods after an object like  1 day earlier    Besides  the word  before  can be a preposition  adverb  and conjunction  To name a few  when a noun phrase follows  before   it means time prior to some event or an object in front of something  and in both cases  before is a preposition  To indicate time prior to a specific event  We can use the conjunction  before  as well  for example   before dinner  and  before we have dinner  mean the same  In your code example   before  acts as a preposition  so the meaning is  time prior prior to a day   and is ambiguous because we don t have any idea about what and when the day is  and can interpret it as a yesterday or some time before some day  except for the case we use something like  today  instead of  1 day   So It could be that this wouldn t improve code naturalness  Chaining methods  on the other hand  can serve your purpose   allowing us to write  1 day before  and  1 day ago   which are in the completely  grammatically correct order  Have you ever given it a try  or Any other good preposition ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hi  ken mike  thank you for the comments and agreed with you for basic grammar  x000D \n x000D \n    3 days ago    1 day ago    1 day from now   etc   x000D \n x000D \nThese are good readability for simple use case like  x000D \n    x000D \nUser where created at  3 days ago all day  x000D \n    x000D \n x000D \nBut the case to calculate date or time  not so good to me  x000D \n    x000D \nuser created at ago 3 days  x000D \n    x000D \n x000D \nBelow syntax I like to  x000D \n    x000D \nuser create at before 3 days  x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " Samemura Couldn t you write the below to calculate time or days prior to a user creation date  x000D \n   ruby  x000D \n3 days before user created at   x000D \n  or to calculate time from the creation x000D \n3 days after user created at  x000D \n   ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sometimes we would like to write code as english and it s ideal for human point of view but might not be happened in many case  x000D \n x000D \nSimply  these   before      after  are easier to think and remember when coding for me compared to   since      ago   x000D \n x000D \nAlso I would like to hear the thinking from some people ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the suggestion  but I agree that these spellings are less clear in meaning   3 days before user created at   and  user created at   3 days  seem like better existing choices   I agree  user created at ago 3 days   is also confusing  ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  In the future  you can add   ci skip   to your commit message for documentation only changes to skip the Travis build ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kamipo Thank you  I will be sure to use   ci skip   for documentation only contributions in the future  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Build failures seem like network errors  trying to connect to Azure     We should probably not be connecting to the network in test  x000D \n x000D \n img width  755  alt  job 58169 5   rails rails   travis ci 2019 01 28 13 11 57  src  https   user images githubusercontent com 3124 51866665 67cc7180 22fe 11e9 9a32 a47cd07a6171 png   x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This newline should be here  but not big deal  After the release header we always put two", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Added the newline back \ud83d\udc4d ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "typo  missing  i  in  applcation ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \n    Adds a middleware that can be inserted into your application that will x000D \n   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \n        The Resolver class should not be manipulated directly  If your x000D \n   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Not caused by this PR  but I m concerned about using mixed   writing  and   reading  roles in the same request  since   reading    replica   is true  connection isn t clear the query cache implicitly even if the   writing  connection of the  reading  is executed update queries  x000D \n x000D \nIs it the user responsibility ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kamipo I m not sure I follow  Do you mean if during a request that was a get head we did a write to the database the query cache wouldn t get cleared for that write   Something like this maybe x000D \n x000D \n   ruby x000D \n  get  something download x000D \ndef download x000D \n   file   file download x000D \n   ActiveRecord  Base connected to role   writing  do x000D \n      file update download count x000D \n   end x000D \n x000D \n   send data file x000D \nend x000D \n    x000D \n x000D \nI think we have this type of code in the GitHub application and I don t think we have an issue  but let me know if that s the kind of thing you re worried about and I can try to get a test together  or we can solve this later   tell the user they should be responsible for it depending on how serious of an issue we think it is  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m worried about the following case  I suppose that people would be confused by the staled cache  since disabling query cache makes working all things as expected  https   github com kamipo rails commit 855f59c3772e29d48d97ff650de67e2b4e3e3f79 x000D \n x000D \nhttps   github com kamipo query cache test commit 3cb54dd88cb7bac07ee6d45765bd277065c6be35 x000D \n   diff x000D \ndiff   git a app controllers posts controller rb b app controllers posts controller rb x000D \nindex 90b34dd  1fa3439 100644 x000D \n    a app controllers posts controller rb x000D \n    b app controllers posts controller rb x000D \n    26 7  26 19    class PostsController   ApplicationController x000D \n  x000D \n     PATCH PUT  posts 1 x000D \n   def update x000D \n        2  x000D \n       x000D \n       The following   post update post params   is happened on the   writing  connection  x000D \n       and then clear the cache on the   writing  connection  x000D \n       The cache on the   reading  connection is still remained  x000D \n     if  post update post params  x000D \n          3  x000D \n         x000D \n         If use the   reading  connection after update queries are executed on the   writing  connection  x000D \n         the query cache on the   reading  connection is already staled  x000D \n         people need to care about that case by themselves for now  x000D \n       set post x000D \n  x000D \n       render json   post x000D \n     else x000D \n       render json   post errors  status   unprocessable entity x000D \n    41 7  53 15    class PostsController   ApplicationController x000D \n   private x000D \n       Use callbacks to share common setup or constraints between actions  x000D \n     def set post x000D \n        post   Post find params  id   x000D \n          1  x000D \n         x000D \n         All connection pools are enabling query cache by default  x000D \n         So the following  Post find params  id    makes the cache on the   reading  connection  x000D \n         x000D \n         https   github com rails rails blob 536a190ab3690810a3b342b897f2585c4971229d activerecord lib active record query cache rb L31 L33 x000D \n       Post connected to role   reading  do x000D \n          post   Post find params  id   x000D \n       end x000D \n     end x000D \n  x000D \n       Only allow a trusted parameter  white list  through  x000D \ndiff   git a test controllers posts controller test rb b test controllers posts controller test rb x000D \nindex a35e2e1  b85121d 100644 x000D \n    a test controllers posts controller test rb x000D \n    b test controllers posts controller test rb x000D \n    24 8  24 9    class PostsControllerTest   ActionDispatch  IntegrationTest x000D \n   end x000D \n  x000D \n   test  should update post  do x000D \n     patch post url  post   params    post    body   post body  title   post title      as   json x000D \n     patch post url  post   params    post    body   post body  title   Updated       as   json x000D \n     assert response 200 x000D \n     assert match  r  title   Updated     response body x000D \n   end x000D \n  x000D \n   test  should destroy post  do x000D \ndiff   git a test test helper rb b test test helper rb x000D \nindex 0ff12e7  5d82a8b 100644 x000D \n    a test test helper rb x000D \n    b test test helper rb x000D \n    10 4  10 11    class ActiveSupport  TestCase x000D \n   fixtures  all x000D \n  x000D \n     Add more helper methods to be used by all tests here    x000D \n  x000D \n      enlist fixture connections  replaces connection pools in non default handlers x000D \n     by default writer connection pool  x000D \n     We can t test   reading  connection unless suppressing the effect of the method for now  x000D \n   def enlist fixture connections x000D \n        x000D \n   end x000D \n end x000D \n   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the example  kamipo  That is something users shouldn t do  You don t want to wrap the  set post  in a reading only block because you don t know whether the replicas will be caught up or not  The request and middleware should handle that particular case for you  x000D \n x000D \nUsers should only use the reading block in their application when they know they absolutely want to send all traffic regardless of recent writes to the replicas  We do that in some places in our application as well but we re really careful about when we use it ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for your explaining  I understand that using the reading block carefully is the user responsibility  x000D \n x000D \nI was encountered the staled query cache issue in our app before  In that time  I thought that the easiest way to solve that issue is not enabling query cache  x000D \n x000D \nBut I realized that we have no official way to not enabling query cache  since the  QueryCache  does two things  removing the enabling query cache causes removing the releasing active connection to pool too  x000D \n x000D \nhttps   github com rails rails blob 8309cd2c68f548987b8447475c7735a19714baaa activerecord lib active record query cache rb L31 L33 x000D \n x000D \nhttps   github com rails rails blob 8309cd2c68f548987b8447475c7735a19714baaa activerecord lib active record query cache rb L41 L44 x000D \n x000D \nSo people need to care about that the query cache in the replica connections isn t cleared in a request implicitly for now ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hey  eileencodes  Thanks for the awesome idea and the implementation  Looking forward to getting it merged  Do you think that it makes sense to add out of the box resolvers for MySQL and PostgreSQL which take into account actual lag between primary replica ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This looks pretty good  but it won t work for api calls that don t use a session  right   x000D \nWe use something similar  but we cache last write based on user ip to avoid that issue  x000D \nso would be great if it s easy to plug in a different  decider  later on and maybe call out this downside in the docs ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " grosser the  DatabaseSelector  middleware is designed such that you can configure it with a strategy for determining  last write    In your  config ru  just provide the  DatabaseSelector  with a classes that implement the strategy you would like to use   We just default the strategy to use the session ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Cool and highly desired feature for many projects  Great to see it being implemented inside Rails  x000D \n x000D \nBut why 5 sec is hard coded as a constant  I m sure many would like to be able to configure it  raising to 30 seconds or even higher  ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Cool and highly desired feature for many projects  Great to see it being implemented inside Rails  x000D \n   x000D \n  But why 5 sec is hard coded as constant  I m sore many would like to be able configure it  perhaps to higher values   x000D \n x000D \nThe default is hardcoded  but the actual value used is determined by this method  x000D \n x000D \nhttps   github com rails rails pull 35073 files diff 40ebc1f4683641b47eb0c9a447c08998R77 x000D \n x000D \nso one could simply write their own  Resolver  with whatever behavior is appropriate for their case  e g   x000D \n x000D \n    x000D \n      x000D \nclass VeryPatientResolver   Resolver x000D \n  def send to replica wait time x000D \n    60 seconds x000D \n  end x000D \nend x000D \n    x000D \n x000D \nAll that s actually needed is to have your own definition of  read from primary    though  like the docs say ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " fj  thanks for the answer  Well  it s good that it can be changed without code patching  but with this way  it s still hard to change  it s not so clear  x000D \n x000D \nI think that it would be much better if this parameter can be tuned via changing configuration files  not via coding  In big projects code changes and config changes are two very separated things ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "As requested by  dhh in the Rails chat I ve added configuration options for the delay timeout  and setting the resolver and operations classes  x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "To answer other unanswered questions here  x000D \n x000D \nScope creep is real \ud83d\ude04 and while I think it would be awesome to have Rails calculate replica lag it s too much for this PR  This is a good base for Rails 6  x000D \n x000D \nImproving built in switching strategies is definitely something I want to see in the future  We re also experimenting with using MySQL GTID s for switching  but we re not there yet   We re not done improving multiple database and Active Record  and we have a lot more stuff to upstream from GitHub  ", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Need to change this in  actiontext db migrate 201805281641 create action text tables rb  https   github com rails rails blob master actiontext db migrate 201805281641 create action text tables rb  as well  x000D \n x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Should unrecognized  options  size   raise an ArgumentError for MySQL ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Equivalent to  spec  size      size to sym inspect   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "ah    you are right ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It is for pretty options ordering   t text  foo  size   medium  default   default   null  false  comment   comment    ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Changed from mediumtext  16 MiB  to longtext  4 GiB  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Added an ArgumentError ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "hm    I ve realized that  limit  16777215  is ignored on PostgreSQL adapter  so Action Text originally work on PostgreSQL  x000D \n x000D \nhttps   github com rails rails blob 5a8f0c7226b2b16c9cf1b6ef5478fe5603348e17 activerecord lib active record connection adapters postgresql schema statements rb L553 L558 x000D \n x000D \nI think that using  limit  16777215   mediumtext 16 MiB  not  limit  4294967295   longtext 4 GiB  is to ignore the  limit  option on PostgreSQL adapter  x000D \nSo how about changing mediumtext to longtext for MySQL  16 MiB is still too shorter than PostgreSQL s limit  1 GiB  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "How the attacker could use this information  It is also present in every HTML page that has a form and considered public information  so why should we filter from logs ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Apologies  haven t realized that ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We already have an open PR for this   26206 x000D \n x000D \nUpstream discussion seems to have stalled  so perhaps we should revisit including it ourselves ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " matthewd it s not the same in two aspects  x000D \n  Using enumerable would not work for AR because it calls  each  which would walk through all matching records  which could be 5  10  1000    The  limit 2   is crucial here  x000D \n  I want to have the option to not raise if there s none", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " matthewd could you reopen ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think this is good  Can you add the CHANGELOG entry ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "On the other hand  would it be better to have resets imply before reset  x000D \n x000D \nIf not  then perhaps we should also add a after reset alias to resets  or the other way around  for readability ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I thought about changing  resets  but some times you will need both so add a  after reset  alias too would be nice ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you  rafaelfranca and  kaspth  Adding an  after reset  alias is a good idea  I ll add that and the  CHANGELOG  entry  ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  I didn t find a reliable trigger to change the timezone handling  local vs  utc   x000D \n x000D \nThe mysql adapter does the timezone check the same way for every query  here  https   github com rails rails blob master activerecord lib active record connection adapters mysql database statements rb L35 L37   x000D \n x000D \n x000D \n", "annotation": {"notes": "", "label": ["offer"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " larskanis Thanks ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yes  this is cosmetic change as it affects git commit history  Next time someone makes changes in these files rubocop can take care of it ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  vipulnsward \ud83d\udc4d ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  yuki24 ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks guys  x000D \nAny chance that it becomes part of  v5 2  too ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " SzNagyMisu In Rails 6 0  the way errors are shown in the debug view is fundamentally different from 5 2  Because of that  this change can t easily be backported to older versions  I would say wait until 6 0 is out if that s okay with you ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Got it  thanks  smile ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Does it make more sense to do  options  locals  to h symbolize keys  instead  Using AC Params  this would ensure they are permitted before being used as locals ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve considered that also  but that has other side effects on the object that was passed in as well  x000D \n x000D \nConsider this  x000D \n   ruby x000D \nrender partial   customer   locals  ActionController  Parameters new customer    name   David     permit  x000D \n    x000D \nif we were to call   to h symbolize keys  on the value that is passed it   to h  will convert it to    customer     name    David     and  symbolize keys  will then convert it to   customer    name    David      x000D \n x000D \nHowever  if the application was expecting the name using   name  it would break  x000D \n x000D \nPassing the object untouched allows us to keep the old behaviour  In the case of  AC  Parameters   since it allows indifferent access    name  works if nothing messes with it ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "To be fair I prefer to revert the PR that introduced this code  I find the usage of both symbols and string keys confusing and inconsistent  Most of the places we only support symbols and opening an exception here will just cause more PRs adding support in other places  x000D \n x000D \nCan you change the PR to revert that commit ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca Done ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " S3Service  needs to implement  update metadata  like  GCSService  to cover direct uploads ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ended up checking if this was a multi db application by seeing if the handler was equivalent to the default handler and then using the original error message for a single db application since the role isn t applicable in a single db app ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " colorbox Thanks ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yay ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "If we re creating anonymous subclasses  do we need the separate template container module  Can we use the subclass as the container directly ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Seeing a decent amount of code  mostly vendored Rails  hard to exclude  that references this class directly  https   github com search l Ruby q detailskey type Code", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Are we checking for changes from the DetailsKey view context class because we used to be clearing   view context class  entirely ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Seeing this  clear view path and fallback caches  boilerplate repeated  Worth wrapping up so we have one spot to ask AC to start fresh ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Need a deprecation like message saying the config no longer does anything ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Public API  Deprecation message ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ya  I was thinking this too   I just refactored in to a module since that s what we  were  doing   I ll pull the methods up in to the class ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That s effectively what was happening    This middleware  https   github com rails rails blob 52af51c08a48ea7c6e0df09e2470a66a3141087d actionview lib action view digestor rb L11 L15  would cause the  cache in the resolver  https   github com rails rails blob 52af51c08a48ea7c6e0df09e2470a66a3141087d actionview lib action view template resolver rb L73  to always miss   Meaning the templates get recompiled every request   This maintains the same behavior  but allows us to eliminate the finalizer since the methods are thrown away ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yep  agree   I ve kept the repetition because I don t have a clear idea on what all the caches are  also  why aren t  fallbacks  part of  view paths    We search both of them  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve only been able to find vendored Rails copies referencing this   It s been  nodoc d forever  Do you think it s worthwhile to maintain the API   I only moved the constant because of require order  but my plan is to move the resolver cache inside this class too  possibly those view path caches too ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "can we rename this method   av  is too much lingo  Maybe  build view context class  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixed here 3ea2f9958677b0df627f92cb908e11ac9260dec1", "annotation": {"notes": "", "label": ["offer"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yep   That s a much better name  3df7b96e38837c4880212def203c4d4fb359d99d", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Deprecated in 88b3c454f753c0ce85e8df01d5aacf70fcf29b91", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Deprecated in 88b3c454f753c0ce85e8df01d5aacf70fcf29b91", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " jeremy I want to keep this repetition until the leak is fixed  then consolidate expiration and eliminate the repetitive code ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Your changeling entries should probably be above the beta1 line  so they stand out in the eventual beta2 release  It would also be good to put your name on these changes \ud83d\ude0a", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The  thata  is clear  hold the extra a  just like  that  \ud83d\ude04", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixed  thanks  \ud83d\ude0a", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixed  thank you", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  How will devs writing new tests know to use  with empty template cache  or to clear other caches beforehand  x000D \n x000D \nI think I can add that to the exception message when it tries to look up the compiled method location   That should help folks migrate   I m not thrilled with  with empty template cache  as the method name though ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This sentence isn t complete  Can you change  Action Cable allows to configure the amount of simultaneously processed threads in the worker pool  to  Action Cable allows the application to configure the number of simultaneously processed threads in the worker pool    ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I know you didn t write this but I think it would be better worded to change  The default worker pool size is set to 4  so that means you have to make at least that available  to  The default worker pool size is set to 4  so x000D \nthat means you have to make at least 4 database connections available  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Appreciate  eileencodes ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hey  eileencodes  could you take a look at it once again ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you add one more empty line here ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "For breaking up strings  you could also use a heredoc and  squish  https   edgeapi rubyonrails org classes String html method i squish  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "These are cosmetic changes which we don\u2019t accept ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Is this really necessary ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I\u2019d rather keep the git history here ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yup  Can you please revert  If you want to fix typos  it is fine  If you want to change the way the code looks  please don t ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think it is fine here  That word doesn t exist \ud83d\ude04 ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kaspth  rafaelfranca I think this is good to go now  We can merge this ", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the PR  x000D \n x000D \nThis is a regression caused by 5b6daff5b6d5439e07c058718069f54b34970f93  which changed trying RangeError is caused from  nil   to  value for database   x000D \n x000D \nI ve considered whether the  value is a  StatementCache  Substitute   guard is necessary or not in 5b6daff5b6d5439e07c058718069f54b34970f93  but I missed that float case  since  integer type serialize value   which only raises RangeError is safe for the  Substitute  object by  rescue nil   x000D \n x000D \nhttps   github com rails rails blob d1456e3ad52cdab6d2fa07ef3f239631a20a9a1f activemodel lib active model type integer rb L42 x000D \n x000D \nWe ve learned that  value for database  still should not be called directly in visiting Arel AST if the value in  BindParam  is the  Substitute  object  so how about adding the guard in  unboundable   instead  x000D \n x000D \n   diff x000D \ndiff   git a activerecord lib active record relation query attribute rb b activerecord lib active record relation query attribute rb x000D \nindex 5e0b4ac160  57d5802a47 100644 x000D \n    a activerecord lib active record relation query attribute rb x000D \n    b activerecord lib active record relation query attribute rb x000D \n    29 6  29 8    def infinite  x000D \n       end x000D \n  x000D \n       def unboundable  x000D \n         return if value before type cast is a  StatementCache  Substitute  x000D \n  x000D \n         if defined    unboundable  x000D \n             unboundable x000D \n         else x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  how about adding the guard in  unboundable   instead  x000D \n x000D \nSure   Done", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  can you squash your commits in one  x000D \n x000D \nSure  Done", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "If this method is intended to be used in app tests  it should be documented ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This method should be    nodoc  ed or made private\u2014it doesn\u2019t seem to be used elsewhere  so preferably the latter ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Done  x000D \nAdded a note to the change log ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Done ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Let\u2019s also rename to serialize broadcasting  Stringify sounds JS like ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sure  x000D \n x000D \n  Stringify sounds JS like  x000D \n x000D \nYep  I didn t like it either  x000D \n x000D \nThanks ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "A change log entry is only for public API  Just remove this \u201cbefore\u201d ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Now that this is public API  can we show an example ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "To be honest should we even expose broadcasting for or just have this assertion call it automatically when passed a model ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixtures are a method call  not a hash lookup  Use parents instead of brackets ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We do this automatically when we re within a channel test case  has been implemented in https   github com rails rails pull 33969   but we cannot do this in other contexts   cause we don t know about the channel ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Oops  x000D \nFixed in other related docs guides too ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  I just realised I should have asked you to squash your commits down to 1  oh well  next time  D", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Confirmed this PR fixed that failure ", "annotation": {"notes": "", "label": ["offer"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Why should a bit of DSL be added if this is all what it actually does  You already figured out how to accomplish what you needed  an early return guard clause in your migration ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Adding the early return guard it prevents to run the migration but when I remove the return guard it won t try to run it again \ud83d\ude05 ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I don\u2019t understand the use case and for rails to promote running migrations in only some databases seems fraught  x000D \n x000D \nAnyway  you can move your if and unless to within  change  and that should work  Thanks ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kaspth the migration version is being added to  schema migrations  even with the guard clause \ud83d\ude05 that s why I thought about this little DSL ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Before  d126c0d   to s  was never called  so why do we need to call now  And  what in  d126c0d  was making this work since we didn t have  to s  ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I guess my commit message could have been more clear \ud83d\ude05  x000D \n x000D \nPrevious implementation was using  Kernel Float  which was implicitely calling  to s  on the argument x000D \n x000D \nBigDecimal will raise a TypeError if the initial is neither Integer  Float  Rational  BigDecimal nor String  The use of BigDecimal was introduced in  d126c0d   x000D \n x000D \n x000D \nThe change made in https   github com rails rails pull 35010 files diff 58f66170fe2bce77e8a8b3c69b77a0d6R109 x000D \nisn t related to the same commit  but to https   github com rails rails pull 34693", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I tried to reproduce the  Kernel Float  behavior and it doesn t implicitly call  to s   x000D \n x000D \n    x000D \n   class Foo x000D \n     def to s x000D \n        1  x000D \n       end x000D \n     end x000D \n    to s x000D \n   Kernel Float Foo new  x000D \nTraceback  most recent call last   x000D \n        5  from  Users rafaelfranca  rbenv versions 2 6 0 bin irb 23 in   main   x000D \n        4  from  Users rafaelfranca  rbenv versions 2 6 0 bin irb 23 in  load  x000D \n        3  from  Users rafaelfranca  rbenv versions 2 6 0 lib ruby gems 2 6 0 gems irb 1 0 0 exe irb 11 in   top  required    x000D \n        2  from  irb  6 x000D \n        1  from  irb  6 in  Float  x000D \nTypeError  can t convert Foo into Float  x000D \n   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for double checking you are right I got confused  From the Ruby doc x000D \n x000D \n  Kernel Float arg  \u2192 float x000D \nReturns arg converted to a float  Numeric types are converted directly  the rest are converted using arg to f  x000D \n x000D \nTo keep compatibility  that would mean we d have to call  BigDecimal raw value to f  Float  DIG   1   we can t convert a Float without a precision  x000D \n x000D \nThat being said  to check if the raw value is a decimal we are calling  to s  on it already https   github com rails rails blob 3f0c7c5580e67120b2a42552c3624b4e552aa721 activemodel lib active model validations numericality rb L105  x000D \nDon t we want to keep consistency and also call  to s  when converting to a BigDecimal  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I was hopping by understanding how this was working in the past we could decide what is the best way to fix this  I m not against calling to s  but it seems like to s was not what was used in the past ", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We can remove  DECIMAL REGEX  too  x000D \nhttps   github com rails rails pull 35010 files diff 58f66170fe2bce77e8a8b3c69b77a0d6L13 x000D \n", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "How about just using  Kernel Float raw value  to d  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ah yes thanks  absolutely  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Edited PR with another implementation  commit and PR description updated ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think the idea is that this node inherit from NodeExpression in this commit but we forgot to do it  https   github com rails arel commit 2d78e3a160068d7a024e30b2178084d16cea9807 diff 33c3f8d4defca30f863e60a5a420579a  Can you investigate ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "oh    good catch ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yeah I can look into pulling this in ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve opened a new PR  35046 for this ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " vizakenjack the reason it s  min  and  sec  is because these mirror the methods on the  Time  class   I think allowing both might cause confusion  If we were going to do anything I d probably go for raising an  ArgumentError  when passed invalid keys though there will be an overhead to that check ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Looks like there are a lot of different variants for  minute    minutes  or  min   x000D \n x000D \nFor example  in Ruby   minute second works only in DateTime  but does not work for Time  x000D \n img width  562  alt  2019 01 22 18 28 05  src  https   user images githubusercontent com 91447 51545674 80a6d400 1e73 11e9 9225 240f21e926fa png   x000D \n x000D \nHowever  there is an ActiveSupport s method   advance  in Time  that accepts only  minutes   and does not work with  min   x000D \n img width  424  alt  2019 01 22 18 32 21  src  https   user images githubusercontent com 91447 51545930 193d5400 1e74 11e9 9aa9 1ce9271002df png   x000D \n x000D \nShouldn t it be the same ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " vizakenjack sorry for not replying sooner  Yes  there are additional aliases on  DateTime  for  min  and  sec  but since they re not defined on  Time  I wouldn t want to step on Ruby core s toes so to speak  As for the difference between  change  and  advance  I see the former as setting properties on an instance whereas the latter is more to do with  ActiveSupport  Duration  and so mirrors the names there  x000D \n x000D \nI feel the complexity and overhead of checking multiple keys for minutes and seconds in  change  and  advance  isn t worth the small gain in consistency and may introduce other inconsistencies like what happens when you have both  min  and  minute  keys  So thanks for the PR but unless someone else from Rails Core has a strong opinion I think we ll leave things as they are ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  params  article  does not return an ActionController  Parameters x000D \n x000D \nBy looking at  these tests  https   github com rails rails blob master actionpack test controller parameters accessors test rb L22 L31  I see that  params  article    should return instance of  ActionController  Parameters  x000D \n x000D \nIn the guide  above we have  render plain  params  article  inspect  that results in   ActionController  Parameters   title    First Article     text    This is my first article    permitted  false   on output  so everything should be correct ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  ActionController  Parameters      https   github com rails rails blob 4f62e757caf608d30d46ee745f4f666fb8eba2a7 actionpack lib action controller metal strong parameters rb L567  casts value hashes to parameters  I think the guide is trying to emphasize the form fields more than all the parameters you can get from  params   As it mentions below   In this situation  the only parameters that matter are the ones from the form   x000D \n x000D \nWith that in mind  I wouldn t call it a mistake  so I m going to close this  Thank you for your pull request ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sure  gmcgibbon  There is one more occurrence of  webserver   here  https   github com rails rails blob master actionpack test dispatch live response test rb L65  replacing it ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " alassek can you squash your commits into 1  thanks ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " eileencodes done ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Check out the discussion in https   github com rails rails pull 30157 to see why we do not do this  Thank you for the Pull Request ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sorry for the duplicate PR \ud83d\udc4d ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think it would be smarter to display the current environment in the  if  condition  That way  it isn t lying if you run into this by some chance in test   production etc ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think we don t need an  if  if we point the users to add this to the environment file  where it should be ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "In that case we should probably say this instead  x000D \n x000D \n    x000D \nTo allow requests to      host     add the following to your environment configuration  x000D \n x000D \nconfig hosts  lt  lt        host     x000D \n   ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This sounds good to me  Does anyone have security concerns here ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Should there be a test  I realize it s using a  development   check but that could possibly be mocked out in some fashion ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " gmcgibbon I ve added a simple test where you suggested ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udc4f ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "would be great to fix this example   20 00 00 UTC      20 30 00 UTC  and the same below ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " bogdanvlviv ahh  good spot x000D \n", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "So  I m just curious about this change  Would you mind guiding me to where the default of year  2000  is being set  Does that come from Ruby or from the database server if you give them partial dates ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  So  I m just curious about this change  Would you mind guiding me to where the default of year  2000  is being set  Does that come from Ruby or from the database server if you give them partial dates  x000D \n x000D \n sikachu It s a longstanding Rails convention   probably chosen when  Time  didn t support the range of values it does now  DBs like MySQL and PostgreSQL just return the time of day and we have to pick a date for the  Time  instance and 2000 01 01 is as good as any ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What errors are we swallowing here ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think  ActiveStorage  RepresentationsController show  needs the same treatment  Would you mind taking a look ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Regardless of what happened here  I wanted to restore  ActiveStorage    Blob service   x000D \nFixed not to swallow errors ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sweet good job fixing this  Just hit this problem using beta1", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m going to merge this since RuboCop 0 61 0 includes the fix https   github com rubocop hq rubocop pull 6484  https   github com rubocop hq rubocop pull 6449  which I ve requested that to  koic  x000D \n x000D \nRelated  34666 ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks too ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Could we fix this by prefixing the command with the Rails environment  Seems off that the environment handling leaks into the generate method ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yeah  handling env variables as arguments is a   rake  only thing  https   github com ruby rake blob f0a897e3fb557f64f5da59785b1a4464826f77b2 lib rake application rb L751 L762   Prefixing the command with the variable instead should work everywhere   1  ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Wait  so if I run a rake task and set an env variable at the end it\u2019s actually not bash that makes it available in ENV  but Rake  I did not know that ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yeah  the shell assumes nothing about program s arguments  no matter whether they include an equal sign  smiley   x000D \n x000D \n   shell x000D \n  touch a txt  cat a txt RAILS ENV production x000D \ncat   RAILS ENV production   No existe el archivo o el directorio x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " deivid rodriguez  x000D \nThanks for your useful information  I was wondering if this feature works on Windows  By doing this  I think that rake was working as expected on Windows    x000D \n x000D \n kaspth  x000D \nIn my understanding  the same fix as rake is necessary for rails command  On unix  there is no problem if you specify the environment variable before the command  but on Windows it is aware that rake and rails are necessary to provide equivalent functionality  What do you think  x000D \n", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " y yagi That s a very good point   1   x000D \n x000D \nAnother idea would be to add support for passing env to  thor s run method  https   github com erikhuda thor blob master lib thor actions rb L245 L268     system   https   ruby doc org core 2 6 Kernel html method i system  already supports passing an env to it  and backticks would need to be replaced with   Open3 capture2e   https   ruby doc org stdlib 2 5 3 libdoc open3 rdoc Open3 html method c capture2e  or something similar ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I suspect that  rails  might need to learn to recognise such env like parameters  at least while we re transitioning subcommands from rake to thor  even if we mark them as deprecated along the way   I m a little surprised we haven t hit this yet  but imagine it ll be more noticeable as we cover more commands  that are run in more varied circumstances   x000D \n x000D \nAs implied by the mention of deprecation  though  I d prefer we didn t use that as our internal mechanism   x000D \n x000D \nWhile I always prefer a many args strategy for running subcommands  including passing env  properly   I m not sure it d work reliably here  I don t recall  when  it comes into play  but that    sudo   looks ominous   x000D \n x000D \nAll of that said  though  if we know we re running a  rails  subcommand  might it be worth considering invoking  Rails  Command  type stuff directly ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  I think your concern is correct   x000D \n x000D \nOriginally   generate  action did not recognize  env   document has no explanation   And since I can not think of a use case that needs to specify  env  when executing generator  I think there is no need to support that  x000D \nSince processing to eliminate  RAILS ENV  is necessary  I will merge this PR first  especially if there is no objection   x000D \n x000D \nI would like to consider separately about the behavior when  rails  action is executed  x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think this should go above the Rails 6 beta release line  because that already happened  Eg  https   github com rails rails pull 35033 files diff 1846d4882fa63eb5b1271541995cbfdcR1", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks   moved and force pushed ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "One last thing  we add an extra newline above release lines  Can you add that here  Thanks ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Done and done ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "How much does this buy us ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "As the result depends on the environment such as the network  the result is not stable  but this PR about to finish in about 35 37 minutes  while master now takes over 40 minutes   x000D \nmaster  https   travis ci org rails rails builds 481557872  x000D \nPR  https   travis ci org rails rails builds 481216646  x000D \n x000D \nBut before  as it is probably before the Action Mailbox is imported   it took about 30 minutes to complete  so I think there are probably other problems as well  I will investigate it   x000D \nhttps   travis ci org rails rails builds 471912896 x000D \n", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "There are improvements I d like to try yet  but first I d like to merge this PR ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Would this not cause warnings of unused arguments ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Currently Ruby doesn t raise any warnings of unused method arguments for now  x000D \n x000D \nhttps   travis ci org rails rails jobs 481187001", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Why do we need to do this ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Why do we need these similar overrides ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Should this be  supports datetime with precision   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Just keep  db schema rb  as before ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It is to inject  V5 2  TableDefinition  to the table definition instance  x000D \n x000D \nhttps   github com rails rails pull 34970 files diff 2a8be25f82da6b3935cc6a41300a1b01R19  x000D \n x000D \nIf the  change table  is removed  the  test timestamps doesnt set precision on change table  is failed  x000D \n x000D \nhttps   github com rails rails pull 34970 files diff ec048630132cce280a9445022318906eR140", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " supports datetime with precision   can t be used in the  ActiveRecord  TestCase  scope  x000D \n subsecond precision supported   is defined in the top level as a helper  x000D \n x000D \nhttps   github com rails rails blob 5fcf8e98808c59bc1496a4048e133a7b32512765 activerecord test cases helper rb L43 L45", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve changed to apply new default the same with Action Mailbox ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The PR was open for 7 days  why didn t you comment on it ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Well  It is not possible to see all the changes before they are merged  Usually  I try not to skip significant changes even if they are merged  But sometimes  when I have time  I  do code review  https   github com rails rails pull 34794  as well  Is something wrong with this PR ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "No  The changes itself are fine  it is just that a lot of your PRs are follow up of other changes and sometimes it looks like you are cleaning after us and that may cause a bad feeling in the original contributor  Even if you find something that needs to be improved after the PR is merged I d still comment on the PR and give the original author the chance of making the contribution itself  Of course this would means you are making more commits  but I think your contributions are in a level where it would not be hard to you to find some other contribution to make ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Even if you find something that needs to be improved after the PR is merged I d still comment on the PR and give the original author the chance of making the contribution itself   x000D \n x000D \n rafaelfranca I ll try to follow this approach next time ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can we not use  yield self   This make harder to backport ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Done   Note that I needed to use different variable names from the  mapping map  in the  else  branch to avoid  shadowing outer local variable  warnings ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I d prefer using the same variable names in both path  x000D \n   suggestion x000D \n              field attr  aggregate attr   mapping first x000D \n   ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Use  public send  instead since  respond to   doesn t include private protected methods by default  x000D \n x000D \nhttps   ruby doc org core 2 6 Object html method i respond to 3F x000D \n x000D \n   suggestion x000D \n                object respond to  aggr attr    object public send aggr attr    object x000D \n   ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That causes  shadowing outer local variable  ruby warnings", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "oh    I see   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Do we still need to go through  Mail  MessageIdField   x000D \n x000D \n   suggestion x000D \n            message checksum      Socket gethostname  mail   tap do  message id  x000D \n   ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That essentially verifies that we are generating a valid message id ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This change is not needed  Can you please revert ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This change is not needed  Can you please revert ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We want to keep the same API so we want  options  being passed here ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca just curious to know why we prefer      instead of   w    ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It is not a question of preference  it is that the code as it was is fine and we don t accept cosmetic changes in PRs ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This one still needs to be reverted ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "cool", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca squashed the commits  Thanks for quick review ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Should this installer still exists  Is not the idea to generate the application and already get actiontext on it like the other frameworks like actioncable  x000D \n x000D \ncc  dhh ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m not sure  TBH  Active Storage needs to be installed first  which requires running  rails active storage install   I think    x000D \n x000D \nAny reason not to merge this in the meantime ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think we can make that work  Not a blocker for this PR  just asking because this may be something we need to change before the beta2 ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yes  the idea is still that this requires running a task if you actually want to use it in the app  Since we do migrations and stuff  Just like active storage  But that everything is already there  Nothing to configure or setup or add dependencies for  Just a single task to run ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Should we move this into the timestamps method itself  We can define a 6 0 migration version ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I guess the precision is for MySQL 5 6   since datetime with no precision means unlimited precision for PostgreSQL and SQLite  x000D \nIf we want explicit precision for the timestamps  I ll create new PR as new migration default in Active Record ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yes  I think the precision is for MySQL  Well  if we could make it omit the precision on Postgres SQLite and only add it on MySQL if the server supports it  that seems ideal to me ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve just implemented  34970 ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Perhaps this should warn if  value  is true  maybe with a message more like  is now always true  so the setting is deprecated and will be removed     but raise if it s false ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Should we remove the default argument from  max updated column timestamp   It s private and I don t see it used anywhere else ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ah  you did \ud83d\udc4d", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Could we spare the second loop with this  x000D \n x000D \n   ruby x000D \ntimestamp attributes for update in model map    attr  self attr   to time   compact x000D \n   ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This deprecation added by Rails 6 0  Ref   32058  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I reverted fa791fb8e2a718b5d0430c7ca5a454678dfc192d with eb63faaa1af7ef28ae1a716d068acc447e28c174 ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you for catching that ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve found two deprecations that should be removed as well  x000D \n x000D \n  https   github com rails rails blob master actionpack lib action dispatch routing route set rb L593 L605  those deprecations are in Rails since 5 1  see  23980 x000D \n x000D \n  https   github com rails rails blob master activerecord lib active record attribute methods rb L194 L204 x000D \n x000D \n cc  rafaelfranca ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I left them by design ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think this doesn t do what you want   Rails application load seed  will return true ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think these changes are safe  so I m going to merge them   I ve got some more  possibly less safe stuff that depends on these changes  so I ll send a new PR with them ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udc4d ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Many projects call this anything from decorators  cells  presenters  carriers  interactors  services  etc  x000D \nThe purpose of this guide though is to explore over riding using the  pattern  instead of some specific naming convention  x000D \n x000D \nI think its better to refer to them as  Decorators  as a pattern instead of  Overrides  here  x000D \n x000D \ncc  fxn ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " vipulnsward I d agree with you if this kind of implementation was actually respecting the Decorator design pattern  AFAIK Decorator pattern is when you customize an instance in order to better adapt it to some context  x000D \n x000D \n   ruby x000D \nclass CountryDecorator   SimpleDelegator x000D \n  def initialize country  x000D \n    super country x000D \n  end x000D \n x000D \n  def translated name x000D \n    I18n translate  countries   iso   x000D \n  end x000D \nend x000D \n x000D \nCountryDecorator new Country new iso   US    translated name      Stati Uniti d America  x000D \n    x000D \n x000D \n class eval  instead is basically monkeypatching  Mixing the two concepts is confusing to me  and it is especially misleading for beginners  since it implicitly teaches readers that Decorator design pattern is like that ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Is there anything Action Cable can do to schedule its own worker automatically  I don t think it s that uncommon to have one or more tabs open to a site  so just theoretically it sounds like there s gains here  x000D \n x000D \n jeremy  javan have you explored some of this at Basecamp ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kaspth  x000D \n x000D \nYeah  it s possible in the future that the ActionCable library itself could offer built in support for easily running inside a worker  It might wise to wait a bit for that  though  If we start small by proceeding with these changes  we ll enable users to explore moving cables into a worker themselves  and then we d be in a better position to see the best patterns emerge and bring them into ActionCable ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "IMO  it\u2019s too opinionated to use Shared Worker by default  btw  AFAICS   it\u2019s not supported  https   caniuse com  search SharedWorker  by all major browsers yet   x000D \n x000D \nMaybe  optional support for  ActionCable createSharedConsumer  or smth like that  e g  consumer  adapetrization    x000D \nOr an ability to pass custom Socket wrapper ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   To avoid the  document   ReferenceError   I ve added an  if  typeof document      undefined    guard around the statements that add or remove the  visibilitychange  event listener  x000D \n x000D \nThat condition is pretty unclear out of context  Can it be extracted to an intention revealing helper   x000D \n x000D \nCan the test suite be updated to simulate running in a worker scope so we don t accidentally reference  window  or  document  again in the future  What about these references  https   github com rails rails blob a08827a90b5a9be79379019cf5b242bd7236d2e3 actioncable app javascript action cable index js L25 L35", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  IMO  it\u2019s too opinionated to use Shared Worker by default  btw  AFAICS   it\u2019s not supported  https   caniuse com  search SharedWorker  by all major browsers yet   x000D \n   x000D \n  Maybe  optional support for  ActionCable createSharedConsumer  or smth like that  e g  consumer  adapetrization    x000D \n  Or an ability to pass custom Socket wrapper  x000D \n x000D \nAgreed  I wouldn t suggest we make that the default  just an option  And yeah   SharedWorker  isn t supported everywhere  but fortunately it can fall back to a normal  Worker  which is widely supported  x000D \nhttps   github com rmacklin anycable demo blob 3e31274f5526241a67531e7940e8214ecb7677c2 app assets javascripts create worker js erb L1 L3", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Just curious  Would ActionCable run as is in a web worker if you stubbed out  window  and  document   Something like  x000D \n   js x000D \nself window   self document   self  x000D \nrequire  actioncable    x000D \n   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  What about these references  x000D \n x000D \nThose references don t prevent the usage in a worker because you can pass  url  explicitly to  createConsumer  which prevents those functions from trying to reference  document ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Right  but that s far from explicit  and as a reader of the code it s not clear why we can reference  document  freely in one place and have to test for it in another ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Can it be extracted to an intention revealing helper  x000D \n x000D \nAre you thinking along the lines of  x000D \n   js x000D \nconst documentInterfaceAvailable    typeof document      undefined   x000D \n    x000D \nor something else  x000D \n x000D \n  Can the test suite be updated to simulate running in a worker scope so we don t accidentally reference  window  or  document  again in the future  x000D \n x000D \nYeah  this is something I d like to do  I m not sure the best way to go about it  but my first idea was to try to fork https   github com Joris van der Wel karma mocha webworker and have it use QUnit instead of mocha  since that s what the existing test suite uses  Didn t want that to hold up this PR  though", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Right  but that s far from explicit  and as a reader of the code it s not clear why we can reference  document  freely in one place and have to test for it in another  x000D \n x000D \nYeah  Initially I started making those two functions configurable like  x000D \n   diff x000D \n export function createConsumer url    x000D \n const defaultOptions     getConfig  createWebSocketURL   x000D \n  x000D \n export function createConsumer url  options   defaultOptions    x000D \n   if  url    null    x000D \n     const urlConfig   getConfig  url   x000D \n     const urlConfig    options getConfig    defaultOptions getConfig   url   x000D \n     url    urlConfig   urlConfig   INTERNAL default mount path  x000D \n     x000D \n   return new Consumer createWebSocketURL url   x000D \n   return new Consumer  options createWebSocketURL    defaultOptions createWebSocketURL  url   x000D \n   x000D \n    x000D \nso that if you were using it in a web worker you could pass your own  getConfig  and  createWebSocketURL  that didn t rely on  document   But after realizing those are both ignored if you explicitly pass a WebSocket url  I was thinking we could leave it and potentially just address this in the documentation  x000D \n x000D \nWhat if the ActionCable guide called it out with something like   x000D \n  If you are using ActionCable in a web worker  you ll need to pass the WebSocket  url  explicitly to  createConsumer  since the worker won t have access to the  action cable url  meta tag nor to  document createElement  a    x000D \n x000D \nWe could also add a comment above those methods warning that they don t work in a web worker ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you give https   github com rails rails pull 34941 issuecomment 454546386 a try  please  I realize this is a small change  but it has long term maintenance implications  and I d prefer to make no changes at all if there s a simple workaround ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Are you thinking along the lines of  const documentInterfaceAvailable    typeof document      undefined    or something else  x000D \n x000D \nSomething else that reveals the intention  I d prefer to read  if  context isWorker    \u2026    or  if  context isWindow    \u2026    or similar  where appropriate   x000D \n x000D \n if  self instanceof Window    \u2026    could work too ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Can you give https   github com rails rails pull 34941 issuecomment 454546386 a try  please   x000D \n x000D \nSorry  I missed that comment before  x000D \n x000D \n  Just curious  Would ActionCable run as is in a web worker if you stubbed out  window  and  document   Something like  x000D \n   x000D \n     js x000D \n  self window   self document   self  x000D \n  require  actioncable    x000D \n      x000D \n x000D \nThis works in isolation  but I would strongly recommend against it in a real application  Modifying global state like that to fake that the worker script is running in a window context will leak into all the other code in the worker  This is dangerous because it can break other library code used by the worker by tricking it into incorrectly  assuming the worker is running in a window environment  https   github com axios axios blob 75c8b3f146aaa8a71f7dca0263686fb1799f8f31 lib utils js L168 L193  and using that assumption to access interfaces that aren t actually available  x000D \n x000D \n  I realize this is a small change  but it has long term maintenance implications  and I d prefer to make no changes at all if there s a simple workaround  x000D \n x000D \nI don t want to impose any long term maintenance commitment  so let s try to avoid that  How about we maintain that Rails doesn t officially support running ActionCable in a worker and that it could break at any time  while still avoiding the current  ReferenceError s with these changes   It s actually been great how stable the ActionCable s javascript package has been since the release  so I wouldn t be surprised if it still worked in a year  but we can avoid making any support guarantees   x000D \n x000D \n  Something else that reveals the intention  I d prefer to read  if  context isWorker    \u2026    or  if  context isWindow    \u2026    or similar  where appropriate  x000D \n   x000D \n   if  self instanceof Window    \u2026    could work too  x000D \n x000D \n if  self instanceof Window    \u2026    is a lot nicer to read more self documenting  but unfortunately would also throw a  ReferenceError  since the  Window  constructor is similarly not defined in the worker global scope  But  I just pushed up a simpler alternative which is to call  addEventListener  and  removeEventListener  without the explicit receiver  That ll still work in the window context while effectively being a no op in the worker context because the  visibilitychange  event won t ever get triggered there  Thus  we don t need to worry about abstracting the  if  typeof document      undefined    checks because they ve been removed ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  But  I just pushed up a simpler alternative which is to call  addEventListener  and  removeEventListener  without the explicit receiver  x000D \n x000D \nGreat  That s a perfectly reasonable compromise   x000D \n x000D \n For some reason I thought the   visibilitychange   https   developer mozilla org en US docs Web Events visibilitychange  event didn t bubble  but I was wrong  ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Mind updating the PR description to reflect the final change  It still describes your original approach using  if  typeof document      undefined     Happy to merge after that ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Updated the PR description ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  javan  By the way  are you planning to attend RailsConf this year  Would love to buy you a drink for all your help \ud83c\udf7b ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Not 100  sure yet  but I hope to be there  \ud83c\udf7b", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \nyou ll need to test both the channels and connection classes themsleves and that other x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \nConnection tests aim to check whether a connection s identifiers gets assigned properly x000D \n   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "There we go   palkan  \u2764", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I\u2019d probably draw the line here  These are the last two I wanted to support ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "An alternative for no array allocation  x000D \n x000D \n   diff x000D \ndiff   git a activesupport lib active support core ext date and time calculations rb b activesupport lib active support core ext date and time calculations rb x000D \nindex 05abd83221  e2e11545e2 100644 x000D \n    a activesupport lib active support core ext date and time calculations rb x000D \n    b activesupport lib active support core ext date and time calculations rb x000D \n    134 7  134 7    def beginning of month x000D \n         now   DateTime current      Fri  10 Jul 2015 18 41 29  0000 x000D \n         now beginning of quarter      Wed  01 Jul 2015 00 00 00  0000 x000D \n     def beginning of quarter x000D \n       first quarter month    10  7  4  1  detect    m  m    month   x000D \n       first quarter month   month    2   month    3 x000D \n       beginning of month change month  first quarter month  x000D \n     end x000D \n     alias  at beginning of quarter  beginning of quarter x000D \n    149 7  149 7    def beginning of quarter x000D \n         now   DateTime current      Fri  10 Jul 2015 18 41 29  0000 x000D \n         now end of quarter      Wed  30 Sep 2015 23 59 59  0000 x000D \n     def end of quarter x000D \n       last quarter month    3  6  9  12  detect    m  m    month   x000D \n       last quarter month   month    12   month    3 x000D \n       beginning of month change month  last quarter month  end of month x000D \n     end x000D \n     alias  at end of quarter  end of quarter x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kamipo I ve updated the code  It s 13  faster than constants and 20  faster than master ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thinking about this more  changing the gemspec would require an actual release of Rails 4 2 x and considering it s almost EoL I imagine that s unlikely  Worth a shot but totally understand if you folks close this PR ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "https   bundler io blog 2019 01 03 announcing bundler 2 html x000D \n x000D \nBundler 2 0 changelog clearly states  x000D \n Removed support for Ruby   2 3  x000D \n", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Update  Removed also an example that was testing the same as another one above  Squashed commits ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  but the tests are not documentation  and I think it s important to test these particular cases    the  false  one especially ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you for the pull requests but we prefer to not introduce new methods to our core extensions unless there are proven that the framework or a large number of applications will benefits from it  The  deep reverse merge  as  reverse merge  can be done just by inverting the order of the hashes in the call  so I don t think this would be very useful  x000D \n x000D \nIn your own example  options     size  25  coords    x  2  y   1     deep merge options   is easier to understand than  options   options deep reverse merge size  25  coords    x  2  y   1    ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Does it make sense to reference  ActionMailer  Parameterized  DeliveryJob  here  I think it should just say    specifies delivery job for sending mail  Defaults to  ActionMailer  Parameterized  DeliveryJob       You can t actually specify a parameterized delivery job ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udc4d Thanks  I missed mentioning  ActionMailer  Parameterized  DeliveryJob  here ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yeah  it doesn t make sense ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Agreed  I just fixed it ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I d not even talk about web servers  This also happens with non threaded server like unicorn  Each process will have a different locale  x000D \n x000D \n   suggestion x000D \n I18n locale  can leak into subsequent requests served by the same thread process if it is not consistently set in every controller  For example executing  I18n locale    es  in one POST requests will have effects for all later requests to controllers that don t set the locale  but only in that particular thread process  For that reason  instead of  I18n locale    you can use  I18n with locale  which does not have this leak issue  x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \nThe default locale is used for all translations unless  I18n locale   or  I18n with locale  is used  x000D \n   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The issue with the  locale  leaking into other requests if it is not consistently set in every controller is not related to thread safety  or Puma  I think that mentioning them implies that if you aren t using a threaded web server then it is not an issue you need to consider  which is not the case   x000D \n x000D \nMaybe something like  I18n locale can leek into subsequent requests served by the same thread process if it is not consistently set in every controller   x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " lsylvester yes  you are right  This Puma example is just example that I notice in my test  But I would leave it as an example since this  localization toggling  looks very strange when you first notice it    x000D \nI updated explanation with provided sentence  x000D \nFeel free to close this pull request if  multithreaded Puma  example is too much for I18n guide ", "annotation": {"notes": "", "label": ["greeting"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca yea  it is too much overhead for I18n guide to talk about web servers  so I accepted your suggestions", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It\u2019s clearer as is  Thanks ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think this sort of clarification in the guides is great ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I know it\u2019s annoying  but the trailing space on this line and the other Prefix lines below needs to be preserved ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you add the new route to the necessary tests  here  https   github com rails rails blob 9f1a07af0499080c9fd8815705a03a4c7e8fb506 railties test commands routes test rb  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Closer  It looks like there are a few more tests that need updating ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for such a quick merge   ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think this will give us a syntax error on 2 5   Can you conditionalize this test so we don t get build failures on 2 5 ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sure  The built actually failed for precisely this reason  I ll push an update tomorrow ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " tenderlove just pushed an update ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "D oh  what I did won t work for syntax error  see no evil  x000D \n x000D \nI can either  x000D \n x000D \n1  Come up with something that would work for syntax errors  x000D \n2  Leave the check as it is and replace  0    with  0  nil   they re equivalent   In Rubyies pre 2 6 the latter results in an  ArgumentError  exception  x000D \n x000D \n tenderlove what do you think ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "May I suggest this  x000D \n x000D \n   suggestion x000D \n            node   attribute between eval  0        Use eval for compatibility with Ruby   2 6 parser  x000D \n    x000D \n x000D \nThis way Ruby parser in version   2 6 will just overlook it ", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Great idea  Thanks ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " tenderlove  sikachu thanks for comments  The build is green now  Please have another look ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "As well as the packages for  activestorage  and  actiontext  now too  right  x000D \n x000D \nWho can the rest of the core team as owner by the way ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yeah  I ll update this list  And  I m working with Rafael to make sure the core team are all set up with publish permissions ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That s the name I was looking to hear \ud83d\ude04 x000D \n x000D \nSounds good ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  What happens when people next go to call  yarn install  and the packages have been renamed  x000D \n x000D \nThe packages aren t being renamed  technically  They re being published as new packages with new names  So  existing applications will need to update their  package json s to point to the new packages ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " javan shouldn t this be mentioned in the CHANGELOG and or Release Notes ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " connorshea  yes thank you  Added here https   github com rails rails commit e3d43333db2c70dac73d9b41ddd277dc8843ab32  ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "These are semantically important  visit always replaces the collector   although I don t think there s actually any code that relies on it", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " inject  shouldn t mutate memo  that s what  each with object  is for", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This feels slightly uglier  Does it maybe recognize   special case this spelling  x000D \n x000D \n   ruby x000D \nlocal scope   local scope    foo  x000D \n   ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " local scope   local scope    foo   would work for suppessing the ruby warning  but actually the variable is unused and the cop also regard that as useless  x000D \n x000D \n    x000D \n  be rubocop activesupport test test case test rb x000D \nInspecting 1 file x000D \nW x000D \n x000D \nOffenses  x000D \n x000D \nactivesupport test test case test rb 106 7  W  Lint UselessAssignment  Useless assignment to variable   local scope  x000D \n      local scope   local scope    foo  x000D \n                  x000D \nactivesupport test test case test rb 106 21  W  Lint UselessAssignment  Useless assignment to variable   local scope  x000D \n      local scope   local scope    foo  x000D \n                                x000D \n x000D \n1 file inspected  2 offenses detected x000D \n   ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Restored replacing the collector 95bf9d3a723d6d421b9bc9ce3c4eeafd25831c9e ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Changed using  each with object  instead of  inject  3ea3cc5edd76bf6929ebe51c10933d70ee9990a0 ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Actually   is there a cop for that ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "AFAICS RuboCop has  Style EachWithObject  cop  but it just check style  don t check the mutation  x000D \nhttps   rubocop readthedocs io en latest cops style  styleeachwithobject x000D \n x000D \nActually I don t know we should avoid the mutation  since we already have  inject   default by  Hash        or Array         with the mutation in many places  x000D \n x000D \ne g  x000D \n x000D \nhttps   github com rails rails blob 0bd4894d8b1977c00f4af64947ef860eee5d2b44 activesupport lib active support values time zone rb L271 L274 x000D \n x000D \nhttps   github com rails rails blob 82d184839e573b2085d3ea8007f81ab31827edd0 railties lib rails source annotation extractor rb L128 L132 x000D \n x000D \nand more ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think      Route helpers will also be renamed from  preview photo url  and  preview photo path  to  photo preview url  and  photo preview path      would sound better ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " gmcgibbon updated  Thanks for your advice ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you add a failure test case without this change ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I wrote test case and run test while watching active record test document  x000D \nhttps   guides rubyonrails org contributing to ruby on rails html testing active record x000D \n x000D \n TEST CASE COMMIT  https   github com rails rails pull 34896 commits fcd3fdb37586e880bde4b243a5b8becb337f0539  x000D \n x000D \n x000D \nAnd  this commit  https   github com rails rails pull 34896 commits ec7932d91a0725d8757ee4823df6e8b5081d9bd8  was reverted and I execute    bundle exec rake test mysql2   I got error for before changes  x000D \n x000D \n details  summary  Error   summary  x000D \n x000D \n   shell x000D \n HOME  rbenv versions 2 5 0 bin ruby  w  I lib test   I  HOME develop library rails vendor bundle ruby 2 5 0 gems rake 12 3 1 lib    HOME develop library rails vendor bundle ruby 2 5 0 gems rake 12 3 1 lib rake rake test loader rb   test cases dirty test rb   test cases transaction callbacks test rb   test cases integration test rb   test cases connection pool test rb   test cases coders yaml column test rb   test cases coders json test rb   test cases serialization test rb   test cases habtm destroy order test rb   test cases primary keys test rb   test cases collection cache key test rb   test cases associations inverse associations test rb   test cases associations cascaded eager loading test rb   test cases associations eager test rb   test cases associations has one associations test rb   test cases associations inner join association test rb   test cases associations has many through associations test rb   test cases associations left outer join association test rb   test cases associations nested through associations test rb   test cases associations bidirectional destroy dependencies test rb   test cases associations eager singularization test rb   test cases associations has many associations test rb   test cases associations has one through associations test rb   test cases associations extension test rb   test cases associations has and belongs to many associations test rb   test cases associations belongs to associations test rb   test cases associations eager load includes full sti class test rb   test cases associations eager load nested include test rb   test cases associations required test rb   test cases associations callbacks test rb   test cases associations join model test rb   test cases tasks database tasks test rb   test cases tasks postgresql rake test rb   test cases tasks mysql rake test rb   test cases tasks sqlite rake test rb   test cases nested attributes with callbacks test rb   test cases relation delete all test rb   test cases relation merging test rb   test cases relation delegation test rb   test cases relation where test rb   test cases relation or test rb   test cases relation update all test rb   test cases relation record fetch warning test rb   test cases relation where chain test rb   test cases relation predicate builder test rb   test cases relation mutation test rb   test cases relation select test rb   test cases relation where clause test rb   test cases reaper test rb   test cases disconnected test rb   test cases reload models test rb   test cases readonly test rb   test cases json serialization test rb   test cases invertible migration test rb   test cases boolean test rb   test cases cache key test rb   test cases transaction isolation test rb   test cases attribute decorators test rb   test cases associations test rb   test cases i18n test rb   test cases nested attributes test rb   test cases finder respond to test rb   test cases instrumentation test rb   test cases inheritance test rb   test cases modules test rb   test cases enum test rb   test cases query cache test rb   test cases attributes test rb   test cases date test rb   test cases counter cache test rb   test cases finder test rb   test cases ar schema test rb   test cases multiparameter attributes test rb   test cases pooled connections test rb   test cases migration test rb   test cases quoting test rb   test cases legacy configurations test rb   test cases scoping named scoping test rb   test cases scoping default scoping test rb   test cases scoping relation scoping test rb   test cases secure token test rb   test cases log subscriber test rb   test cases type test rb   test cases attribute methods test rb   test cases custom locking test rb   test cases serialized attribute test rb   test cases validations test rb   test cases hot compatibility test rb   test cases result test rb   test cases view test rb   test cases database statements test rb   test cases schema dumper test rb   test cases validations absence validation test rb   test cases validations i18n validation test rb   test cases validations uniqueness validation test rb   test cases validations i18n generate message validation test rb   test cases validations presence validation test rb   test cases validations length validation test rb   test cases validations association validation test rb   test cases date time test rb   test cases mixin test rb   test cases filter attributes test rb   test cases touch later test rb   test cases explain test rb   test cases core test rb   test cases types test rb   test cases statement invalid test rb   test cases binary test rb   test cases defaults test rb   test cases numeric data test rb   test cases type unsigned integer test rb   test cases type type map test rb   test cases type date time test rb   test cases type adapter specific registry test rb   test cases type string test rb   test cases type integer test rb   test cases persistence test rb   test cases connection adapters connection specification test rb   test cases connection adapters connection handler test rb   test cases connection adapters type lookup test rb   test cases connection adapters connection handlers multi db test rb   test cases connection adapters mysql type lookup test rb   test cases connection adapters merge and resolve default url config test rb   test cases connection adapters adapter leasing test rb   test cases connection adapters schema cache test rb   test cases locking test rb   test cases adapter test rb   test cases column alias test rb   test cases suppressor test rb   test cases migrator test rb   test cases callbacks test rb   test cases arel visitors ibm db test rb   test cases arel visitors sqlite test rb   test cases arel visitors mssql test rb   test cases arel visitors oracle12 test rb   test cases arel visitors informix test rb   test cases arel visitors postgres test rb   test cases arel visitors depth first test rb   test cases arel visitors mysql test rb   test cases arel visitors oracle test rb   test cases arel visitors to sql test rb   test cases arel visitors dot test rb   test cases arel visitors dispatch contamination test rb   test cases arel update manager test rb   test cases arel collectors sql string test rb   test cases arel collectors composite test rb   test cases arel collectors bind test rb   test cases arel collectors substitute bind collector test rb   test cases arel crud test rb   test cases arel nodes ascending test rb   test cases arel nodes node test rb   test cases arel nodes window test rb   test cases arel nodes bind param test rb   test cases arel nodes bin test rb   test cases arel nodes descending test rb   test cases arel nodes infix operation test rb   test cases arel nodes casted test rb   test cases arel nodes sum test rb   test cases arel nodes case test rb   test cases arel nodes named function test rb   test cases arel nodes unary operation test rb   test cases arel nodes count test rb   test cases arel nodes sql literal test rb   test cases arel nodes grouping test rb   test cases arel nodes or test rb   test cases arel nodes over test rb   test cases arel nodes true test rb   test cases arel nodes as test rb   test cases arel nodes binary test rb   test cases arel nodes select core test rb   test cases arel nodes false test rb   test cases arel nodes extract test rb   test cases arel nodes not test rb   test cases arel nodes equality test rb   test cases arel nodes and test rb   test cases arel nodes select statement test rb   test cases arel nodes delete statement test rb   test cases arel nodes table alias test rb   test cases arel nodes insert statement test rb   test cases arel nodes update statement test rb   test cases arel nodes distinct test rb   test cases arel attributes test rb   test cases arel delete manager test rb   test cases arel factory methods test rb   test cases arel attributes math test rb   test cases arel attributes attribute test rb   test cases arel nodes test rb   test cases arel table test rb   test cases arel insert manager test rb   test cases arel select manager test rb   test cases connection specification resolver test rb   test cases relations test rb   test cases timestamp test rb   test cases bind parameter test rb   test cases yaml serialization test rb   test cases time precision test rb   test cases forbidden attributes protection test rb   test cases unsafe raw sql test rb   test cases batches test rb   test cases clone test rb   test cases sanitize test rb   test cases calculations test rb   test cases comment test rb   test cases unconnected test rb   test cases store test rb   test cases errors test rb   test cases autosave association test rb   test cases reserved word test rb   test cases null relation test rb   test cases aggregations test rb   test cases fixtures test rb   test cases json attribute test rb   test cases relation test rb   test cases migration references foreign key test rb   test cases migration column attributes test rb   test cases migration command recorder test rb   test cases migration logger test rb   test cases migration references index test rb   test cases migration pending migrations test rb   test cases migration compatibility test rb   test cases migration column positioning test rb   test cases migration references statements test rb   test cases migration rename table test rb   test cases migration change table test rb   test cases migration create join table test rb   test cases migration foreign key test rb   test cases migration columns test rb   test cases migration index test rb   test cases migration change schema test rb   test cases transactions test rb   test cases dup test rb   test cases base test rb   test cases multiple db test rb   test cases test fixtures test rb   test cases explain subscriber test rb   test cases column definition test rb   test cases connection management test rb   test cases statement cache test rb   test cases reflection test rb   test cases date time precision test rb   test cases schema loading test rb   test cases invalid connection test rb   test cases fixture set file test rb   test cases attribute methods read test rb   test cases adapters mysql2 datetime precision quoting test rb   test cases adapters mysql2 schema migrations test rb   test cases adapters mysql2 sql types test rb   test cases adapters mysql2 boolean test rb   test cases adapters mysql2 mysql2 adapter test rb   test cases adapters mysql2 enum test rb   test cases adapters mysql2 table options test rb   test cases adapters mysql2 active schema test rb   test cases adapters mysql2 json test rb   test cases adapters mysql2 unsigned type test rb   test cases adapters mysql2 explain test rb   test cases adapters mysql2 transaction test rb   test cases adapters mysql2 case sensitivity test rb   test cases adapters mysql2 sp test rb   test cases adapters mysql2 bind parameter test rb   test cases adapters mysql2 connection test rb   test cases adapters mysql2 virtual column test rb   test cases adapters mysql2 schema test rb   test cases adapters mysql2 auto increment test rb   test cases adapters mysql2 charset collation test rb  x000D \nUsing mysql2 x000D \nRun options    seed 17273 x000D \n x000D \n  Running  x000D \n x000D \nx000D \n x000D \nError  x000D \nActiveRecord  ConnectionAdapters  MysqlTypeLookupTest test string types  x000D \nNoMethodError  undefined method  split  for nil NilClass x000D \n     HOME develop library rails activerecord lib active record connection adapters abstract mysql adapter rb 583 in  block in initialize type map  x000D \n     HOME develop library rails activerecord lib active record type type map rb 55 in  perform fetch  x000D \n     HOME develop library rails activerecord lib active record type type map rb 21 in  block in fetch  x000D \n     HOME develop library rails vendor bundle ruby 2 5 0 gems concurrent ruby 1 1 3 lib concurrent map rb 193 in  block in fetch or store  x000D \n     HOME develop library rails vendor bundle ruby 2 5 0 gems concurrent ruby 1 1 3 lib concurrent map rb 172 in  fetch  x000D \n     HOME develop library rails vendor bundle ruby 2 5 0 gems concurrent ruby 1 1 3 lib concurrent map rb 192 in  fetch or store  x000D \n     HOME develop library rails activerecord lib active record type type map rb 20 in  fetch  x000D \n     HOME develop library rails activerecord lib active record type type map rb 16 in  lookup  x000D \n     HOME develop library rails activerecord test cases connection adapters mysql type lookup test rb 61 in  assert lookup type  x000D \n     HOME develop library rails activerecord test cases connection adapters mysql type lookup test rb 30 in  test string types  x000D \n    x000D \n x000D \n details ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It is the result of executing the test after  git revert  again  x000D \n x000D \n    x000D \nFinished in 101 814030s  64 0187 runs s  168 8274 assertions s  x000D \n6518 runs  17189 assertions  0 failures  0 errors  9 skips x000D \n x000D \nYou have skipped tests  Run with   verbose for details  x000D \n   ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve confirmed that the issue also be happened on the set column  x000D \nCan you address the regex for the set too  x000D \n x000D \nhttps   github com rails rails pull 34896 files diff 98ce5dc0cd01f8b0435ff6feac10d8a8L588", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I got error  x000D \n x000D \n details   summary  Error   summary  x000D \n x000D \n    x000D \nError  x000D \nActiveRecord  ConnectionAdapters  MysqlTypeLookupTest test string types  x000D \nNoMethodError  undefined method  split  for nil NilClass x000D \n     HOME develop library rails activerecord lib active record connection adapters abstract mysql adapter rb 589 in  block in initialize type map  x000D \n     HOME develop library rails activerecord lib active record type type map rb 55 in  perform fetch  x000D \n     HOME develop library rails activerecord lib active record type type map rb 21 in  block in fetch  x000D \n     HOME develop library rails vendor bundle ruby 2 5 0 gems concurrent ruby 1 1 3 lib concurrent map rb 193 in  block in fetch or store  x000D \n     HOME develop library rails vendor bundle ruby 2 5 0 gems concurrent ruby 1 1 3 lib concurrent map rb 172 in  fetch  x000D \n     HOME develop library rails vendor bundle ruby 2 5 0 gems concurrent ruby 1 1 3 lib concurrent map rb 192 in  fetch or store  x000D \n     HOME develop library rails activerecord lib active record type type map rb 20 in  fetch  x000D \n     HOME develop library rails activerecord lib active record type type map rb 16 in  lookup  x000D \n     HOME develop library rails activerecord test cases connection adapters mysql type lookup test rb 63 in  assert lookup type  x000D \n     HOME develop library rails activerecord test cases connection adapters mysql type lookup test rb 34 in  test string types  x000D \n    x000D \n x000D \n  details  x000D \n x000D \nNext I fix this test ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fix it  x000D \n x000D \n details   summary  Test result   summary  x000D \n x000D \n    x000D \nFinished in 109 684752s  59 4249 runs s  156 7310 assertions s  x000D \n6518 runs  17191 assertions  0 failures  0 errors  9 skips x000D \n x000D \nYou have skipped tests  Run with   verbose for details  x000D \n x000D \n    x000D \n x000D \n  details  x000D \n x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Can you squash your commits into one  x000D \n x000D \nOkay  I will squash and force push   x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  And congrats on your first Rails contribution \ud83c\udf89 ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Should  super  be called again  If it raised  it will raise again ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I guess we want to rescue this exception only the in the pace that raises it  so we know what is happening  I think it is the calls inside the  if ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Correct  I think trying to move the existing logic in the  if  above into a private method  and then rescuing parse errors there would work better ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since this is a bugfix for an unreleased feature  I don t think a changelog is needed ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Moved into a private method  I have called it  wrap  but I think it could do with a better method name   x000D \n x000D \nWas not sure I understood when rescuing the parse error  do we still want to call  super  or swallow the exception  Please have a look at updated code and let me know ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think  wrap parameters  would be a suitable name  Swallowing the exception here is preferred because it will call  super  immediately afterward in  process action  ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " gmcgibbon would that be confusing with the class method  wrap parameters  and the internal instance   wrap parameters  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yeah that s the reason why I never named it  wrap parameters  too     gmcgibbon any other name you prefer  x000D \n x000D \n  perform wrap   x000D \n parameter wrapping  x000D \n  perform parameter wrapping   x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "My mistake  I suppose   perform parameter wrapping  is better in that case ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Done and squashed the commits too  \ud83d\udc4d", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "When I ran the tests for the code above  initially the tests failed  I could not replicate the error with the same seed value  here are the results of that test run for context  x000D \n x000D \n    x000D \nvagrant rails dev box  vagrant rails actionpack   bundle exec rake test x000D \n usr bin ruby2 5  w  I lib test     usr lib ruby vendor ruby rake rake test loader rb   test abstract translation test rb   test abstract collector test rb   test abstract callbacks test rb   test dispatch cookies test rb   test dispatch ssl test rb   test dispatch runner test rb   test dispatch mime type test rb   test dispatch exception wrapper test rb   test dispatch debug exceptions test rb   test dispatch debug locks test rb   test dispatch url generation test rb   test dispatch host authorization test rb   test dispatch system testing driver test rb   test dispatch system testing server test rb   test dispatch system testing system test case test rb   test dispatch system testing screenshot helper test rb   test dispatch live response test rb   test dispatch test request test rb   test dispatch content security policy test rb   test dispatch prefix generation test rb   test dispatch test response test rb   test dispatch request test rb   test dispatch mount test rb   test dispatch request id test rb   test dispatch header test rb   test dispatch routing test rb   test dispatch response test rb   test dispatch callbacks test rb   test dispatch content disposition test rb   test dispatch show exceptions test rb   test dispatch uploaded file test rb   test dispatch request session test rb   test dispatch request query string parsing test rb   test dispatch request url encoded params parsing test rb   test dispatch request multipart params parsing test rb   test dispatch request json params parsing test rb   test dispatch rack cache test rb   test dispatch routing ipv6 redirect test rb   test dispatch routing inspector test rb   test dispatch routing custom url helpers test rb   test dispatch routing concerns test rb   test dispatch routing route set test rb   test dispatch reloader test rb   test dispatch executor test rb   test dispatch middleware stack test rb   test dispatch routing assertions test rb   test dispatch mapper test rb   test dispatch static test rb   test dispatch session abstract store test rb   test dispatch session cache store test rb   test dispatch session cookie store test rb   test dispatch session mem cache store test rb   test dispatch session test session test rb   test assertions response assertions test rb   test journey route definition scanner test rb   test journey route definition parser test rb   test journey nfa simulator test rb   test journey nfa transition table test rb   test journey nodes symbol test rb   test journey path pattern test rb   test journey gtg builder test rb   test journey gtg transition table test rb   test journey router test rb   test journey routes test rb   test journey route test rb   test journey router utils test rb   test controller integration test rb   test controller new base render context test rb   test controller new base render streaming test rb   test controller new base content type test rb   test controller new base render action test rb   test controller new base content negotiation test rb   test controller new base render test rb   test controller new base bare metal test rb   test controller new base render xml test rb   test controller new base render html test rb   test controller new base render file test rb   test controller new base middleware test rb   test controller new base render body test rb   test controller new base render plain test rb   test controller new base render partial test rb   test controller new base render template test rb   test controller new base base test rb   test controller new base render implicit action test rb   test controller new base render layout test rb   test controller send file test rb   test controller runner test rb   test controller content type test rb   test controller http basic authentication test rb   test controller webservice test rb   test controller force ssl test rb   test controller http digest authentication test rb   test controller rescue test rb   test controller url for test rb   test controller params parse test rb   test controller url for integration test rb   test controller render test rb   test controller metal renderers test rb   test controller output escaping test rb   test controller action pack assertions test rb   test controller caching test rb   test controller render xml test rb   test controller log subscriber test rb   test controller render json test rb   test controller default url options with before action test rb   test controller flash test rb   test controller parameter encoding test rb   test controller redirect test rb   test controller resources test rb   test controller routing test rb   test controller metal test rb   test controller renderers test rb   test controller params wrapper test rb   test controller url rewriter test rb   test controller renderer test rb   test controller parameters serialization test rb   test controller parameters mutators test rb   test controller parameters log on unpermitted params test rb   test controller parameters always permitted parameters test rb   test controller parameters accessors test rb   test controller parameters raise on unpermitted params test rb   test controller parameters parameters permit test rb   test controller parameters nested parameters permit test rb   test controller parameters multi parameter attributes test rb   test controller parameters dup test rb   test controller show exceptions test rb   test controller render js test rb   test controller required params test rb   test controller api force ssl test rb   test controller api url for test rb   test controller api implicit render test rb   test controller api redirect to test rb   test controller api data streaming test rb   test controller api conditional get test rb   test controller api with cookies test rb   test controller api renderers test rb   test controller api params wrapper test rb   test controller api with helpers test rb   test controller mime respond to test rb   test controller mime accept format test rb   test controller request test request test rb   test controller request forgery protection test rb   test controller helper test rb   test controller live stream test rb   test controller localized templates test rb   test controller permitted params test rb   test controller filters test rb   test controller base test rb   test controller streaming test rb   test controller http token authentication test rb   test controller form builder test rb   test controller test case test rb   test controller flash hash test rb   test routing helper test rb   x000D \n var lib gems 2 5 0 gems addressable 2 5 2 lib addressable idna pure rb 154  warning  assigned but unused variable   startercc x000D \nRun options    seed 60076 x000D \n x000D \n  Running  x000D \n x000D \nx000D \n x000D \nFailure  x000D \nRendererTest test rendering with a controller class   vagrant rails actionpack test controller renderer test rb 49   x000D \nExpected   Hello world   x000D \n  Actual   Hello world  Modified   x000D \n x000D \n x000D \nrails test vagrant rails actionpack test controller renderer test rb 48 x000D \n x000D \n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        F x000D \n x000D \nFailure  x000D \nActionControllerBaseRenderTest test direct render to string   vagrant rails actionpack test controller render test rb 674   x000D \nExpected   Hello world   x000D \n  Actual   Hello world  Modified   x000D \n x000D \n x000D \nrails test vagrant rails actionpack test controller render test rb 672 x000D \n x000D \nx000D \n x000D \nFinished in 10 246307s  316 6995 runs s  1561 3430 assertions s  x000D \n3245 runs  15998 assertions  2 failures  0 errors  0 skips x000D \nrake aborted  x000D \nCommand failed with status  1    ruby  w  I lib test     usr lib ruby vendor ruby rake rake test loader rb   test abstract translation test rb   test abstract collector test rb   test abstract callbacks test rb   test dispatch cookies test rb   test dispatch ssl test rb   test dispatch runner test rb   test dispatch mime type test rb   test dispatch exception wrapper test rb   test dispatch debug exceptions test rb   test dispatch debug locks test rb   test dispatch url generation test rb   test dispatch host authorization test rb   test dispatch system testing driver test rb   test dispatch system testing server test rb   test dispatch system testing system test case test rb   test dispatch system testing screenshot helper test rb   test dispatch live response test rb   test dispatch test request test rb   test dispatch content security policy test rb   test dispatch prefix generation test rb   test dispatch test response test rb   test dispatch request test rb   test dispatch mount test rb   test dispatch request id test rb   test dispatch header test rb   test dispatch routing test rb   test dispatch response test rb   test dispatch callbacks test rb   test dispatch content disposition test rb   test dispatch show exceptions test rb   test dispatch uploaded file test rb   test dispatch request session test rb   test dispatch request query string parsing test rb   test dispatch request url encoded params parsing test rb   test dispatch request multipart params parsing test rb   test dispatch request json params parsing test rb   test dispatch rack cache test rb   test dispatch routing ipv6 redirect test rb   test dispatch routing inspector test rb   test dispatch routing custom url helpers test rb   test dispatch routing concerns test rb   test dispatch routing route set test rb   test dispatch reloader test rb   test dispatch executor test rb   test dispatch middleware stack test rb   test dispatch routing assertions test rb   test dispatch mapper test rb   test dispatch static test rb   test dispatch session abstract store test rb   test dispatch session cache store test rb   test dispatch session cookie store test rb   test dispatch session mem cache store test rb   test dispatch session test session test rb   test assertions response assertions test rb   test journey route definition scanner test rb   test journey route definition parser test rb   test journey nfa simulator test rb   test journey nfa transition table test rb   test journey nodes symbol test rb   test journey path pattern test rb   test journey gtg builder test rb   test journey gtg transition table test rb   test journey router test rb   test journey routes test rb   test journey route test rb   test journey router utils test rb   test controller integration test rb   test controller new base render context test rb   test controller new base render streaming test rb   test controller new base content type test rb   test controller new base render action test rb   test controller new base content negotiation test rb   test controller new base render test rb   test controller new base bare metal test rb   test controller new base render xml test rb   test controller new base render html test rb   test controller new base render file test rb   test controller new base middleware test rb   test controller new base render body test rb   test controller new base render plain test rb   test controller new base render partial test rb   test controller new base render template test rb   test controller new base base test rb   test controller new base render implicit action test rb   test controller new base render layout test rb   test controller send file test rb   test controller runner test rb   test controller content type test rb   test controller http basic authentication test rb   test controller webservice test rb   test controller force ssl test rb   test controller http digest authentication test rb   test controller rescue test rb   test controller url for test rb   test controller params parse test rb   test controller url for integration test rb   test controller render test rb   test controller metal renderers test rb   test controller output escaping test rb   test controller action pack assertions test rb   test controller caching test rb   test controller render xml test rb   test controller log subscriber test rb   test controller render json test rb   test controller default url options with before action test rb   test controller flash test rb   test controller parameter encoding test rb   test controller redirect test rb   test controller resources test rb   test controller routing test rb   test controller metal test rb   test controller renderers test rb   test controller params wrapper test rb   test controller url rewriter test rb   test controller renderer test rb   test controller parameters serialization test rb   test controller parameters mutators test rb   test controller parameters log on unpermitted params test rb   test controller parameters always permitted parameters test rb   test controller parameters accessors test rb   test controller parameters raise on unpermitted params test rb   test controller parameters parameters permit test rb   test controller parameters nested parameters permit test rb   test controller parameters multi parameter attributes test rb   test controller parameters dup test rb   test controller show exceptions test rb   test controller render js test rb   test controller required params test rb   test controller api force ssl test rb   test controller api url for test rb   test controller api implicit render test rb   test controller api redirect to test rb   test controller api data streaming test rb   test controller api conditional get test rb   test controller api with cookies test rb   test controller api renderers test rb   test controller api params wrapper test rb   test controller api with helpers test rb   test controller mime respond to test rb   test controller mime accept format test rb   test controller request test request test rb   test controller request forgery protection test rb   test controller helper test rb   test controller live stream test rb   test controller localized templates test rb   test controller permitted params test rb   test controller filters test rb   test controller base test rb   test controller streaming test rb   test controller http token authentication test rb   test controller form builder test rb   test controller test case test rb   test controller flash hash test rb   test routing helper test rb    x000D \n x000D \nTasks  TOP    test x000D \n See full trace by running task with   trace  x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you all for making my first contribution to rails  a very warming experience  \ud83d\udc4d\ud83d\udc4c\u2728", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "rause ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We might also want to add    const regexp camel cased word    to the end of this regex to ensure we re catching the right load error  Might be a good idea to test this actually raises now too seeing how CI is passing with a typo \ud83e\udd14", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you  gmcgibbon and  djberg96  x000D \n x000D \n  added a test to catch the  s rause raise   fail  so it is properly tested  x000D \n  added    const regexp camel cased word    to regular expression to narrow down exception from the autoloader", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udc4d ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "fixed Changelog conflict    x000D \n x000D \n gmcgibbon thank you so much for your help  and your patience for having to repeat that  x000D \n djberg96 thanks for the ping and keeping me honest", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "odd collate error for mysql  that I haven t seen before  x000D \nkicking", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for all the help on this PR  and rails in general  It is hard work maintaining OSS  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Am I missing something or this test is not using  Parameters  ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83e\udd26\u200d\u2642\ufe0f My bad  fixed now ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I thought we had deprecated exists  without arguments ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  I thought we had deprecated exists  without arguments  x000D \n x000D \nNot that I m aware  Why would we do that ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I can t for the life of me find that discussion now via GitHub s search  I just seem to remember  matthewd and either  eugeneius and  kamipo talking about this ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Test are still broken  can you take a look ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca they should be fine now  sorry about that  Since we weren t running these tests for the real adapters  some of them didn t support testing with scheduled jobs  i e   enqueued with  enqueued at   that is always used when retrying jobs   I ve skipped the tests for these  in the same way we were already skipping them for the   inline  adapter  even though they weren t run for it   ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " scissors ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  y yagi  x000D \n x000D \nDo you think it will make 5 2 x as well  I guess being it in master it will target 6 0  right ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rhymes I backported to 5 2 stable f32549f4d52d762263bfb9eb42ee8ec4bf31e972    This fix will be included in the next release ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you for your pull request  Unfortunately   hahmed has already asked to work on this  As Rails contributors  we should be supportive of new contributors and respect their requests to submit PRs  I m going to close this so  hahmed can go ahead with their patch ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83e\udd26\u200d\u2642\ufe0f Thank you ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " javan Do we need this and  actiontext bin webpack dev server  files because I see they aren t working now on the rails rails  master branch ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I don t think this  put a dummy application inside the framework tests  scale in the rails repository  It does make sense for an external plugin but for things that are inside the rails repository we should be following the same railties tests pattern that we have for all the other frameworks  The dummy application get outdated and we will end up testing those engines against a version behind of the one that is being currently being developed ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I left it by design  but I m not strongly opposed to remove it ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The build stalled during  apt get install     https   travis ci org rails rails jobs 475421372", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Should we backport it to  5 2 stable  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I would like that very much  The lines changed here were introduced in 5 2 ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Backported    1 ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Would be great to add tests for this configurations in https   github com rails rails blob 884310fdd031ed8121944f9ea07c8b7723c4e6b6 railties test application configuration test rb", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The names of those tests will be invalid when Rails 6 0 is out maybe it would be better to say      is nil without the default configurations  and remove  add to config  config load defaults  5 2   ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Could you also please add the defaults of  6 0  to this section in the guide https   edgeguides rubyonrails org configuring html results of load defaults", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Done ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can leave this around", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Instead of  gsub   R         you can use    squish   https   api rubyonrails org classes String html method i squish  which should give the similar result   x000D \n x000D \n   suggestion x000D \n         description   sanitizer sanitize  header  squish x000D \n   ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m not sure if I understand this correctly  but I would assume that   description  would always be set since you always call  generate description  ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Good catch  thanks \ud83d\ude38 ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Not always  For example  index html doesn t have   description   so I added  ontent for   description   check ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Shouldn t we remove  if content for   description   and change these lines to   x000D \n   diff x000D \n  meta name  description  content      yield  description      Ruby on Rails Guides         x000D \n  meta property  og description  content      yield  description      Ruby on Rails Guides         x000D \n  meta name  description  content      yield  description  presence     Ruby on Rails Guides         x000D \n  meta property  og description  content      yield  description  presence     Ruby on Rails Guides         x000D \n    x000D \n x000D \n when  content for   description   is  false  then mata tags with description won t be rendered ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Oops  I forgot removing      Ruby on Rails Guides   \ud83d\ude31  x000D \n x000D \nOkay  let s use   prensece     xxx    x000D \n x000D \n", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "How about adding   presence  in the line instead of in the layout template  x000D \n   suggestion x000D \n         description   sanitizer sanitize  header  squish presence x000D \n   ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Good idea  but the problem is the file  index html erb  is rendered by ActionView Renderer not  markdown rb  renderer   So    description  isn t set when the  index html  is rendered  As a result  the  description  becomes an empty string    x000D \n x000D \nMy another suggestion is setting  description  variable in the view like existing  page title  and  header section    x000D \n x000D \nhttps   github com rails rails blob 86517942e469193e8624d5078d718785552c1270 guides source index html erb L1 L9", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yeah  looks good to me to treat the  description  like as the existing  page title  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kamipo Fixed  I added  description  to index html and remove  presence  because all pages should have own description  x000D \n x000D \nplease re review    ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Does this mean that any page has no title ", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Not sure  I wrote this code same as existing code  x000D \n x000D \nhttps   github com rails rails blob 29bb990f97816f3e0fb086ec9985983c51a56a96 guides source layout html erb L6 x000D \n x000D \nBut  as far as I saw  all page should have title  \ud83e\udd14 ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "If so  I d prefer to remove the redundant       Ruby on Rails Guides   ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83c\udd92  I m gonna remove it \ud83d\udd2a ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kamipo Did it ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " Just wondering  What does SNS friendly means  Is there any link or reference  ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " simi  SNS  stands for  social network sites   and it is a popular term use in Japan to refer to social networks  Facebook  Twitter  etc   This PR is pretty much updating the guides so that when someone adds a link to guide and post it on Twitter or Facebook it would show a nice looking logo and summary  x000D \n x000D \n toshimaru would you mind addressing  bogdanvlviv s comment as well  I think that s a valid point since otherwise we won t even have a meta description tag that says  Ruby on Rails Guides  ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " sikachu Done  And thanks for your follow up    x000D \n x000D \n simi Like  sikachu explained  I use the abbreviation SNS for  Social Networking Service  https   en wikipedia org wiki Social networking service  such as Twitter and Facebook  When I say SNS friendly  it means providing extra meta data for SNS ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Can you squash your commits into one  x000D \n x000D \nSure ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Just enough  value  respond to   to d    value to d   value  or  value    value respond to   to d    value to d   value   x000D \n x000D \n   suggestion x000D \n        when  average  then value    value respond to   to d    value to d   value x000D \n   ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the suggestion  kamipo change applied  \ud83d\ude4f ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "r   kamipo ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Returning  nil  for  average  no records is preferable to me  x000D \n x000D \nThe reason that I pasted the all operation cases in https   github com rails rails pull 34601 discussion r238217343 was for  when  sum    x000D \n x000D \nhttps   github com rails rails blob e7717ec7a09ca83f92a9819303f7a93e038a2679 activerecord lib active record relation calculations rb L400 L405 x000D \n x000D \nDatabases also returns  nil  for  sum  no records  but now Active Record regards no records  sum  as  0  instead of  nil   x000D \n x000D \nI believe that is historical reason  but it is a good timing to discuss the odd inconsistency for no records  sum  and  average   x000D \n", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think it makes sense to  sum  return  0  and average return  nil   For sum it doesn t make difference if there is no records or if there is many that the sum returns 0  but for average it does make a difference since you don t know if 0 is because you have no record or because you have two records with   10  and  10  as value ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I don t know I get your point  you means that the difference  1  and  3  is less important than the difference  2  and  4   right  x000D \n x000D \n    x000D \nroot localhost  test    create table t  c int   x000D \nQuery OK  0 rows affected  0 03 sec  x000D \n x000D \nroot localhost  test    select sum c  from t      1  x000D \n           x000D \n  sum c    x000D \n           x000D \n    NULL   x000D \n           x000D \n1 row in set  0 00 sec  x000D \n x000D \nroot localhost  test    select avg c  from t      2  x000D \n           x000D \n  avg c    x000D \n           x000D \n    NULL   x000D \n           x000D \n1 row in set  0 00 sec  x000D \n x000D \nroot localhost  test    insert into t values  10     10   x000D \nQuery OK  2 rows affected  0 00 sec  x000D \nRecords  2  Duplicates  0  Warnings  0 x000D \n x000D \nroot localhost  test    select sum c  from t      3  x000D \n           x000D \n  sum c    x000D \n           x000D \n       0   x000D \n           x000D \n1 row in set  0 00 sec  x000D \n x000D \nroot localhost  test    select avg c  from t      4  x000D \n           x000D \n  avg c    x000D \n           x000D \n  0 0000   x000D \n           x000D \n1 row in set  0 00 sec  x000D \n   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yes  I can t think in a case where I need to know the sum of all records is 0 because there are no records or because all records are 0 ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I see  I agree that the difference is less important ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for your PR  x000D \nBasically  PR will only be done on the master branch  After that  the committer backports that correspondence to the stable branch as necessary    x000D \n x000D \nCan you change the target branch to master    x000D \nAlso  can you add a test case to prevent regression  x000D \n", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Going to close this since it s against the wrong branch  When you reopen please point your PR at the master branch and add a test  Thanks ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sorry but I disagree  We should talk about the default value of the configuration when no railtie code is applied  So the current documentation is correct  If we tell that the default is  true  for  config action controller default protect from forgery  and the user see that config being set to  true  in the application they will think it is safe to remove when it is not  x000D \n x000D \nWe could talk which configs are applied when the version defaults are set but each individual config should have its default value not depending on the  load defaults  call  x000D \n x000D \nLet s change this PR to specify the defaults in each rails version up to 6 0 ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Let s change this PR to specify the defaults in each rails version up to 6 0  x000D \n x000D \n rafaelfranca Do you want me to apply this change only  right   x000D \n   diff x000D \ndiff   git a guides source configuring md b guides source configuring md x000D \nindex 3b21197ae4  6bb5a1e03b 100644 x000D \n    a guides source configuring md x000D \n    b guides source configuring md x000D \n    805 7  805 7    There are a few configuration options available in Active Support  x000D \n x000D \n    config active job custom serializers  allows to set custom argument serializers  Defaults to       x000D \n x000D \n    config active job return false on aborted enqueue  change the return value of   enqueue  to false instead of the job instance when the enqueuing is aborted  Defaults to  false   x000D \n    config active job return false on aborted enqueue  change the return value of   enqueue  to false instead of the job instance when the enqueuing is aborted  Defaults to  false  up to Rails 6 0  x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I d prefer to remove those versions specifics from the config and add a new section like  x000D \n x000D \n    x000D \n  Results of  load defaults  x000D \n x000D \n   With  6 0   x000D \n x000D \n   config active job return false on aborted enqueue   false x000D \n   config foo bar   true x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Sorry but I disagree  We should talk about the default value of the configuration when no railtie code is applied  So the current documentation is correct  If we tell that the default is true for config action controller default protect from forgery and the user see that config being set to true in the application they will think it is safe to remove when it is not  x000D \n x000D \nThanks for the explanation  that\u2019s a point  x000D \n  I d prefer to remove those versions specifics from the config and add a new section like  x000D \n x000D \nGood idea  I just amended this PR ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This causes build failures  I d reckon we should change  travis yml to make it work   x000D \n details  x000D \n x000D \n   diff x000D \ndiff   git a  travis yml b  travis yml x000D \nindex 7bf508b7a7  68ae82edd1 100644 x000D \n    a  travis yml x000D \n    b  travis yml x000D \n    107 6  107 9    matrix  x000D \n           redis server x000D \n           rabbitmq x000D \n       before install  x000D \n            rm   BUNDLE GEMFILE  lock  x000D \n            travis retry gem update   system  x000D \n            travis retry gem install bundler  x000D \n           sudo sed  i  e   local  peer s postgres all    e  s peer  md5 trust g   etc postgresql   main pg hba conf x000D \n            sudo sed  i  s port   5433 port   5432    etc postgresql 10 main postgresql conf  x000D \n            sudo service postgresql restart 10  x000D \n    120 6  123 9    matrix  x000D \n           redis server x000D \n           rabbitmq x000D \n       before install  x000D \n            rm   BUNDLE GEMFILE  lock  x000D \n            travis retry gem update   system  x000D \n            travis retry gem install bundler  x000D \n           sudo sed  i  e   local  peer s postgres all    e  s peer  md5 trust g   etc postgresql   main pg hba conf x000D \n            sudo sed  i  s port   5433 port   5432    etc postgresql 10 main postgresql conf  x000D \n            sudo service postgresql restart 10  x000D \n    133 6  139 9    matrix  x000D \n           redis server x000D \n           rabbitmq x000D \n       before install  x000D \n            rm   BUNDLE GEMFILE  lock  x000D \n            travis retry gem update   system  x000D \n            travis retry gem install bundler  x000D \n           sudo sed  i  e   local  peer s postgres all    e  s peer  md5 trust g   etc postgresql   main pg hba conf x000D \n            sudo sed  i  s port   5433 port   5432    etc postgresql 10 main postgresql conf  x000D \n            sudo service postgresql restart 10  x000D \n    142 6  151 9    matrix  x000D \n       env   GEM activerecord mysql2  x000D \n       sudo  required x000D \n       before install  x000D \n            rm   BUNDLE GEMFILE  lock  x000D \n            travis retry gem update   system  x000D \n            travis retry gem install bundler  x000D \n            sudo mysql  e   use mysql  update user set authentication string    where User  root   update user set plugin  mysql native password  FLUSH PRIVILEGES     x000D \n            sudo mysql upgrade  x000D \n            sudo service mysql restart  x000D \n    149 6  161 9    matrix  x000D \n       env   GEM activerecord mysql2  x000D \n       sudo  required x000D \n       before install  x000D \n            rm   BUNDLE GEMFILE  lock  x000D \n            travis retry gem update   system  x000D \n            travis retry gem install bundler  x000D \n            sudo mysql  e   use mysql  update user set authentication string    where User  root   update user set plugin  mysql native password  FLUSH PRIVILEGES     x000D \n            sudo mysql upgrade  x000D \n            sudo service mysql restart  x000D \n    156 6  171 9    matrix  x000D \n       env   GEM activerecord mysql2  x000D \n       sudo  required x000D \n       before install  x000D \n            rm   BUNDLE GEMFILE  lock  x000D \n            travis retry gem update   system  x000D \n            travis retry gem install bundler  x000D \n            sudo mysql  e   use mysql  update user set authentication string    where User  root   update user set plugin  mysql native password  FLUSH PRIVILEGES     x000D \n            sudo mysql upgrade  x000D \n            sudo service mysql restart  x000D \n    171 18  189 27    matrix  x000D \n       env   GEM activerecord postgresql  x000D \n       sudo  required x000D \n       before install  x000D \n            rm   BUNDLE GEMFILE  lock  x000D \n            travis retry gem update   system  x000D \n            travis retry gem install bundler  x000D \n            sudo sed  i  s port   5433 port   5432    etc postgresql 10 main postgresql conf  x000D \n            sudo service postgresql restart 10  x000D \n       rvm  2 6 0 x000D \n       env   GEM activerecord postgresql  x000D \n       sudo  required x000D \n       before install  x000D \n            rm   BUNDLE GEMFILE  lock  x000D \n            travis retry gem update   system  x000D \n            travis retry gem install bundler  x000D \n            sudo sed  i  s port   5433 port   5432    etc postgresql 10 main postgresql conf  x000D \n            sudo service postgresql restart 10  x000D \n       rvm  ruby head x000D \n       env   GEM activerecord postgresql  x000D \n       sudo  required x000D \n       before install  x000D \n            rm   BUNDLE GEMFILE  lock  x000D \n            travis retry gem update   system  x000D \n            travis retry gem install bundler  x000D \n            sudo sed  i  s port   5433 port   5432    etc postgresql 10 main postgresql conf  x000D \n            sudo service postgresql restart 10  x000D \n       rvm  jruby head x000D \n    x000D \n  details ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " 34849 is just a revert of  34621 which tests pre release version on our CI  x000D \n x000D \nIs this changing Gemfile lock any benefit for Rails developers ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Don t think so  I don t want to force bundler 2 to developers just yet  Thank you for the PR ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I guess it makes sense to mention the support of signed encrypted plain cookies API  headers  env  and session in the documentation   ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " env  and  session  options are missed here   cookies  are no more an option", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Am I right that this example is not relevant due to the new cookies API ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ditto", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udc4d Great to see  action cable testing  making its way into rails core  Thanks for your continued work  palkan ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca  kaspth Hey folks  Is there any chance for get this reviewed  and  hopefully  merged for Beta 1  and thus finish the  action cable testing  merging ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I just saw the other comment and I have added this PR to my list  If all goes well  I ll get to this before  beta1 \ud83d\ude4f", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "There we go  thanks  palkan ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "do we need an after initialize here ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think we do  since  config active storage queue  may be set in an initializer ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "oh  that is true  For other frameworks we use on load but I think we don t can t have a hook for Active Storage ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What about setting this example as  error  instead of  info  ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Makes sense  I ll change it \ud83d\udc4d ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Should this raise an error if we get to the else  Otherwise I think this will silently fail ", "annotation": {"notes": "", "label": ["offer"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This sentence reads a little weird to me  I think  Supported preconfigurations are  would sound better than  Supported for preconfiguration are ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Agree  I ll fix it ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I don t think so   sqlite3  and  ibm db  have a direct adapter name to gem name mapping with no version locking  The value itself should be validated by the   initialize  check in  ChangeGenerator  ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What do these new lines do  I ve always found the  base  and  context  naming here confusing ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Do we generally say DBMS elsewhere ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\u2702\ufe0f ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Could switch to  chomp  instead of  sub  while we re here ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Curiosity for another time  since 2 6 allows constants to start with non ascii characters  does that mean we could name a Rails app  say  666 ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What is this for ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Seems odd to mutate it right after defining it  Maybe swap definition order and use     ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\u2702\ufe0f ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Perhaps we should mirror the options dup and freeze done in convert database option for jruby", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Add a newline before and after this  if   Could also swap to  unless  ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\u2702\ufe0f ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Not used ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " keys  instead of  map   or perhaps  map   first    Should probably also be moved to  all database gems  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "How will we have to maintain these Gemfiles going forward ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Adding a newline after  output  and between the  assert file  seems like it would increase readability in these tests ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "For another time  seeing this deep module nesting makes me think we should consider adding something akin to Action Mailboxes   routing  for commands ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Only once in a comment of  activerecord lib active record connection adapters abstract adapter rb   I see  RDBMS  in  guides source active record basics md  and  activerecord lib active record connection adapters abstract schema statements rb   but I don t think that s much better  I ll change it to  database  for now ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m essentially only adding  lookups     rails   base    name    if a  base  exists  This is necessary due to the second part of the lookup code   x000D \n   ruby x000D \nunless base    context x000D \n  unless name to s include      x000D \n    lookups       name    name   x000D \n    lookups     rails   name   x000D \n  end x000D \n  lookups       name   x000D \nend x000D \n    x000D \nSpecifically   lookups     rails   name    which limits us to looking up  single segment generator names in the toplevel rails namespace  x000D \n x000D \nWhen looking up  rails g db system change    name  is the last segment    change      base  is the namespace path    db system     and  context  is  nil   I think  context  is used if  name  isn t the command name  but I m not sure why  Maybe we should change  base  to  path   x000D \n x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think it was probably to minimize line length  but I agree it reads strangely at first  I ll change it ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Leftovers from whoever coded this function in the app generator  They must ve been tired of scrolling  This isn t a problem anymore  so I ll remove the comment ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  gem for database  is used in the app generator  I just want the gem s name here though ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I tried these  but found the repeated arg destructing easier to read  I can change if you feel strongly about it ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Good question  I initially tried to generate all test apps without    skip gemfile   but then rails will run  bundle install  and crash because rails 6 isn t released yet  I just noticed we have  skip bundle  as an app generator option  so I ll try using that  and using the gem template in generator tests  ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Try  database type   It s not brilliant  but maybe an improvement  Or  database platform  ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Using  database system  would match the command name and reinforce the concept  But it s perhaps not expounding on what a  database system  means  that meaning only comes from seeing MySQL  Postgres and the gang ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "So it s possible for users to call  rails g db system change   I thought this generator was internal and sufficiently called via it s class  start  method from the command ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Forgot to ask  how are we handling cases where people who may have changed their  config database yml  when calling this command ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Forgot to ask  how are we handling cases where people who may have changed their config database yml when calling this command  x000D \n x000D \nThe generator will detect a configuration file already exists and gives options to overwrite  show a diff  reject the change  or merge the two files together  x000D \n x000D \nEg  x000D \n x000D \n    x000D \nrails g db system change   to mysql x000D \n    conflict  config database yml x000D \nOverwrite  Users gannon dummy config database yml   enter  h  for help   Ynaqdhm  h x000D \n        Y   yes  overwrite x000D \n        n   no  do not overwrite x000D \n        a   all  overwrite this and all others x000D \n        q   quit  abort x000D \n        d   diff  show the differences between the old and the new x000D \n        h   help  show this help x000D \n        m   merge  run merge tool x000D \nOverwrite  Users gannon dummy config database yml   enter  h  for help   Ynaqdhm  x000D \n   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve hidden the change generator  reverted the patch to call it with  rails g   and removed the static gemfile strings in favour of template evaluation  Let me know if there s anything else this PR needs to get shipped ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hey  Thanks for adding this  x000D \n del Since this PR is merged we should close  34710  and  34732   del  x000D \nAlso  I think we should exclude  db change  from  commands    railties lib rails command rb  file  in order to not show it on  rails   help    we should show  db system change  instead   x000D \nSorry for the too late review  x000D \n x000D \nEdited  Seems like  Rails  Command  Db  System  ChangeCommand printing commands  returns    db change    instead of   db system change   ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "cc  gmcgibbon ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for pointing that out  bogdanvlviv  I ll see what I can do ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Happy New Year   \ud83c\udf89 ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Active Storage now uses ImageProcessing as the backend for variants in Rails 6  so the documentation is correct  Thanks  x000D \n x000D \nYou can also see more information in the change log \ud83d\ude0a", "annotation": {"notes": "", "label": ["offer"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  but it reads better as is   ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Minor thing  but would you mind adding a space after  image tiff  so it will balance out the braces ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " sikachu done ", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Given that TIFF isn\u2019t supported by Chrome or Firefox  I don\u2019t think we can avoid converting TIFF variants to PNG  This is a list of image formats supported by virtually  all  browsers ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \n    Permit generating variants of TIFF images  x000D \n   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you move this up under the  resized variation of ICO blob  test ", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " georgeclaghorn done", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " georgeclaghorn done", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Last thing  let\u2019s convert the existing  racecar jpg  fixture to TIFF instead of introducing a new document of unknown provenance  You can generate  racecar tif  with the following ImageMagick command  x000D \n x000D \n   shell x000D \n  convert  compress none activestorage test fixtures racecar jpg activestorage test fixtures racecar tif x000D \n    x000D \n x000D \nI\u2019d just give you the resulting TIFF file  but GitHub doesn\u2019t allow attaching it and I\u2019m too lazy to upload it elsewhere ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " georgeclaghorn well done sir  let me know if looks good ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " wave   x000D \nThis should be covered by https   github com rails rails pull 34812", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " bogdanvlviv feel free to cherry pick it if you want ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We can check a single blob\u2019s key and lean on  create blob \u2019s defaults  x000D \n x000D \n   ruby x000D \ntest  create after upload generates a 28 character base36 key  do x000D \n  assert match    a z0 9  28     create blob key  x000D \nend x000D \n   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Let\u2019s just call this  base36   It\u2019s enough to document that it returns a lowercase string  as you already have  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " scissors  this empty line ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " scissors ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I know this came from the  base58  docs  but the comma after \u201clength\u201d is unnecessary  Can you remove it here and above ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The result  will  contain lowercase alphanumeric characters   wink  x000D \n x000D \nPlease add a period to the end of this sentence ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This constant is no longer used ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This has a nearly 50  chance of being unable to use the random byte and having to fall back to random number    it d presumably be worth benchmarking before spending any real effort on it  but a quick shot at something that should be cheaper   Someone want to check my maths   x000D \n x000D \n   ruby x000D \nidx   byte   7 x000D \n    x000D \n x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Might be  I would actually rewrite both base58 and base36 to use a much more pedestrian x000D \n x000D \n    x000D \nn times map   alphabet SecureRandom random number alphabet length    join x000D \n    x000D \n x000D \nMore method calls but probably  less clever  is better in this case  I didn t touch the implementation because I was thinking  this byte trickery for obtaining bytes from a potentially slow SecureRandom is here for a reason  x000D \n", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Just didn t want to touch it since this is not what the PR is about and this would need microbenchmarks etc ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I was curious enough to follow through  so  x000D \n x000D \nBenchmark  https   gist github com matthewd 6827623f4e0308943e8c82db490cc118 x000D \n x000D \nWe do generally avoid programming to microbenchmarks in high level library code  but I think the other side of that policy is being more accepting of minor ugliness when we re building lower level primitives   x000D \n x000D \n As a point of comparison  it d be entirely silly to switch to base32 just because we can generate them twice as fast  This is purely about  there s a measurably faster way to achieve the same thing for a similar amount of code   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Noted  I ll open a patch for this once I m done with  34827 ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This also merits a changelog entry  Can you please add one ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " sikachu  georgeclaghorn thank you for your comments   base58 k  downcase  is a cheap solution indeed  because otherwise I would have to add a base36 implementation to SecureRandom which would increase the API surface there  while not reused anywhere else   I can copy paste the implementation for  base58  with base36 into the Blob class proper if that will be the preference  x000D \n x000D \n sikachu as it stands now ActiveStorage  Blob keys are not immune to collisions and this is actually a severe issue  see  34805   but I do get your point that we should probably use the entropy source better ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think it s fine to add  base32  just for Active Storage   base58  was added only for Active Record s secure token as well  I think making SecureRandom generate base32 will still be safer than base58 and downcase  x000D \n x000D \nHowever  I m not really sure that  base32  or  base36  should be used here  Base58 actually exclude some characters that are ambiguous  same goes with base32  We may be able to use  base32  and conform to RFC 4648  then just make sure that the length we choose is multiplication of 8 so we don t have to add padding  x000D \n x000D \nI actually found this implementation of base32 here which is under MIT license  so I think we may be able to use as a reference  https   github com stesla base32 blob a65a6cded0b37a61d10c5a1bef400464eb353cb1 lib base32 rb L56 L62", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Why would you want the key to be base64 and or base32 conformant  It does not give you extra guarantees of uniqueness or the like  but it does force you to do bookkeeping to have N complement key lengths  28 is 4 complement  and creates those    s  Base58  does omit chars that look similar   lowercase L versus 1  etc  but I don t know if this has value when you are dealing with a  bag of keys  situation at all ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ah  I agree with you that this is a bag of key situation and hence it does not really matter  I just thought that base32 is closest to what we want to archive  single case alphabets and numeric  and is one of the standard so adding this to the core would have a high probability of it being reused  despite this is its first usage  x000D \n x000D \nI think I m going to have to ask  georgeclaghorn if  omitting the similar looking characters  is one of the feature we want or is it just that base58 is already available so we just use it  If it doesn t matter  then maybe base36 will be fine  otherwise I think base32 will be a great addition to the core as well ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Base36 sounds fine to me  but the implementation as it stands now needs to move to  the SecureRandom extension  https   github com rails rails blob a796b993ad3717f9a0b3d5be070311ab7a0c95ba activesupport lib active support core ext securerandom rb   where it can live alongside  SecureRandom base58  ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83c\udf89 please squash merge since there are quite a few interim commits", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you   heart ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "would something like this be simpler  x000D \n   ruby x000D \nnormalized   normalize detail message  options  x000D \ndetails attribute to sym  any    e  normalized all    k v  e k     v     x000D \n    x000D \n", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Well  actually it isn t the same  see an example x000D \n x000D \n   ruby x000D \nperson   Person new x000D \nperson errors add  name   too long  count  25  actual count  42 x000D \n  should return  false  since we are missing  actual count  42   x000D \n  but with your implementation it returns  true  x000D \nassert not person errors added   name   too long  count  25 x000D \n    x000D \n I ve added this case to the test in order to prevent any regression in the future ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "If possible  could this be worked on my branch instead  I ve tried to resolve several conflicts in the past year  basically needing to re understand the intention and re implement the fix  Each resolve takes many hours to do ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you but the current behavior is the expected and the behavior in 5 2 1 was a bug ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " bogdanvlviv we could also implement your PR  but that would be a change in the behavior so I don t think we should backport  What do you think  Also a new method like https   github com rails rails issues 34629 issuecomment 445373052 could make sense ", "annotation": {"notes": "", "label": ["thank"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sorry  I hadn t noticed https   github com rails rails issues 34652 issuecomment 445368949 and that https   github com rails rails commit ad739f59aa0fd81850010cedf992b81b24da9ff1 isn t regression but a bug fix  so I do agree with you there is nothing to backport  x000D \n x000D \nAlso  I agree that behaviour now is expected since  added   should reflect  method call  add   and our docs clearly explain that  If the error message requires an option  then it returns  true  with the correct option  or  false  with an incorrect or missing option    x000D \n x000D \n   ruby x000D \nperson errors add  name   greater than  count  5  x000D \nperson errors added   name   greater than    false x000D \nperson errors added   name   greater than  count  5    true x000D \n    x000D \n x000D \n  Also a new method like  34629  comment  could make sense  x000D \n x000D \nYeah  it is a good idea to add  def of kind  attribute  message    invalid    I ll do it in separate PR  x000D \n x000D \nThanks ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Currently  we do not generate Action Mailbox files x000D \n x000D \nThis is the reason I didn\u2019t add it myself ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Gotcha   georgeclaghorn  probably make sense to add this test from this PR to master  x000D \n   ruby x000D \n  def test generator skips action mailbox when skip active record is given x000D \n    run generator  destination root     skip active record   x000D \n    assert file    application path  config application rb      s require s     action mailbox  engine      x000D \n  end x000D \n   ", "annotation": {"notes": "", "label": ["summon"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That\u2019d be great  Can you open a new PR with that test  please ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I just opened a new PR with that test https   github com rails rails pull 34820", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \n  How to test incoming emails  x000D \n   ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \n  How to generate and route emails to a mailbox  x000D \n   ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I know this is fussy  but  setup  is a noun   Set up  is the verb form  x000D \n x000D \n   suggestion x000D \nInstall migrations needed for  InboundEmail  and ensure Active Storage is set up  x000D \n   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This came from the README  but can we go with \u201cConfiguration\u201d here  x000D \n x000D \n   suggestion x000D \n   Configuration x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   suggestion x000D \nThen set up a mailbox  x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you for the review   bowing man  I just fixed the mentioned typos ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hey  summera thanks for taking the time to open a PR  Unfortunately we don t generally accept new features into Active Support  Sometimes if a feature seems applicable to a large number of applications we accept AS PRs but I don t think this PR meets that requirement  Thanks again  hope you contribute in the future ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It s fewer lines  but I don t find that easier to read ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Do we still need these lines   Can not be specified in service ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Removed packages from the global section and moved to the matrix where they are required ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Is this still need ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Using  ruby head  caused this error without these lines  Then added these 3 lines to 2 6 0 and 2 5 3 to make these configuration consistent  x000D \n x000D \n   ruby x000D \n      bundle install   jobs 3   retry 3 x000D \n    Traceback  most recent call last   x000D \n            2  from  home travis  rvm rubies ruby head bin bundle 30 in   main   x000D \n            1  from  home travis  rvm rubies ruby head lib ruby 2 7 0 rubygems rb 302 in  activate bin path  x000D \n     home travis  rvm rubies ruby head lib ruby 2 7 0 rubygems rb 283 in  find spec for exe   Could not find  bundler   1 17 2  required by your  home travis build rails rails Gemfile lock   Gem  GemNotFoundException  x000D \n    To update to the latest version installed on your system  run  bundle update   bundler   nTo install the missing version  run  gem install bundler 1 17 2  n x000D \n    x000D \n x000D \nLet me remove these lines from 2 6 0 and 2 5 3 ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m wondering if these 3 lines should be removed from ruby head   x000D \n y yagi Would you let me know your thoughts ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sorry to be confused  I was concerned about whether the  sudo sed  i  e   local  peer s postgres all    e  s peer  md5 trust g   etc postgresql   main pg hba conf  line is still needed  Is this related to that error  x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I see  Removed  sudo sed  i  e   local  peer s postgres all    e  s peer  md5 trust g   etc postgresql   main pg hba conf  and all CIs are running fine ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Is this restart necessary ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I thik yes  But let me double check ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Removing this line causes this error   Added  postgresql  10  to the each matrix also starts up PostgreSQL server  I think it is better than  sudo service postgresql restart 10  because  restart  does not make sense  x000D \n x000D \nhttps   travis ci org rails rails jobs 481991504 L1220 L1226 x000D \n x000D \n   ruby x000D \npsql  could not connect to server  No such file or directory x000D \n\tIs the server running locally and accepting x000D \n\tconnections on Unix domain socket   var run postgresql  s PGSQL 5432   x000D \npsql  could not connect to server  No such file or directory x000D \n\tIs the server running locally and accepting x000D \n\tconnections on Unix domain socket   var run postgresql  s PGSQL 5432   x000D \nCannot run integration tests for que  To be able to run integration tests for que you need to install and start postgresql  x000D \n   ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I see  thanks for the cheking ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Similar thing with  sudo service postgresql restart 10    mariadb  10 3  in the addons won t resolve the upgrade and the restart ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Unfortunately  It does not work  x000D \n x000D \nhttps   travis ci org rails rails jobs 482004355 L1218 x000D \n x000D \n    x000D \n home travis  rvm gems ruby 2 5 3 gems mysql2 0 5 2 lib mysql2 client rb 131 in   query   Mysql2  Error  Column count of mysql proc is wrong  Expected 21  found 20  Created with MariaDB 50724  now running 100312  Please use mysql upgrade to fix this error  ActiveRecord  StatementInvalid  x000D \n     x000D \n", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "MySQL 5 7 is running https   travis ci org rails rails jobs 472491848 L92 L93 x000D \n x000D \n   ruby x000D \nmysql version x000D \nmysql  Ver 14 14 Distrib 5 7 24  for Linux  x86 64  using  EditLine wrapper x000D \n    x000D \n x000D \n", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Will investigate these failures  x000D \n x000D \nhttps   travis ci org rails rails jobs 472496760 L2138 x000D \n x000D \n   ruby x000D \nCannot run integration tests for sneakers  To be able to run integration tests for sneakers you need to install and start rabbitmq  x000D \n    x000D \n x000D \nhttps   travis ci org rails rails jobs 472496749 L2155 L2173 x000D \n x000D \n   ruby x000D \n    F x000D \nFailure  x000D \nActiveStorage  Analyzer  VideoAnalyzerTest test analyzing a rotated video   home travis build rails rails activestorage test analyzer video analyzer test rb 27   x000D \nExpected  5 227975 x000D \n  Actual  5 001705 x000D \nrails test  home travis build rails rails activestorage test analyzer video analyzer test rb 20 x000D \n F x000D \nFailure  x000D \nActiveStorage  Analyzer  VideoAnalyzerTest test analyzing a video   home travis build rails rails activestorage test analyzer video analyzer test rb 16   x000D \nExpected  5 166648 x000D \n  Actual  5 168239 x000D \nrails test  home travis build rails rails activestorage test analyzer video analyzer test rb 9 x000D \n   ", "annotation": {"notes": "", "label": ["disagreement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I am able to reproduce these two errors https   travis ci org rails rails jobs 472496749 L2155 L2173 in my local environment running Ubuntu 16 04   x000D \n x000D \nIt may be related to ffmpeg version installed on Ubuntu 16 04  let me investigate further ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Created a separated issue for Active Storage failures https   github com rails rails issues 34921", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " 34921 has been addressed and now CI are green ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  actionmailbox    actionpack    actiontext    activejob   activerecord  labels need removed  which has been added by the incorrect rebase ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Leaving these commits separately so far to make it easiler to understand what each commit changes  Will squash them once reviewed ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The xenial build supports PostgreSQL 10 by default  x000D \nhttps   docs travis ci com user reference xenial  databases and services  x000D \n x000D \nThis mean  only need to specify  postgresql   10   to use PostgreSQL 10  So I think that it is unnecessary to install the packages  Also  using DB that installed by default  since the port is 5432  I think that the replacement of the port is unnecessary   Did not it work  x000D \n", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the review  x000D \n x000D \n postgresql 10  and  postgresql client 10  packages are installed only for  dist  trusty  because RabbitMQ requires setuid  which is not supported by Ubuntu Xenial at Travis CI  Changing port number from 5433 to 5432 is also only for  dist  trusty   x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Did some more testing if  postgresql   10    itself is necessary and found removing  postgresql   10   runs PostgreSQL 9 6  well again it adds unnecessary  activereord  label ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "OK  It seems that there is a misunderstanding that RabbitMQ can not be used for Xenial build  x000D \nIt is not installed by default  but seems can install via apt  I tested with following travis yml   x000D \nhttps   github com y yagi travis test blob 8fd6bd0d1a872e94de5c86166a6515694c7b48ba  travis yml    x000D \n x000D \nRabbitMQ server starts as expected  x000D \nhttps   travis ci org y yagi travis test builds 479634242 L296  x000D \nhttps   travis ci org y yagi travis test builds 479634242 L693  x000D \nhttps   travis ci org y yagi travis test builds 479634242 L932 L973  x000D \n x000D \nCan you try  x000D \n", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the useful information  Added  rabbitmq server  to  services   and  packages   section  It looks like it is working fine on Ubuntu Xenial ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Not able to reproduce this failure yet  although I do not think this failure is related to this pull request change  x000D \n x000D \nhttps   travis ci org rails rails jobs 482006816 L741 L747 x000D \n x000D \n   ruby x000D \nFailure  x000D \nMysql2ConnectionTest test mysql connection collation is configured   home travis build rails rails activerecord test cases adapters mysql2 connection test rb 107   x000D \nExpected   utf8mb4 unicode ci  x000D \n  Actual   utf8 general ci  x000D \nrails test home travis build rails rails activerecord test cases adapters mysql2 connection test rb 106 x000D \n    ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Increasing the  var tamfs did not help  Let me take some more look at PostgreSQL failures with isolation  x000D \n    x000D \n     GEM     ar postgresql        sudo mount  o remount size 50   var ramfs  x000D \n   ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you add the following lines to the end of travis yml for debugging  x000D \n x000D \n    x000D \nafter failure  x000D \n    sudo cat  var log postgresql postgresql   main log x000D \n    sudo df  k x000D \n    x000D \n", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Looks like  var ramfs file system size does not change   x000D \n x000D \nnone              786432   786000       432 100   var ramfs x000D \n x000D \nOpened https   travis ci community t extending var ramfs size on xenial 1997", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "PostgreSQL error has been addressed because the environment value changed to  activerecord postgresql  since https   github com rails rails commit a5b2fff64ca0c1fa7be5124f40a251d991c10a85 diff 354f30a63fb0907d4ad57269548329e3", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Builds are green with isolation now  x000D \nhttps   travis ci org rails rails builds 484628679 utm source github status utm medium notification", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Reset changes to run with isolation for pull requests ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The UJS tests don\u2019t cover any Ruby code  so they don\u2019t need to run against all supported Ruby versions ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Is this filling matrix worth for us  x000D \nOriginally sqlite3 mem and mariadb intentionally run tests without latest ruby to suppress running isolated tests  x000D \n 28740", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I see  I thought that we were missing these build for the latest stable Ruby  unintentionally  Seems like adding those builds for  ruby head  still makes sense  right ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "IMO no  sqlite3 mem and mariadb are for just exercising the difference sqlite3 sqlite3 mem and mysql mariadb  x000D \nI d say the filling matrix for them is expensive for that purpose  x000D \n x000D \n", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Gotcha  I m closing this PR for now   Thanks for the digging into the git history ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The test failures demonstrate why we need this ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ah  I see  I returned it back for now ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is the test for the  defined   call \ud83d\ude05", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Try adding this test to   test template url helper test rb  for testing the URL helper change  x000D \n x000D \n   ruby x000D \ndef test button to without protect against forgery method x000D \n  self class undef method  protect against forgery   x000D \n  assert dom equal  x000D \n       form method  post  action  http   www example com  class  button to   input type  submit  value  Hello      form    x000D \n    button to  Hello    http   www example com   x000D \n    x000D \nensure x000D \n  self class define method  protect against forgery     request forgery   x000D \nend x000D \n    x000D \n x000D \nAs for the CSRF helper change  I don t see a test case for that yet  You can use this  gist  https   gist github com gmcgibbon 3289ad86f0dc39458c8437ec00e95d1e  ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the review and tests  gmcgibbon  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for fixing this   x000D \n x000D \nIt s fine for this PR  but in general though we don t use changelogs for small bug fixes  It s usually for features and bug fixes that result in major changes ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Lovely fix  thank you ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Backported to 5 2 stable   4b6a24ce83", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since we haven t excluded all cops for  activestorage test dummy         probably we should consider turning on all the cops for  actionmailbox test dummy       to keep consistency  We can just run  rubocop  a  to fix all offenses under the  dummy  directory ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I don t think these examples are much clear than their counterparts written with  name  and  name was   When there s only 2 items in the array I prefer the fully written out version  x000D \n x000D \n   ruby x000D \n  First examples x000D \nname changed  to   Bob      name changed  to   Bill   x000D \nname changed     name in   w  Bob Bill   x000D \n x000D \n  Second example x000D \nname changed  from   Pete   to   Bob      name changed  from   Bill   to   Bob   x000D \nname changed  to   Bob      name was in   w  Pete Bill   x000D \n    x000D \n x000D \nThe bottom line is that I don t think this usage of    changed   is that common and I don t think we should burden it further  It s diminishing returns at this point  Thanks ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I thought that was clearer and could be useful with more than two items in the array  x000D \nAnyway  thanks for your feedback and examples   kaspth ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Appreciate the suggestion  It s not always easy to know where the line is unless asking  so thanks \ud83d\ude09", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "if i could i\u2019d merge this myself ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Rails is already Facebook free  We don t have a Facebook page and we don t do any advertising on Facebook  x000D \n x000D \nIf  Facebook free  meant striking every occurence of the word Facebook  then it should ve been named differently \ud83e\udd13 x000D \n x000D \nHowever  I ll merge this because Twitter was built on Rails  so let s champion that platform instead \u270c\ufe0f", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  If  Facebook free  meant striking every occurence of the word Facebook  then it should ve been named differently \ud83e\udd13 x000D \n x000D \nThat was a pun as the PR makes Rails codebase literally Facebook free \ud83d\ude09", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Is not  FrozenError  here ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Rebased incorrectly  Let me address it ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Rebased   Because of my previous incorrect rebase  these labels should be removed   x000D \n x000D \n actioncable    actionmailer    actionpack    actionview    activejob    activemodel  ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I dig it  thanks ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "How did you measure the new stack   for  is just a quirky spelling of  each   so you should still see two more entries  for  each  and the block  than you describe   x000D \n x000D \nWhile I don t love this implementation  I can see alternative versions that could be acceptable    but  inject  is the natural tool for this problem  so I think I d like to understand a bit more about your use case before we sacrifice readability for it  At a glance  my stack can handle a good 1000  of the above recursions    is your query  that  complex  If so  does it need to be  is AR constructing it poorly  ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The original stack was from an actual stack trace for a  SystemStackError  we ran into  The new stack was my assumption  which is probably wrong from what you re saying  In that case  it would only remove 3 stack frames  not 5  the implicit   each  and block frames would still be there   x000D \n x000D \nThe case that triggered this for us looked like this  x000D \n x000D \n   ruby x000D \nrelation   compound ids map do  id1  id2  x000D \n  Model where id1  id1  id2  id2  x000D \nend reduce   or  x000D \n    x000D \n x000D \nWhen I looked into the stack that triggered the  SystemStackError   as well as the output of  relation to dot  for smaller  compound ids  lists  I noticed a couple of stack related inefficiencies  x000D \n x000D \nFirst was the large number of stack frames from  inject join   which I m attempting to address here  x000D \n x000D \nThe next was the fact that  WhereClause  always adds an  Arel  Nodes  And  node  even if there is only a single predicate in the  WHERE  clause  cf  https   github com rails rails blob master activerecord lib active record relation where clause rb L64 L66   There were also some  Arel  Nodes  Grouping  nodes that seemed to be getting added because Arel isn t aware of SQL operator precedence and adds them just in case  Neither of those are addressed here  but I think they were also a contributing factor on the size of the queries we re able to construct  x000D \n x000D \nAs for the implementation  I think the  i  counter variable can be avoided if it s possible to treat the  list  parameter destructively  In that case  the method can do  return collector if list empty   first  then do  collector   visit list shift  collector   before iterating the rest of the list  This would change the loop logic from appending the  join str  on all but the last element to prepending the  join str  to every element in  list   post   shift  ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "To comment directly on   inject   it adds an extra stack frame for   each   x000D \n x000D \n    x000D \n   1  inject       raise   x000D \nTraceback  most recent call last   x000D \n        5  from  usr local var rbenv versions 2 5 2 bin irb 11 in   main   x000D \n        4  from  irb  3 x000D \n        3  from  irb  3 in  inject  x000D \n        2  from  irb  3 in  each  x000D \n        1  from  irb  3 in  block in irb binding  x000D \n    x000D \n x000D \nThis is on top of whatever it has been chained with  If you call    1  each with index inject       raise     the stack trace looks like this in Ruby 2 5 2  x000D \n x000D \n    x000D \n   1  each with index inject       raise   x000D \nTraceback  most recent call last   x000D \n        7  from  usr local var rbenv versions 2 5 2 bin irb 11 in   main   x000D \n        6  from  irb  1 x000D \n        5  from  irb  1 in  inject  x000D \n        4  from  irb  1 in  each  x000D \n        3  from  irb  1 in  each with index  x000D \n        2  from  irb  1 in  each  x000D \n        1  from  irb  1 in  block in irb binding  x000D \n    x000D \n x000D \nYou can cut one frame out of this by using  with object  instead of  inject   but I m not sure what the minimum Ruby version is that supports that  x000D \n x000D \n    x000D \n   1  each with index with object       raise   x000D \nTraceback  most recent call last   x000D \n        6  from  usr local var rbenv versions 2 5 2 bin irb 11 in   main   x000D \n        5  from  irb  2 x000D \n        4  from  irb  2 in  with object  x000D \n        3  from  irb  2 in  with index  x000D \n        2  from  irb  2 in  each  x000D \n        1  from  irb  2 in  block in irb binding  x000D \n    x000D \n x000D \n", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I can write up an actual test case that narrows down how many   or  iterations lead to a stack related failure ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I also want to respond to the  is AR costructing it poorly  part  x000D \n x000D \nHere s the loop in question  x000D \n x000D \n   ruby x000D \nrelation   compound ids map do  id1  id2  x000D \n  Model where id1  id1  id2  id2  x000D \nend reduce   or  x000D \n    x000D \n x000D \nIn SQL terms  the  WHERE  clause in each iteration needs just an  AND   When we combine those queries with   or   we should expect an  OR  to be added to the query  x000D \n x000D \nGiven that  AND  has a higher precedence than  OR   the reduced query  could  be constructed with no parentheses  I m not sure how great that is for readability  x000D \n x000D \nI think the main problem in terms of AR Arel constructing a bad query is that  Or  is a  Binary  node instead of being combinable with other  Or  nodes into a single node with multiple children  similar to  And   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think the ideal AST for our query would look like the following  And the  ToSql  visitor would be smart enough to parenthesize according to precedence  eliminating the need for  Grouping  nodes to be blindly added in cases where they may not be needed  x000D \n x000D \n    x000D \nOr x000D \n    And x000D \n        Equality x000D \n            Identifier x000D \n            BindParam x000D \n    And x000D \n        Equality x000D \n            Identifier x000D \n            BindParam x000D \n    And x000D \n        Equality x000D \n            Identifier x000D \n            BindParam x000D \n    And x000D \n        Equality x000D \n            Identifier x000D \n            BindParam x000D \n    And x000D \n        Equality x000D \n            Identifier x000D \n            BindParam x000D \n    And x000D \n        Equality x000D \n            Identifier x000D \n            BindParam x000D \n    And x000D \n        Equality x000D \n            Identifier x000D \n            BindParam x000D \n    And x000D \n        Equality x000D \n            Identifier x000D \n            BindParam x000D \n    And x000D \n        Equality x000D \n            Identifier x000D \n            BindParam x000D \n    And x000D \n        Equality x000D \n            Identifier x000D \n            BindParam x000D \n   ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "   ruby x000D \n  frozen string literal  true x000D \n x000D \nrequire  bundler inline  x000D \n x000D \ngemfile true  do x000D \n  source  https   rubygems org  x000D \n x000D \n  git source  github     repo   https   github com   repo  git    x000D \n x000D \n    Activate the gem you are reporting the issue against  x000D \n  gem  activerecord    5 2 0  x000D \n  gem  sqlite3  x000D \nend x000D \n x000D \nrequire  active record  x000D \nrequire  minitest autorun  x000D \nrequire  logger  x000D \n x000D \n  This connection will do for database independent bug reports  x000D \nActiveRecord  Base establish connection adapter   sqlite3   database    memory    x000D \nActiveRecord  Base logger   Logger new STDOUT  x000D \n x000D \nActiveRecord  Schema define do x000D \n  create table  imported records  force  true do  t  x000D \n    t integer  id1  null  false x000D \n    t integer  id2  null  false x000D \n    t string  data  null  false x000D \n x000D \n    t index  w id1 id2   unique  true x000D \n  end x000D \nend x000D \n x000D \nclass ImportedRecord   ActiveRecord  Base x000D \nend x000D \n x000D \nclass BugTest   Minitest  Test x000D \n  def test stack limits x000D \n    1 upto 5 000  do  limit  x000D \n      puts  Testing limit   limit   x000D \n x000D \n      relation   1 upto limit  map do  n  x000D \n        ImportedRecord where id1  n  id2  n  x000D \n      end reduce   or  x000D \n x000D \n      relation to sql x000D \n    end x000D \n  end x000D \nend x000D \n   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Using that test  I get to around 780 790 compound ID combinations before hitting a  SystemStackError  on  master    x000D \n x000D \nUsing my branch  it gets to about 1 100   or  iterations  I realize that things like bind value limits might start coming into play  so at a certain point you have to either chunk up these queries or insert the compound ID combinations into a temporary table first  For background  these id combinations are coming from an external API over HTTP  x000D \n x000D \n I can also confirm from testing against my branch that we re only saving 3 stack frames  not 5 ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  I think the ideal AST for our query would look like the following x000D \n x000D \nI agree    I wonder how easily we can achieve something close to that   i e  a multi armed Or seems likely to be sufficient for practical purposes  even with more enthusiastic than necessary Grouping   x000D \n x000D \nIn comparison  any constant factor reduction in stack size feels more like we re rearranging deckchairs  tbh  x000D \n x000D \n    x000D \n x000D \nAs a quick thought to alleviate your immediate issue  maybe this would work  x000D \n x000D \n   ruby x000D \nrelations   compound ids map do  id1  id2  x000D \n  Model where id1  id1  id2  id2  x000D \nend x000D \nrelations   relations each slice 2  map    l  r  r   l or r    l   while relations size   1 x000D \nrelation   relations first x000D \n   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Balancing out the AST like that makes huge difference in terms of stack usage  After making your suggested change  I was able to increase the  limit  to  100 000   At that point  just running   to sql  was taking seconds  so we re definitely in the realm of needing to chunk things better for other reasons  x000D \n x000D \nIt would clearly be better if we had a flattened  precedence aware  Or  structure in this case instead of a balanced tree of  Or  nodes  but this is a great step in the right direction ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Could you please review ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I d rather keep the git history here  It s easy enough to understand by context from the test code ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m curious about what is the meaning the rescuing LoadError  x000D \n x000D \nThe rescue was added at https   github com rails rails commit dc677f7665e5ec74b5a313ba656bba19dc0f853d diff 5729a03dfd2edf582f8f35a6bacda619R7  x000D \n x000D \nDoes this mean that ignoring LoadError even if loading any component is failed ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I remember that  we once decided  not to spread any rubocop s comments in the code base  https   github com rails rails pull 32381 discussion r205212331   and  exclude Cops for specific file s via   rubocop yml  file  https   github com rails rails pull 33441  if needed  x000D \n   diff x000D \ndiff   git a  rubocop yml b  rubocop yml x000D \nindex 96e2ad76d0  3c85378dc0 100644 x000D \n    a  rubocop yml x000D \n    b  rubocop yml x000D \n    189 6  189 8    Style ParenthesesAroundCondition  x000D \n x000D \n Style RedundantBegin  x000D \n   Enabled  true x000D \n   Exclude  x000D \n        railties lib rails all rb  x000D \n x000D \n Style RedundantReturn  x000D \n   Enabled  true x000D \ndiff   git a railties lib rails all rb b railties lib rails all rb x000D \nindex 7f4c625b39  f5dccd2381 100644 x000D \n    a railties lib rails all rb x000D \n    b railties lib rails all rb x000D \n    1 7  1 5    x000D \n   frozen string literal  true x000D \n x000D \n   rubocop disable Style RedundantBegin x000D \n  x000D \n require  rails  x000D \n x000D \n  w  x000D \n    x000D \n x000D \nShould we follow that approach in this case ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yes    the intention is that if you only have a subset of component gems available   rails all  will only load the ones your Gemfile pulls in  See also  31307  which this reminds me I never merged  \ud83d\ude48 ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "IMO no  Configured exclusions make sense when it s structural   this rule doesn t apply to tests    whereas comments work better when it s contextual   this particular instance is an exception to the rule    Putting the latter in the config makes the config noisy  plus it moves the definition of the exception away from the context that makes it exceptional  x000D \n x000D \nWe definitely don t want such comment exceptions in places where we just feel the rule is making a bad choice  that implies we don t agree with the rule  so warrants deeper consideration     this file ignores the rule to remain syntactically compatible with older Rubies  is enough of a special case to me  x000D \n x000D \n If the path to the version check had required more than one instance of the comment  then things might ve balanced out differently  ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " eileencodes good idea  I\u2019m curious what error message you get instead now  Because as far as I understand it the app still wouldn\u2019t boot on 2 4  no ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yea the error then told me to install Ruby 2 5  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Bad commit wording  It doesn t fix app boot but it doesn t fail spectacularly \ud83d\ude04 ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Haha  gotcha  \ud83d\ude04", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Why do we need to share the writing connection pool for all handlers  x000D \n x000D \nI ve found the change when creating the example at https   github com rails rails pull 35073 issuecomment 458519770  since the  TestFixtures  is included in the  ActiveSupport  TestCase   the overwriting connection pool by the writing connection pool is happened in the  before setup   so it is hard to testing replica connections in their apps  x000D \n x000D \nhttps   github com rails rails blob bf42e1506be85c0c977038ae334548f5699f7afd railties lib rails test help rb L23 L29 x000D \n x000D \nUnless suppressing the effect of  setup shared connection pool   the following test won t be passed  x000D \n x000D \n   diff x000D \ndiff   git a test test helper rb b test test helper rb x000D \nindex 0ff12e7  5d82a8b 100644 x000D \n    a test test helper rb x000D \n    b test test helper rb x000D \n    10 4  10 11    class ActiveSupport  TestCase x000D \n   fixtures  all x000D \n  x000D \n     Add more helper methods to be used by all tests here    x000D \n  x000D \n      enlist fixture connections  replaces connection pools in non default handlers x000D \n     by default writer connection pool  x000D \n     We can t test   reading  connection unless suppressing the effect of the method for now  x000D \n   def enlist fixture connections x000D \n        x000D \n   end x000D \n end x000D \n    x000D \n x000D \n   diff x000D \ndiff   git a test models post test rb b test models post test rb x000D \nindex 6d9d463  f2523ce 100644 x000D \n    a test models post test rb x000D \n    b test models post test rb x000D \n    1 6  1 11    x000D \n require  test helper  x000D \n  x000D \n class PostTest   ActiveSupport  TestCase x000D \n   test  replica   do x000D \n     pool   Post connection handlers  reading  connection pool list first x000D \n     assert pool connection replica  x000D \n   end x000D \n  x000D \n     test  the truth  do x000D \n       assert true x000D \n     end x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "If we don t combine them  then one connection will be inside the fixture transaction and see the fixtures    any changes to them   and the other will see empty tables ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I see    so for now probably people need to restore  re overwrite  pools in handlers if their app uses read write splitting or sharding and want to test that explicitly ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I haven t checked  but I think we should only do this when transactional fixtures are enabled    so the right way to properly test splitting would be to disable that  Then your writes will really hit your database  and the reads in the other connection will be able to see them  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yeah  that approach sounds good to me ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I fixed the sqlite memory tests by creating a temporary connection pool  This isn t necessary for the other adapters but the sqlite memory ones break if I create new connection handlers and connections while running  I didn t want to skip sqlite memory for this because it s kind of hacky and I d like all adapters to be testing it  The temp connection pool is the same method the query cache tests use  ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "How this works in a multi tenant environment  The two connections needs to have different data  In the tenant 1  user A should exist but in the tenant 2  only user B should exists  x000D \n x000D \nDoes the solution here makes harder to implement a multi tenant approach to fixtures like https   github com rails rails pull 34246 ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "A multi tenant environment would have different specification names for tenant 1 and tenant 2 right  This only ties a primary and replica together if they have the same connection specification name   x000D \n x000D \nSo a case where we need multiple directories for fixtures is still broken but this at least fixes the fact that a replica can t see a primary in tests  ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  that makes sense  In the multi tenant case we would have multiple primaries  so we still need to solve that problem  I ll see with  gmcgibbon what is missing now that the API is defined ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This also can keep behavior that specified an invalid value between Ruby 2 6 and before versions  x000D \n x000D \n    x000D \n  ruby  v  rbigdecimal  rbigdecimal util  e  p  123 003  to d  p BigDecimal  123 003    x000D \nruby 2 5 1p57  2018 03 29 revision 63029   x86 64 linux  x000D \n0 123e3 x000D \n0 123e3 x000D \n     x000D \n x000D \n     x000D \n  ruby  v  rbigdecimal  rbigdecimal util  e  p  123 003  to d  p BigDecimal  123 003    x000D \nruby 2 6 0dev  2018 12 21 trunk 66474   x86 64 linux  x000D \n0 123e3 x000D \nTraceback  most recent call last   x000D \n\t1  from  e 1 in   main   x000D \n e 1 in  BigDecimal   invalid value for BigDecimal     123 003   ArgumentError   x000D \n    x000D \n", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fantastic  Now we can just put the  ensure  at the top level  That always bothered me before ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Could switch to  tap  while we re here ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Huh  I would ve thought this begin could also be removed and the  rescue  could be lined up with  else  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Could switch to  tap  while we re here  x000D \n x000D \nModified to use  tap  ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This  begin  is to rescue an exception raised by  commit transaction    commit transaction  is called when a transaction block is succeeded   x000D \n x000D \nhttps   github com rails rails blob 49f9dff9b6ba1451d8c85927d5f75327bd2322d9 activerecord test cases transactions test rb L572 L585 x000D \n x000D \nThis  begin  couldn t be removed since a begin could be ommited only when toplevel in methods and do end blocks  but here is in if else block ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Cool  thanks ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Does rubocop have anything to remove  send  on the now public define method and others  Or passing the block as a param instead of using yield like we did for  read attribute ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Unfortunately any cop doesn t exist for now  x000D \n x000D \n    x000D \n  cat send and block param rb x000D \nObject send  define method   foo     x000D \nObject send  remove method   foo  x000D \n x000D \ndef foo1 x000D \n  bar   yield   x000D \nend x000D \n x000D \ndef foo2  block  x000D \n  bar  block  x000D \nend x000D \n x000D \ndef bar x000D \n  yield x000D \nend x000D \n x000D \n  be rubocop send and block param rb x000D \nInspecting 1 file x000D \n  x000D \n x000D \n1 file inspected  no offenses detected x000D \n   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I tried to reproduce your issue  but not reproduced   x000D \nThe scaffold controllers generator generates codes as follows   x000D \n x000D \n   ruby  x000D \nformat html   redirect to  post  notice   Post was successfully created     x000D \n     x000D \n x000D \nCan you provide a reproducing application your issue  x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sorry  I did not want to close this  it was an accident  x000D \nI did not explain myself sufficiently  This happens when I generate a scaffold controller in a rails plug in  but not in a rails app  x000D \n    x000D \n rails g scaffold controller Blog   model name post x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for your detail  I understood   x000D \nAs test fails  should not stop using  redirect resource name   x000D \nCan you fix the process of generating  redirect resource name   x000D \n", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I made another pull request to fix this bug ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kaspth Fixed and changed the title and the description of the PR ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can we change to  assert equal   1234 mikel me com    rather than making the brackets optional ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "it would fail on mail 2 7 1", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I can t imagine a breaking change in Action Mailer that will break only Mail master  If that situation happens it should be probably fixed in the Mail gem that suppose to have very stable api between versions  x000D \nhttps   github com mikel mail pull 1303 will definitely help to catch failures earlier  but I don t think that a new stage in Rails will justify longer builds  x000D \none of the goals of https   github com rails rails pull 34754 is to reduce the number of jobs and this goes against it  eventually we can do the same for other other dependencies like Sprockets  Puma  Redis etc   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That s fair  In that case  let s use a different header in these tests whose decoded value is the same on Mail 2 7 and Mail 2 8  Or just remove the second In Reply To header since the first header demonstrates the behavior under test ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "this way it ll pass on both versions", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Please remove the above  We unset temporary bundler variables to load proper bundler and Gemfile  x000D \n  comment ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Comment removed ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Related to  22991 ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I tried to reproduce step described in  6318  with  Bundler with original env   but not reproduced  I assume this already fixed with bundler side  and no need to use  with clean env   x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " marcotc Thanks ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Well  that s helpful rails bot \ud83d\ude02 \u2014  gmcgibbon are you up for tuning the auto labeling ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  1  for not logging personal data when it\u2019s not needed  Can we log the  Message ID  instead  so that outbound emails in application logs can still be correlated with mail server logs ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m not fond of the  Delivered mail  text as thats not actually what happened   The app has sent the email but it isn t responsible for delivering it or knowledgable if it has been delivered  x000D \n x000D \nYes the mail is part of a delivery but to call it  delivered  is not accurate imo  x000D \n x000D \nEverything else about this change however is spot on   Love the removal of private info from logs    x000D \n", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  \ud83d\udc4d for not logging personal data when it\u2019s not needed  Can we log the  Message ID  instead  so that outbound emails in application logs can still be correlated with mail server logs  x000D \n x000D \nGood idea  Took me a while to get around to this though  I ve also run into  and fixed  a bug where auto generated message ids are not included in the payload   It seems they aren t generated until you call  Mail  Message encoded    x000D \n x000D \n  I m not fond of the  Delivered mail  text as thats not actually what happened  The app has sent the email but it isn t responsible for delivering it or knowledgable if it has been delivered  x000D \n   x000D \n  Yes the mail is part of a delivery but to call it  delivered  is not accurate imo  x000D \n   x000D \n  Everything else about this change however is spot on  Love the removal of private info from logs  x000D \n x000D \nI get where you re coming from but there s also another perspective  Rails has  delivered  the mail to the subsystem responsible for the next step towards delivery  And it s now consistent with the event name ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What about removing  delegate  streams  to   subscription  from the TestCase class  Since we have specific assertions we probably don t need to expose  streams  anymore", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I agree  I thought about it too  It makes sense to do it earlier before too many people start using it in their tests ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Done  https   github com rails rails pull 34740 commits 4633affd6ecf9f2a647853758aa996f3d6b75e86 diff 6969e19230d7e29a55b9de21f5379867L170", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Very nice  Thank you ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Break up the rats nest  Thanks \ud83d\ude04", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Was this ever documented to be supported  Seems weird to pass in nil directly ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Was this ever documented to be supported  Seems weird to pass in nil directly  x000D \n x000D \nThis is a good point \u261d\ufe0f  x000D \n x000D \nBefore creating this pull request  I read this comment line and interpreted it as  nil  can be directly passed as  params   x000D \n x000D \nhttps   github com rails rails blob 2f6456cbe1da73c13b37e23720caa8716df85e78 actionpack lib action controller test case rb L377", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It sounds like it s a leftover from when we had positional parameters  get  index  nil     CONTENT TYPE      \u2026      Ref  https   github com rails rails commit baf14ae513337cb185acf865e93dfc48f3aabf6a diff 600d5368b55e46ed961abb4295977ac3L498 x000D \n x000D \nExcept there s also the   body  option  which requires that   params  can be nil  x000D \n x000D \nThanks  Unfortunately  5 1 no longer receives bug fixes  so I ll only backport this to 5 2 ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Do we need to require the whole thing here ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Seems like a good idea just to require   concurrent utility processor counter  ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "If we re making the default an  it just works  value like this  does it make sense to still include it here  If most people don t need to override it  maybe this line can just be a plain  parallelize  ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I thought that it would be better to keep this in this form since it would be easier for users to figure out that their tests use the actual core count as a number of workes  I suppose we should either simplify this to  parallelize  and  parallelize with   threads   a few lines above   or extend it to  parallelize workers   number of processors  with   processes   to emphasize that users  tests use  fork approach  ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I guess  tests failed  https   travis ci org rails rails jobs 469281088 L2352  because the physical core count of the Travis  server is equal to 1  x000D \nI could reproduce those failures on my VM only by running those tests with  PARALLEL WORKERS 1   x000D \nI think we should change  parallelize workers   number of processors   to  parallelize workers  2   for those tests by  the similar approach we do there  https   github com rails rails blob master railties test application test runner test rb L545  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udcaa\u2764\ufe0f", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I like it spelling out as well \ud83d\udc4d\n\n  On Dec 19  2018  at 00 55  Bogdan  notifications github com  wrote \n  \n   bogdanvlviv commented on this pull request \n  \n  In railties lib rails generators rails app templates test test helper rb tt \n  \n         else    \n     parallelize workers  2 \n     parallelize workers   number of processors \n  I thought that it would be better to keep this in this form since it would be easier for users to figure out that their tests use the actual core count as a number of workes  But I don t have strong opinions  I think that we should either simplify this to parallelize and parallelize with   threads  a few lines above   or extend it to parallelize workers   number of processors  with   processes  to emphasize that test suit run use  fork approach  \n  \n  \u2014\n  You are receiving this because you modified the open close state \n  Reply to this email directly  view it on GitHub  or mute the thread \n", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It is expected that instance of  ActiveSupport  TimeZone  be passed to  zones    x000D \nSince  ActiveSupport  TimeZone  has a      method  so this warning should not normally show  x000D \nhttps   github com rails rails blob 0fa5b5510c6faefc33ab3715e08b2604195a1063 activesupport lib active support values time zone rb L331 L335  x000D \n x000D \nThe reason why this happens in the test is that the      is not defined in the Fake class used in the test  so let s add the      to the Fake class to deal with it  x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the assistance  That did the trick ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The problematic test does not assume that this check is done correctly  it is checked by other tests    x000D \nTherefore  the test has failed with this fix   x000D \nhttps   travis ci org rails rails jobs 469956828 L1748 L1760  x000D \n x000D \nCan you fix it so as not to check as follows   x000D \n x000D \n   diff  x000D \ndiff   git a actionview test template form options helper test rb b actionview test template form options helper test rb x000D \nindex a2d1474  4ccd3ae 100644 x000D \n    a actionview test template form options helper test rb x000D \n    b actionview test template form options helper test rb x000D \n    36 6  36 7    def secret x000D \n   module FakeZones x000D \n     FakeZone   Struct new  name  do x000D \n       def to s  name  end x000D \n       def     re   end x000D \n     end x000D \n    x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " y yagi thanks for guidance  Wanted to contribute on this one  but was having a hard time figuring out the expected behavior for that particular test ", "annotation": {"notes": "", "label": ["request"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Test failure  https   travis ci org rails rails jobs 469101728 L1463 L1475 x000D \n    x000D \nFailure  x000D \nFormOptionsHelperTest test time zone select with priority zones is not implemented with grep   home travis build rails rails actionview test template form options helper test rb 1282   x000D \nExpected   select id  firm time zone  name  firm time zone    option value    disabled  disabled                 option  x000D \n option value  A  A  option  x000D \n option value  B  B  option  x000D \n option value  C  C  option  x000D \n option value  D  selected  selected  D  option  x000D \n option value  E  E  option   select  x000D \nActual   select name  firm time zone   id  firm time zone   option value  A  A  option  x000D \n option selected  selected  value  D  D  option  option value    disabled  disabled                 option  x000D \n option value  B  B  option  x000D \n option value  C  C  option  x000D \n option value  E  E  option   select  x000D \n   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " jeremy I see   I looked into it and I m having some trouble understanding why there would be a deprecation warning  x000D \n x000D \n This  line seems to be throwing the warning  but I thought the          method was overridden  here   Using to s or grabbing the TimeZone s name breaks the same test  x000D \n x000D \nAny ideas on the path forward for this one  x000D \n x000D \n This   https   github com rails rails blob 528c5bb224a2f9ea6eee7b15ef5de5e9d17bf309 actionview lib action view helpers form options helper rb L583 x000D \n here   https   github com rails rails blob 528c5bb224a2f9ea6eee7b15ef5de5e9d17bf309 activesupport lib active support values time zone rb L333", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " vinistock Thanks ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Guides aren t really meant to have a timeline in them  They re a record of what has happened  not what is going to be happen  x000D \n x000D \nLet s wait for Action Text and Action Mailbox to be merged into Rails before we write about them  Thanks ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Guides aren t really meant to have a timeline in them  They re a record of what has happened  not what is going to be happen  x000D \n x000D \nWhen I type  rails 6  in Google  the link https   edgeguides rubyonrails org 6 0 release notes html is second in a list  The article is linked from many other Rails 6 articles  The point is that this is not an obscure text somewhere on The Dark Web   it is a text that many people read in order to see details about Rails 6  I was one of those people  And I was totally confused by the information presented  Imagine the typical confusions of a normal person  who is not active in Rails development community   x000D \n   Why so little info  Oh  apparently Rails 6 is not released yet    So why can t this article clearly say on the very top of the page that Rails 6 and this documentation are a work in progress  It s irritating having to Google separately for this info   x000D \n   Ok  the Rails 6 is a work in progress  the list of features is not yet complete   I understand all that  But why can t this article have at least something   even some simple mentions on what is upcoming  on what features were already decided to be included   x000D \n   Rails 6 is work in progress  But why isn t here any info about the timeline in the main document that describes this milestone  Until the release  info about the dates are the most important info one needs  the need for features compatibility documentation comes after the need for a timeline  everything else becomes important even later on   Do I really have to be an active part of the Rails development community in order to get a simple answer  Do I really need to start reading blogs just to see some glimpses and guestimations about the possible release dates  Looks totally excessive    I wish this important info was right here and there would be a volunteer  who would bother to make such changes     x000D \n x000D \n x000D \nRails 6 will be one of the biggest releases yet  Cool changes to Rails should be actively promoted  it s not like Rails has been winning the Web competition even against Python   The documentation page is an essential part of Rails s marketing  It should be used to the fullest  even if the info written is there only temporarily and will be deleted after the release  The fact that this info will be there for a year  informing the very people interested in the release  is more than enough to make an effort to make proposed changes worth it  x000D \n x000D \nIf you still disagree  then  this page  https   edgeguides rubyonrails org 6 0 release notes html  should be closed from public view  I would prefer not to  but for the sake of consistency this must be done  The link should start working publicly only after the release since the article should tell only about stuff that has already happened  If I will make this suggestion can I count on your approval support  x000D \n x000D \n x000D \n  Let s wait for Action Text and Action Mailbox to be merged into Rails before we write about them   x000D \nThe decision to include both was already made  x000D \n  https   weblog rubyonrails org 2018 10 3 introducing action text for rails 6  x000D \n  https   weblog rubyonrails org 2018 12 13 introducing action mailbox for rails 6  x000D \nBoth posts were written by the DHH himself  on Rails s official web site  This is as close to the actual merge as one gets  x000D \n x000D \nThe Release Notes page for Rails 6 are  Work in progress   So why isn t work on it allowed  x000D \n    https   user images githubusercontent com 2521942 50098587 e8d71a00 0224 11e9 9d46 2e2b85fbdb65 png  x000D \n x000D \nSo why to wait  Why to leave things until the last moment  Why to leave it until the crunch time  I am sure that during the release window there will be plenty of other important things to do  admittedly much more technically difficult than what I am doing here  so why not let competent people do the difficult stuff  while I am helping with this kind of important  minutiae    Why can t I help a little bit  now that I have time and motivation  to help other people  here and now  that are searching for the relevant information  x000D \n x000D \nMarketing   selling ideas to people  This usually means having to go where the people customers are  Rails is in a very fortunate situation that it has people who come to the aforementioned page in order to be  sold   the idea that Rails 6 will be an awesome release  that Rails is in good hands and is a viable option for development   This opportunity is not used  I had a modest proposal of at least closing the most glaring hole and getting at least some kind of benefit from all the current visitors  who at this moment and until the release will simply waste their time visiting the page and learn absolutely nothing about the main topic of the article   x000D \n x000D \n x000D \nI sincerely hope that you will reconsider your decision  x000D \n x000D \nRegardless  please do have a nice day     ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for elaborating  I did not expect  to those interested  would be expanded to all that and I definitely didn t anticipate your Google search results point  good idea  \ud83d\ude04 x000D \n x000D \nThis sparked a discussion in Core and we re looking into doing something to leverage this  as you ve suggested  Most of us want something other than to add this info wholesale into this guide  so that still hasn t changed  x000D \n x000D \nWe ve discussing the release timeline internally and we hope to announce that on the blog when it s ready  So that ll be our immediate fix  Once that s out  feel free to chime in with the search results status on your end too  Thanks again \ud83d\ude0a", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kaspth  x000D \nI guess  this link  https   weblog rubyonrails org 2018 12 20 timeline for the release of Rails 6 0   is what you meant  Thank you for having a separate post about the timeline of Rails  Now my only request would be to put this link at the top of the documentation page      x000D \n x000D \nAlmost 3 weeks have passed  but this timeline link is not on the first page of Google search results   rails 6    I am sure that it could be somewhat easily found by changing the search query  but that doesn t really change my overall points  x000D \n1  This would require more work from the user  If something can be done to improve  usability   generally speaking   it should be done  x000D \n2   all the stuff I already wrote about the importance of marketing and use of opportunities like when  the customer  is already here to consume relevant information  x000D \n3  Internet is a linked system  Without links the main purpose of Internet pages is defeated  One should link important pages with each other  This not only improves the  usability  of the web page  those who are interested  can go and read more   but also improves the standing in search engines  a link from the major Rails 6 page would make not only the specific Rails 6 Timeline post more visible and relevant  but would improve the overall standing of the whole Rails blog   x000D \n x000D \nCould you please put a link to the Timeline blog post at the top of the documentation page  with a short mention that Rails 6 has not been release yet   That would really improve the informational value of the documentation page ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  I ll pass on working on this \ud83d\udc4d", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The documentation page is tied to releases  Even if we add a link for the post in the documentation it would be only accessible and easy to find in a Google search at the time that Rails 6 is released  so doing that would not help much  x000D \n x000D \nI just tried a good search with  rails 6  on google and that post was the first result  For the future  the timeline will be always the same  always releasing on April  I plan to write a documentation page about our general release engineering some time before the rails 6 release ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "These are correct as they are ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Why is ff0af71  and 48d1c48  necessary ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The deprecation warning should not be happened in the next stable release ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Removed this deprecation warning as far as I understand this file will not be removed in 5 2 x ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you fix CHANGELOG entry too  x000D \nhttps   github com rails rails pull 34720 files diff 4be3c90df95ede75a8d48016f370c0d9R7", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Updated the changelog entry ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Looks like this pull request includes something not available for Ruby 2 2 and 2 3  Let me correct them ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Reverted https   github com rails rails pull 34720 commits e8237d18f3f756e49d4db91e4a69bc9166f604a5 since only Ruby 2 4 or higher supports  Regexp match    Now the remaining failures at 5 2 stable are  32938 and  34719 ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Regexp match  is supported https   github com rails rails blob 5 2 stable activesupport lib active support core ext regexp rb L8 but String match  isn t x000D \n x000D \nI don t see a reason why https   github com rails rails pull 32695 should be backported  It s a performance optimization and warnings are from rubocop  It s not related to Ruby 2 6 compatibility at all  x000D \n", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the reviews  x000D \n x000D \nI have dropped  32695  ff0af71 and 48d1c48 from this pull request changing  rubocop yml x000D \nAlso backported  32938 to 5 2 stable to support Ruby 2 6 new Range behavior  x000D \n", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Cool   palkan  Could you share the motivation pressures behind running a separate cable server in the engine  vs using a single server and providing channels within the engine ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Could you share the motivation pressures behind running a separate cable server in the engine  vs using a single server and providing channels within the engine  x000D \n x000D \nSeparate cable server allows you to  x000D \n  use a different set of identifiers x000D \n  use a different authentication strategy  we perform   authentication   within a Connection class and   authorization   within a Channel class   x000D \n x000D \nMy particular use case is the following  I m building a Admin Console engine for the app  I d like to add real time functionality in the future  but I don t want to worry about whether the main app has its own cable  will there be any conflicts  etc   x000D \n x000D \nSo  I want an isolated  plug n play  way to add real time functionality to the app  just drop a gem and that s it  ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  So  I want an isolated  plug n play  way to add real time functionality to the app  just drop a gem and that s it  x000D \n x000D \nThat s an interesting idea  Would be interested in hearing how it turns out ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kaspth could you please put this one on your list too  ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Looks good  We ll just need a changelog entry and then squash your commits to 1  thanks ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kaspth Done  \ud83d\ude42", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kaspth Just a friendly reminder  Rebased and ready to be merged", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "On Wed  Feb 13  2019 at 7 22 Vladimir Dementyev  notifications github com \nwrote \n\n   kaspth  https   github com kaspth  Just a friendly reminder  Rebased and\n  ready to be merged\n \n  \u2014\n  You are receiving this because you are subscribed to this thread \n  Reply to this email directly  view it on GitHub\n   https   github com rails rails pull 34714 issuecomment 462960602   or mute\n  the thread\n   https   github com notifications unsubscribe auth ALpCsPjBEtgUFnTVUO3nqRJvQBjrbO0gks5vMz6hgaJpZM4ZUgja \n   \n \n   \n\u2014\nname en  \u201cYuzuru Nakamura\u201d\nname ja   \u4e2d\u6751 \u8b72\u201d\nmail   shnsprk gmail com \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hey oh   I thought there was something I needed to look into with this  which is why I kept procrastinating  but nope  it s all good  \ud83d\ude04\u2764\ufe0f", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Closing as duplicate of  34712 x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is not a duplicate of  34712  They are two separate classes  Would you like them combined into one PR ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  They are two separate classes  Would you like them combined into one PR  x000D \n x000D \nApologies they looked the same and had the same wording  I think it s better as one PR  at least until we have decided whether we want to accept the change into Rails ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Apologies they looked the same and had the same wording  I think it s better as one PR  at least until we have decided whether we want to accept the change into Rails  x000D \n x000D \nOk  do I modify  34712  or do I close and republish it  I am not sure how to modify  and existing PR ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "ES6 has a nicer shorthand for functions as object keys  x000D \n   js x000D \n  x000D \n  received data    x000D \n       \u2026 x000D \n     x000D \n x000D \n  received data    x000D \n       \u2026 x000D \n     x000D \n  x000D \n   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Need to declare variables with  const  or  let ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Would be great to drop jQuery from the examples too ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Don t need to wrap the return value in     s", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Here s how I d write the above example using my feedback above and adjusting the formatting a bit  x000D \n   js x000D \nconsumer subscriptions create   channel   ChatChannel   room   Best Room       x000D \n  received data    x000D \n    this appendLine data  x000D \n     x000D \n x000D \n  appendLine data    x000D \n    const html   this createLine data  x000D \n    const element   document querySelector   data chat room  Best Room     x000D \n    element insertAdjacentHTML  beforeend   html  x000D \n     x000D \n x000D \n  createLine data    x000D \n    return   x000D \n       article class  chat line   x000D \n         span class  speaker    data  sent by     span  x000D \n         span class  body    data  body     span  x000D \n        article  x000D \n      x000D \n    x000D \n   x000D \n   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Unrelated to your conversion  this example could use some freshening up  Here s a more realistic version extracted from Basecamp  x000D \n details  x000D \n x000D \n   js x000D \n   app javascript cable subscriptions appearance channel js x000D \nimport consumer from    consumer  x000D \n x000D \nconsumer subscriptions create  AppearanceChannel     x000D \n     Called once when the subscription is created  x000D \n  initialized     x000D \n    this update   this update bind this  x000D \n     x000D \n   x000D \n     Called when the subscription is ready for use on the server  x000D \n  connected     x000D \n    this install   x000D \n    this update   x000D \n     x000D \n x000D \n     Called when the WebSocket connection is closed  x000D \n  disconnected     x000D \n    this uninstall   x000D \n     x000D \n x000D \n     Called when the subscription is rejected by the server  x000D \n  rejected     x000D \n    this uninstall   x000D \n     x000D \n x000D \n  update     x000D \n    this documentIsActive   this appear     this away   x000D \n     x000D \n x000D \n  appear     x000D \n       Calls  AppearanceChannel appear data   on the server  x000D \n    this perform  appear     appearing on  this appearingOn    x000D \n     x000D \n x000D \n  away     x000D \n       Calls  AppearanceChannel away  on the server  x000D \n    this perform  away   x000D \n     x000D \n x000D \n  install     x000D \n    window addEventListener  focus   this update  x000D \n    window addEventListener  blur   this update  x000D \n    document addEventListener  turbolinks load   this update  x000D \n    document addEventListener  visibilitychange   this update  x000D \n     x000D \n x000D \n  uninstall     x000D \n    window removeEventListener  focus   this update  x000D \n    window removeEventListener  blur   this update  x000D \n    document removeEventListener  turbolinks load   this update  x000D \n    document removeEventListener  visibilitychange   this update  x000D \n     x000D \n x000D \n  get documentIsActive     x000D \n    return document visibilityState     visible     document hasFocus   x000D \n     x000D \n   x000D \n  get appearingOn     x000D \n    const element   document querySelector   data appearing on    x000D \n    return element   element getAttribute  data appearing on     null x000D \n    x000D \n   x000D \n    x000D \n x000D \n  details ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Let s bump this line up like in the other examples   x000D \n   js x000D \nconst chatChannel   consumer subscriptions create   channel   ChatChannel   room   Best Room       x000D \n  received data    x000D \n       data      sent by   Paul   body   This is a cool chat app     x000D \n    x000D \n  x000D \n   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This  Client Server Interaction  list could use more freshening up  Many of the items still refer to the old CoffeeScript based syntax ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " javan should we consider the people reading this guide to know JS well  Because I was definitely confused by this  bind   It s fine example of a quirk though  x000D \n x000D \n   js x000D \ninitialized     x000D \n  this update   this update bind this  x000D \n  x000D \n    x000D \n x000D \nI m also a little curious as to what you store in the  data appearing on  attribute ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m not sure what the target experience level is for this guide   bind ing that function allows the event listeners to be installed and uninstalled correctly  something that was done in the previous iteration using  jQuery s  namespaced  event syntax  http   api jquery com on  event names   which I also find confusing and requires some level of jQuery expertise to grok  x000D \n x000D \n img width  524  alt  screen shot 2019 01 03 at 10 48 08 am  src  https   user images githubusercontent com 5355 50647247 17a00080 0f46 11e9 852d ff1ad34ab9f8 png  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I believe we store a GlobalID in  data appearing on  corresponding to the primary DB record on the page  e g  a  Todo  or  Message  ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "True  that jQuery isn t exactly easier to understand  Let s just keep the  bind  and see how it goes \ud83d\udc4d ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "There was also a snippet below the list that was still coffee syntax  I think that s all of them now  thanks  ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for reviewing   javan  I think I ve addressed all your comments  \ud83d\ude00 ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udc96", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " tt ActiveRecord  LogSubscriber  tt  exposes  a  simple interface", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thx  gmcgibbon  this is now fixed    it s always good to have some native speaker s feedback in PRs like this one  Anyway  this also made me realize that we should refer to  ActiveSupport  LogSubscriber  rather than  ActiveRecord  LogSubscriber ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I would also change this to  instrumented code  raises  an exception ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " gmcgibbon I applied your suggestions  Let me know if something else needs updating before this one can be merged", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "When testing the code sample  I don t see the subscriber actually output anything  This is because we re not calling any logging methods and just returning the strings  which is wrong  This is also present in the previous example  so I d rather be consistently wrong for now  I ll fix this in a followup PR ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you clarify this value to  Object ID of the connection object  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you change this value to  SQL statement name  ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Try this  x000D \n    x000D \n  x000D \n  sql   SELECT   posts     FROM   posts   LIMIT     x000D \n  name   Post Load   x000D \n  connection id  70161465984040  x000D \n  connection    ActiveRecord  ConnectionAdapters  SQLite3Adapter 0x00007f9f7a838850   x000D \n  binds     ActiveModel  Attribute  WithCastValue 0x00007fe19d15dc00    x000D \n  type casted binds   11   x000D \n  statement name  nil  x000D \n  x000D \n   ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  updated ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " gmcgibbon sorry for the late response     xmas business  christmas tree   x000D \n x000D \nUpdated your suggestions  Although not sure about the example as I wasn t able to reproduce meaningful values in my rails project ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Closing in favor of 287920ca7d06c8f51198ec750d65ba703835b257 ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kamipo is not that commit only taking care of the tests  This PR also changes the code ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "hmm    This PR changes the code  but I heard the intent of this PR in person at a meetup in Tokyo  x000D \nHe tried to run Rails test suite on the docker compose and then found the problem  x000D \nSo I thought that the intent of this PR would be solved by that commit  x000D \n x000D \nhttps   blog agile esm co jp entry rails oss patch meetup 20190124 x000D \n x000D \nhttps   blog unasuke com 2018 run rails test on docker compose  x000D \n x000D \n", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I see  So it is fine", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Let s illuminate this a bit  e g  fetch multi  names  returns its results in the same order as the  names requested  rather than returning cache hits followed by cache misses ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Tried grokking this over multiple attempts  but I find the two maps quite confusing since we seem to do similar yet different processing  x000D \n x000D \nWhat if we kept some of the old flow ala this  x000D \n x000D \n   ruby x000D \ninstrument  read multi  names  options do  payload  x000D \n  reads   read multi entries names  options  x000D \n  payload  hits    reads keys x000D \n  payload  super operation     fetch multi x000D \n x000D \n  writes       x000D \n  ordered   names each with object     do  name  hash  x000D \n    hash name    reads fetch name    writes name    yield name   x000D \n  end x000D \n x000D \n  write multi writes  options x000D \n  ordered x000D \nend x000D \n    x000D \n x000D \n Probably ends up needing to be  yield name    Psst  also a nice case for  index with   but we can t use core extensions here  ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "By default it will also create migration file with add column line  We could have another migration action  in the generator  such as  add indexed  to generate only  add index  section  in the migration file   This saves time and pointless typing if you need just to index a column in a table ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    add index  to      on        might make sense for that use case  To me   add indexed column to table  infers adding a new column too ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I agree      add index  to      on        reads better   index  can also be used as a verb   rails generate migration index table on column   What do you think ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thinking further on this  I believe  add column index to table  or  remove column index from table  makes the most sense  The problem I m having with justifying this feature is we don t want to step on the existing standards of the migration generator  x000D \n x000D \nThis means two things  x000D \n x000D \n  Placing the column name first and the table name second is expected  x000D \n  Adding code to the migration without specifying a column parameter is unexpected  x000D \n x000D \nColumn parameters already have a syntax to include indices  so I don t see a good way to make this work ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you Gabbon for the clarification and your time  I ll close this pull request  ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you add parenthesis to the lambda parameter and remove the extra spacing on the array to be consistent with the rest of the page ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I don\u2019t think \u201ctry to avoid this to keep things simple\u201d cuts it for a guide  then we may as well just leave this to the documentation on the CollectionCache module ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "In that case  we can probably just remove the  try to avoid this to keep things simple  part ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m also trying to get at a larger point  Guides are meant to present an overall concept  like a kind of story  and not just every obscure feature under the sun  x000D \n x000D \nI m leaning towards no for this inclusion   fxn usually knows more about the Guides voice  so I d like to hear his opinion too ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Updated  x000D \n x000D \nOk  I get your point  But could you point me to a better place to get this better documented   exposed  I really had trouble to find the documentation about it      cry  ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yep  it was difficult to document in the first place  I added it to the CollectionCache module or the cache helper docs and I think I did mention the callable cache option  Feel free to suggest a better place to keep those docs \ud83d\udd96", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think this should be commented and I d explain why you should not deploy with this just after the upgrade ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Also  should not the Parameterized job keep enqueing with the old job when this config is false  Otherwise the Rails 5 2 app will not be able to run the new job if it a old worker gets it ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Oh  that s right  I think I can add a conditional to fix that in the parameterized message delivery class ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Don t we have a  config action mailer delivery job  scope  Seems odd and off that we resort to  on load  here ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "For another PR  this should probably also be commented out ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This message seems needlessly shouty  Perhaps we could borrow the wording from the cookies with metadata setting  x000D \n x000D \n    x000D \n   Embed purpose and expiry metadata inside signed and encrypted x000D \n   cookies for increased security  x000D \n   x000D \n   This option is not backwards compatible with earlier Rails versions  x000D \n   It s best enabled when your entire app is migrated and stable on 6 0  x000D \n    x000D \n x000D \nOr perhaps we should add a section for  toggle once upgrade is stable   backwardsincompatible  configs ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I thought  config action mailer delivery job    didn t work for some reason in my sample app  but it appears to now  Probably  spring  playing tricks on me ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve combined the wording and tried to make it sound less like I m yelling \ud83d\ude1b ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is making ActiveJob be loaded on boot  Can we set the name as string and transform in a constant in the  on load  hook of  action mailer  ", "annotation": {"notes": "", "label": ["acknowledgement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\u2702\ufe0f ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It\u2019s not obvious reading this as a user to understand why I\u2019d want to switch  This option is also different from the other ps in that we intend to remove the old job in Rails 6 1  no  x000D \n x000D \nIt should also be commented out by default ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve commented it out  and I ve added that the standard delivery job will be removed in 6 1  Is that and the deprecation warning when mail jobs are performed is enough ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Great  thanks ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "No reason to keep the initialize method after this ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  Also  can you add a test case    ah my comment is duplicated with the above ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Makes sense  Will do ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Not sure how to feel about this  But well  go ahead ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "consider https   help github com articles creating a commit with multiple authors   ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " abhisheksarka it s great that you want to contribute  but unfortunately you ve hit a somewhat unspoken truth in open source  it s not just about the code  but also how the code gets contributed  x000D \n x000D \nWhich brings us to how to attribute credit to a change  And sidestepping  tbuehlmann after  rafaelfranca specifically asked him to open a PR  copying his suggested patch without at least an attempt to also give credit leaves a sour taste for the PR context  x000D \n x000D \nAs such  I ve decided to let  tbuehlmann take over in his own PR first and should that stall we can put it up for grabs  Thanks ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " tbuehlmann Go ahead man  my bad to begin with   kaspth Just started with the rails source code and thought of taking up the small stuff so came across this PR  Did not give a lot of thought to how it is being contributed  Will keep this in mind going forward", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What is the intent of the test  It is the duplicated name with L12 and the duplicated assertions with L68 L74 ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83e\udd26\u200d\u2642\ufe0f My mistake  I forgot to remove this ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "missing the     before the     ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Is this a public API method  If yes  it needs to be documented ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sign codeclimate  We use assert not over refute  can you update   https   codeclimate com github rails rails pull 34680", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Built patch against master  new PR at https   github com rails rails pull 34679", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think this should be a constant ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " gmcgibbon  x000D \n x000D \n  Please add tests and a changelog entry   x000D \n x000D \nThanks  will do x000D \n x000D \n  You should also be submitting PRs to master  x000D \n x000D \nI also submitted a patch for 5 2 stable  https   github com rails rails pull 34675   should I just make this change in master instead and close these two PRs  x000D \n x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We can backport the original commit if it looks the same  You should be able to  change the base branch  https   help github com articles changing the base branch of a pull request   of this PR to master and close the other one ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "OK   the relevant file https   github com rails rails blob master activerecord lib active record relation where clause rb changes from 5 1 to 5 2  so my 5 2 stable patch  https   github com rails rails pull 34675  is closer    x000D \n x000D \nI changed its base branch to master  but now it says 562 changed files instead of my 3  is that expected  x000D \n x000D \nSorry for all the questions  first time trying to submit a patch  x000D \n x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "On second thought  that s probably because I built the patch off of 5 2 stable   I should do it over based on master  correct ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Built patch against master  new PR at  34679 x000D \n x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hmm  I created my branch off of 5 1 stable  and I only changed one file   activerecord lib active record relation where clause rb x000D \n x000D \nDid I do the PR wrong  x000D \n x000D \n", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Created PR against wrong branch", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca Should I also update the  Discarding Files Stored During System Tests  section  It is somewhat different  in that it is defining methods in  ApplicationSystemTestCase   not overriding methods in  ActionDispatch  SystemTestCase  x000D \n x000D \n  Discarding Files Stored During System Tests x000D \n                                              x000D \n   x000D \n  System tests clean up test data by rolling back a transaction  Because destroy is never called on an object  the attached files are never cleaned up  If you want to clear the files  you can do it in an  after teardown  callback  Doing it here ensures that all connections created during the test are complete and you won t receive an error from Active Storage saying it can t find a file  x000D \n   x000D \n     ruby x000D \n  class ApplicationSystemTestCase   ActionDispatch  SystemTestCase x000D \n    driven by  selenium  using   chrome  screen size   1400  1400  x000D \n   x000D \n    def remove uploaded files x000D \n      FileUtils rm rf    Rails root  storage test   x000D \n    end x000D \n   x000D \n    def after teardown x000D \n      super x000D \n      remove uploaded files x000D \n    end x000D \n  end x000D \n      x000D \n x000D \nAlternatively  rather than prepend onto  IntegrationTest   we could follow this pattern and define an  ApplicationIntegrationTest  or similar  Either way  I m just concerned about the dissonance between them ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That one is correct since it is defining a method in the subclass ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m wondering if isolation tests will run for pull requests  x000D \n x000D \nhttps   github com rails rails blob e8cd301118f83a31e091746b4d2589666d3e8989 ci travis rb L161https   github com rails rails commit c7f0cd6a79e6ee060df982dc0834365b63e53a2c", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since the isolation test is not executed in PR  please remove that line temporarily   x000D \n I have verified it like that before https   github com rails rails pull 33858 commits 1f5ce315d9c154748b14abcdb95272ec51dff9b5 diff 27e95f7635d95669e2d17c7b6a1bfb93L161   x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "GEM ar postgresql with Ruby2 5 1 isolation tests also have passed https   travis ci org rails rails jobs 466265155 x000D \n x000D \nLet me revert ac7dbaf611b60007451deb5b4f6dd140dda43d4e", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  the current version is correct  Its speaking about the submit helper and not the headings ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This seems to break record marshalling  I think we can t have a mutex instance as ivars of  ActiveRecord  Base  instances ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fix  34615", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Rails don t support sharing the same instance of ActiveRecord  Base between two threads  This can t be safe since any state inside that object would need to have need a mutex ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think you can do  to h blank   here instead  They perform roughly the same  x000D \n x000D \n    x000D \nWarming up                                        x000D \n           each pair    25 234k i 100ms x000D \n                to h    25 415k i 100ms x000D \nCalculating                                       x000D \n           each pair    286 275k  \u00b1 8 6   i s        1 438M in   5 056711s x000D \n                to h    319 401k  \u00b126 5   i s        1 398M in   5 090246s x000D \n x000D \nComparison  x000D \n                to h    319400 8 i s x000D \n           each pair    286274 9 i s   same ish  difference falls within error x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is probably why we don t include  OpenStruct    ostruct  isn t required by default  In order to use   blank    we now have to load  OpenStruct  only to monkey patch it  ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Struct and OpenStruct are both subclasses of object so they already respond to  present   and  blank    As such  changing the return values of these methods is a breaking change \u2014 one that doesn t have enough benefit to go through with   x000D \n x000D \nBesides  it doesn t make sense to me that  OpenStruct  should be treated like a hash  OpenStruct is a short circuit for a class  not just a hash wrapper  x000D \n x000D \nThanks for the consideration ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Please forgive my initial omission of the   ci skip   decoration on the commit message ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hi  we just ran into the issue in https   github com rails rails issues 34646 after upgrading an app to 5 2 2 x000D \n x000D \nI m glad to see that it s fixed in the upcoming 6 0 release  but just wanted to ask if 5 2 x is closed for changes  or if there will be another patch release in the 5 2 x series  If there will be another 5 2 x patch release  could it include a backport of this PR ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It seems that  y yagi is already working on this ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "How about expanding it for all classes  x000D \n x000D \nOriginally we had two class evals for   w  Symbol Slash Literal Dot    and   w  Cat Group Star Or     x000D \nhttps   github com rails journey blob 0dfe8ba78e9ab31a985412c2275781a0c0376553 lib journey nodes node rb x000D \n x000D \nBut now one class eval for   w  Cat Group Star Or    is already expanded at https   github com rails journey commit bc37b94050c09f13b6bd782d551f59ba492feebc  x000D \n x000D \nThe remaining one class eval for   w  Slash Dot    is over meta programming to me ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think it is a great suggestion  I m definitely applying this  Changes done and squashed ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    nodoc  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "ditto ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "OMG  so true  thanks for double checking \ud83d\ude4f ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "CI failure seems related to webpack installation and not to this PR s code ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ll make these test method names longer ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Perhaps this is a mistaken approach  x000D \n String to f  does strip trailing non numeric parts of a string  but also truncates it to  Float  DIG   Usually 15 by default  which probably goes against the reason we d use  BigDecimal  or   to d  in the first place  x000D \nIf so  it would be better to let  BigDecimal  and   to d  do their thing and only modify the test to check  str respond to   to d   and handle accordingly  x000D \nAnd if so   34612 should be reverted and modified in the same way ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Closing this since  34719 is fixed by https   github com ruby ruby commit ccdba542d3f765895a23f32fd2905add935b7a19  x000D \n x000D \nhttps   bugs ruby lang org issues 15426", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " javan may I ask you to take a look at this ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "lgtm ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I am finding that the text from  disable with  is not reverting to the  a  text for a successful Ajax response e g   disable with   Working      is remaining as  Working     regardless of outcome ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "If you could open an issue with reproduction steps feel free to tag me and I ll take a look   1  ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Apologies  my project was locked on an older version of rails ujs  Works as expected ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This would make nested calls to  while preventing writes  surprising    x000D \n x000D \n OTOH  if the existing behaviour is worth preserving  I guess it d also be worth a test  ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "In GH s version we actually pass in true false as an argument to the method which I thought was weird  Now I m thinking that maybe it s not weird  Will revert this change and work on some tests to figure out what behavior I actually want ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " InvalidWriteOnReader  maybe ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Maybe just  ReadOnlyError    Or  PermissionDeniedError   x000D \n x000D \n    x000D \n  irb x000D \nirb main  001 0  require  fileutils  x000D \n   true x000D \nirb main  002 0  FileUtils touch  test txt  x000D \n     test txt   x000D \nirb main  003 0  FileUtils chmod 0444   test txt  x000D \n     test txt   x000D \nirb main  004 0  File write  test txt    hello  x000D \nTraceback  most recent call last   x000D \n        5  from  Users aaron  rbenv versions ruby trunk bin irb 23 in   main   x000D \n        4  from  Users aaron  rbenv versions ruby trunk bin irb 23 in  load  x000D \n        3  from  Users aaron  rbenv versions ruby trunk lib ruby gems 2 6 0 gems irb 0 9 6 exe irb 11 in   top  required    x000D \n        2  from  irb  4 x000D \n        1  from  irb  4 in  write  x000D \nErrno  EACCES  Permission denied   rb sysopen   test txt  x000D \nirb main  005 0   x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " ReadOnlyError  is good to me ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " 1  ReadOnlyError  x000D \n x000D \n    x000D \n  irb x000D \n 1  pry main      freeze       x000D \nFrozenError  can t modify frozen String x000D \nfrom  pry  1 in   main   x000D \n   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you for the pull request but this seems to be a feature to Ruby  not Rails  Have you tried to request there ", "annotation": {"notes": "", "label": ["offer"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hello  x000D \nI think  Object extend  works exactly in the same  way  as your  include  method  x000D \nsee http   ruby doc org core 2 5 3 Object html method i extend", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca I d love to  but it seems contributing to Ruby isn t quite as simple as dropping a PR on their github repo  so I m not sure where to start with that ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " bogdanvlviv Not exactly  It does pretty much the same thing  but it calls  extended  instead of  included   which means Concerns don t work the same  see my example in the description   This is also another reason why I thought it would be best to add it to Rails instead of Ruby  because the utility is mainly for using it with Concerns", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "For consistency  how about moving the new gsub to  quote table name   x000D \n x000D \nhttps   github com rails rails blob 647665110f49935b30e29ac09ecfca3701e76041 activerecord lib active record relation query methods rb L1057 L1058 x000D \nhttps   github com rails rails blob 647665110f49935b30e29ac09ecfca3701e76041 activerecord lib active record connection adapters mysql quoting rb L11 L13", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Done  Good catch", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think calling it  GZipping your assets  might be best  and then adding some text below the code block addressing how to actually serve gzipped assets  Something like  Refer to your web server s documentation for instructions on how to serve gzipped assets   maybe ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yes  this sounds good to me  I will make a change and push it today   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " gmcgibbon Just squashed the commits   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What is  Storage   And  presuming  Storage  exists somehow  how do the token and email values get defined  x000D \n x000D \n img width  362  alt  screen shot 2018 12 05 at 9 43 55 am  src  https   user images githubusercontent com 5355 49520929 4d33ca00 f872 11e8 9366 6b1e692e6792 png   x000D \n ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  When using the actioncable javascript package  if you want to pass an authorization token you need to do so when creating the cable consumer  x000D \n x000D \nWhen would you use an authorization token instead of the Rails session ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hey uh  so it looks like he pretty much copy and pasted my example code https   github com rails rails issues 33064 x000D \n x000D \nin my code I have a custom wrapper over  window localStorage  that uses a polyfill for older browsers and I call it  Storage    I appreciate the initiative but this solution is not extensible  is using a hardcoded value for token and email  and is modifying the object prototype which is pretty hacky  This is a measure I took in my codebase to add this functionality since it wasn t in Rails itself  We could likely find a much better solution than my little hack  x000D \n x000D \nI am happy to submit a PR to actually add this functionality now that the codebase is in JS  but I guess I will ask first if  evexoio wants to fix this first ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " audiolion please take on this issue \ud83d\ude4c x000D \n x000D \nIt was an old issue so I decided to take it on \ud83d\ude48", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "How about using String to manage  direction  and remove  to sym  call    x000D \nWe treat other env values as String  and it seems that the more consistent it is  x000D \n", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "LGTM  Could you please squash your commits into a single commit  x000D \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " ysksn Thanks ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Those are fine since they are in the  test helper rb  and it is after the  require relative     config environment    Only gems and code that is loaded before that require that needs to use the  on load  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This documentation is wrong because we are overriding the  after teardown  defined by  IntegrationTest   We need to define a module and prepend on  ActionDispatch  IntegrationTest  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This one is also fine ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca Based on your review  it seems like these are all correct and should   not   be changed to use  on load   x000D \n x000D \nI guess this PR can just be closed then  \ud83d\ude05 ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I d fix the guides source active storage overview md since it is wrong ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ahh  I see  I misunderstood  x000D \n x000D \nClosing in favour of https   github com rails rails pull 34670  since the change proposed in this PR won t be happening ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think we can just name this  monotonic ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Does it make sense to name this  ProcessClock  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This doesn t return  Process  CLOCK PROCESS CPUTIME ID   so I d rather name this something else  Maybe  process time   I think  this  https   stackoverflow com a 7506987  breaks down the difference between constants correctly ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yeah  seems It ll be better to name it  ProcessClock ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Don\u2019t think adding a top level file constant is needed  Let\u2019s just revert this change ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can we use a CPU clock here given we may be waiting for IO ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yes  you can ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "You are right  those changes are unnecessary  It might make sense only if we have at least two cases where we use  Process clock gettime Process  CLOCK PROCESS CPUTIME ID   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the review  x000D \n x000D \nI like the idea of preventing spreading conditions that provides support for other platforms in the codebase  but I m not sure whether extending of  Time  class is a good idea  I think would be better just to create a private module with methods that would work on platforms we want to support  x000D \n x000D \nPlease let me know what do you think about https   github com rails rails pull 34618 commits dc424fd37beaa169d80423d3e8bbd63c61981e02 ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udc4d Please squash your commits ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sure  I just squashed them ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  1   Time now  is a lot more readable than  Process clock gettime Process  CLOCK MONOTONIC    Would it be a good idea to add a new method to  Time  instead of typing this everywhere  x000D \n x000D \nWe could also use  Concurrent monotonic time  which is already used in Active Record  x000D \n x000D \nhttps   github com rails rails pull 31221 files diff c226a4680f86689c3c170d4bc5911e96R108", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  We could also use  Concurrent monotonic time  which is already used in Active Record  x000D \n x000D \nSince we already use  Concurrent monotonic time   it looks like a better idea  Thanks for the tip ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think this is a step in the right direction  It s silly for newbies  and grizzled vets  for that matter  to fight with this behavior that is a predominantly production security concern while developing an app locally  I ve updated my  raise  by default PR  32206  hopefully it makes it into 6  too  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Why not  BigDecimal 0   ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " BigDecimal  0    returns the same value as  BigDecimal 0     0 0   If this is what we want  we can tweak the test  x000D \n x000D \nI understand from the  test  https   github com rails rails blob master activesupport test xml mini test rb L285  that we expect  BigDecimal  123 003    to return  123 0   and to do that we need to pass it a cleaned up string ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ok  I got it  Before  BigDecimal  123 003    did not raise and now it does ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Exactly  x000D \nThank you ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  association destroy all  returns records  not count  x000D \nHow about using   association destroy all tap   reset scope    to not care about what is returning ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  association delete all dependent   doesn t return count  not guaranteed  almost nil   x000D \nHow about using   association delete all dependent  tap   reset scope    to not care about what is returning ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "any suggestions on how to refactor this line    x000D \ncouldn t think of anything cleaner", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think you can just do  enum scopes nil     enum scopes ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This probably doesn t need to be here  \ud83d\ude04 ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  scopes can be disabled   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Better to change this to  if enum scopes    false ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "ok   will do", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Shouldn t this be  klass proposed    which is the scope   x000D \n x000D \n", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "fixed it   \ud83d\ude04 ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "i just gave this a try    rafaelfranca kindly check this out and maybe i can work on making some changes if necessary", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This looks correct to me but we should have a test I think  that way we can confirm it will not regress  params with the name   enum  etc  end up being prime candidates long term for removal cause they do not feel quite right starting with     is usually reserved for ignored vars  ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " SamSaffron added a test   Not sure if that would suffice  Actually caught a case which i missed which would be the default case while adding the test  ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sure   just a min", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "should i add this to the CHANGELOG ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udc4d for a changelog entry", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you so much ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "congrats  alfie max on getting your first Rails PR done  Thanks ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "thanks  SamSaffron  \ud83d\ude04 ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " guizmaii  rafaelfranca Just an FYI  I m not sure whether this is supposed to be a breaking change for Rails 6  but 3rd party libraries that serialize  ActiveSupport  Notification  events do actually have issues serializing the  sql active record  event because the   connection  value  a complex Adapter object  doesn t serialize well  particularly with JSON  x000D \n x000D \nEasiest way to replicate this is with  rails new test app   x000D \n x000D \nGenerate a model with  rails g model Article title string   then  rake db create    rake db migrate   x000D \n x000D \nSet the following in the Gemfile  then  bundle install   x000D \n x000D \n   ruby x000D \ngem  rails   github   rails rails   ref   6d1c9a9b23579d13b7cbdd3217ed2cfcc300e06e  x000D \n  A 3rd party library that attempts to serialize  sql active record  to JSON x000D \ngem  meta request  x000D \n    x000D \n x000D \nThen run in  bundle exec rails c   x000D \n x000D \n   ruby x000D \n2 5 1  001   Article count x000D \nTraceback  most recent call last   x000D \n        1  from  irb  1 x000D \nSystemStackError  stack level too deep  x000D \n    x000D \n x000D \nWhich comes from calling  to json  against    ActiveRecord  ConnectionAdapters  SQLite3Adapter 0x000055a9e6e28a98    which is the value for   connection  in the  sql active record  event per this PR  x000D \n x000D \nStack trace looks like  x000D \n x000D \n    x000D \n activesupport 5 2 2 lib active support core ext object json rb 171 in  block in as json  x000D \n activesupport 5 2 2 lib active support core ext object json rb 171 in  each  x000D \n activesupport 5 2 2 lib active support core ext object json rb 171 in  map  x000D \n activesupport 5 2 2 lib active support core ext object json rb 171 in  as json  x000D \n activesupport 5 2 2 lib active support core ext object json rb 56 in  as json  x000D \n activesupport 5 2 2 lib active support core ext object json rb 171 in  block in as json  x000D \n activesupport 5 2 2 lib active support core ext object json rb 171 in  each  x000D \n activesupport 5 2 2 lib active support core ext object json rb 171 in  map  x000D \n activesupport 5 2 2 lib active support core ext object json rb 171 in  as json  x000D \n activesupport 5 2 2 lib active support core ext object json rb 56 in  as json  x000D \n activesupport 5 2 2 lib active support json encoding rb 35 in  encode  x000D \n activesupport 5 2 2 lib active support json encoding rb 22 in  encode  x000D \n activesupport 5 2 2 lib active support core ext object json rb 41 in  to json  x000D \n meta request 0 6 0 lib meta request event rb 42 in  block in json encodable  x000D \n    x000D \n x000D \nIf the consensus is  non serializable objects are permitted in these args  3rd party libraries have to change accordingly  then we can probably ignore this as a breaking change ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This assertion actually would be failed without Ruby 2 6 0 if bigdecimal 1 4 0 pre 20181130a is used  x000D \n x000D \nhttps   github com rails rails blob e7717ec7a09ca83f92a9819303f7a93e038a2679 activerecord lib active record relation calculations rb L400 L405 x000D \n x000D \nHow about checking  nil respond to   to d    x000D \n x000D \n   diff x000D \n    a activerecord test cases calculations test rb x000D \n    b activerecord test cases calculations test rb x000D \n    57 8  57 12    def test should return integer average if db returns such x000D \n     assert equal 3  value x000D \n   end x000D \n  x000D \n   def test should return nil as average x000D \n     assert nil NumericData average  bank balance  x000D \n   def test should return nil to d as average x000D \n     if nil respond to   to d  x000D \n       assert equal BigDecimal 0   NumericData average  bank balance  x000D \n     else x000D \n       assert nil NumericData average  bank balance  x000D \n     end x000D \n   end x000D \n  x000D \n   def test should get maximum of field x000D \n   ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Makes sense  Thanks for helping out \ud83d\ude4c", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you investigate why  NumericData average  with Ruby 2 6 returns 0 0 ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kamipo Sure  that s what I m doing right now  x000D \n x000D \nhttps   github com rails rails issues 34600 issuecomment 443649497", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kamipo This should be the commit that caused this issue  https   github com ruby ruby commit a0e438cd3c28d2eaf4efa18243d5b6edafa14d88 diff 6b866d482baf2bdfd8433893fb1f6d36R144 x000D \n x000D \nWhat s the right action to take right now ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think this should still return  nil   Can someone fix it ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m on it  rafaelfranca ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think  loading the schema  into  the database for each process  might read slightly better here ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m not sure  NewDeliveryJob  is the best name  We don t want users to have to change the constant name back after we fully remove  DeliveryJob   and after a few years  NewDeliveryJob  will be a strange name cause it s not new anymore   What about a name that better describes the roll of this job AND has the new code like  MailDeliveryJob  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sorry missed this on the first round of review   I think  params  should be  nil  by default right  Since parameter jobs are a special kind of job ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Since  Parameterized  DeliveryJob  isn t released yet can we instead deprecate just  DeliveryJob  and then recommend the new one  If you need the  params  key then you should use the new one ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "My plan was to deprecate  NewDeliveryJob  and rename to  DeliveryJob  in  6 2  or  7 0  but that will also cause problems for people that upgrade multiple versions at a time  I ll rename to  MailDeliveryJob  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I removed  Parameterized  DeliveryJob  from the warning  but the warning will still happen for parameterized delivery jobs because its a subclass  I assume this is good enough ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I was thinking that  Parameterized  DeliveryJob  has never been released so we can delete the code that supported  Parameterized  DeliveryJob  and anyone who needs a  Parameterized  DeliveryJob  would use the new  MailDeliveryJob  instead  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think it is released in all versions since   5 1 0   https   github com rails rails blob v5 1 0 actionmailer lib action mailer parameterized rb L146 ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ah I see I was thinking of this PR https   github com rails rails commit 251b9d4bd62bfc076969bd0751fa4cc6e95a4f33 which is only in master  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This should say  MailDeliveryJob  now  Also let s add back in the Paramertized deprecation since I was wrong about when it was added ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It looks like this one mention of  NewDeliveryJob  stuck around even though most others were updated to  MailDeliveryJob  instead ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixed  Thanks", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Don t we need to add back  Parameterized  DeliveryJob   Otherwise it will fail if a Rails 6 worker get a job enqueued in Rails 5 2 ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ah  just saw it ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  I think if the code isn t deprecated until 6 1 and the jobs work in 6 0 then we don t need a backport  x000D \n x000D \nI m fairly certain that  depending on the number of job workers you have  and your infrastructure  there can be big delays in waiting for all workers to be updated to the latest deployed version of an app  I believe I ve seen an old job worker pickup a job enqueued from a new web worker before  Doesn t this mean we should backport  MailDeliveryJob  to a 5 x release ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Do these tests need to reset  ActionCable adapters WebSocket  to its original value ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I believe that s handled by the  testDone  hook that you added in https   github com rails rails commit 410a32ffbdfa45aeee2c8ec0137201d3b95a33ff diff 3f28927c13290f07f1f5db8933b6f74c  x000D \nhttps   github com rails rails blob aa1ba9cb244b1e03d36aaa941ae4e91c6713b77e actioncable test javascript src test helpers index js L9 L10 x000D \nor am I misunderstanding ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Oh right  glad I thought of that already  \ud83e\udd26\u200d\u2642\ufe0f", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udc4c This is the correct way to use Yarn Workspaces  AFAIK  We have the same setup for https   github com stimulusjs stimulus  a single  yarn lock  at the root  and individual  package json s for each workspace ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Let s make sure  yarn lock  is up to date and CI is happy now that https   github com rails rails pull 34370 is merged  Can you please rebase and run  yarn install  once more  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "https   github com rails rails pull 34370 didn t add any dependencies  so there are no changes when I rebase and run  yarn install   Do you want me to push that anyway ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yes  please  I want to make sure actioncable s tests still pass on CI  Can t hurt to rebase ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sounds good  It s rebased and passing", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "When I run  yarn install   I get a pretty big  yarn lock  diff  https   gist github com javan 1e3b5d9805a5ac072ee9c12ea0bc43e6", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Hmm  do you know what these entries are for in the workspaces configuration  x000D \nhttps   github com rails rails blob aa1ba9cb244b1e03d36aaa941ae4e91c6713b77e package json L7 L9 x000D \nAfter running x000D \n    x000D \nrm  r tmp templates app template railties test fixtures tmp x000D \n    x000D \nto delete those directories and rerunning  yarn install   I get a diff as well  wasn t able to get a diff before doing that   x000D \n x000D \nIt seems like these directories are also untracked by git which means that you could have stale files in there which cause the root  yarn lock  to be generated differently  I m inclined to think they shouldn t be configured as workspaces  but I don t have all the context to know for sure  x000D \n x000D \nFor now  I ll push the  yarn lock  that was generated after removing those directories from my local environment ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It seems to have originated from this commit  x000D \nhttps   github com lsylvester rails commit b801b0817ddaf20f28fbc3dec2fb9a3f867e7d36  part of https   github com rails rails pull 33640  a sub PR of the larger https   github com rails rails pull 33079   x000D \n x000D \n lsylvester commented in https   github com rails rails pull 33640 issuecomment 422645699 about some tests potentially requiring the workspaces configuration  but I m not sure if that included these lines https   github com rails rails blob aa1ba9cb244b1e03d36aaa941ae4e91c6713b77e package json L7 L9 x000D \nor if https   github com rails rails blob aa1ba9cb244b1e03d36aaa941ae4e91c6713b77e package json L4 L6 x000D \nis sufficient  x000D \n x000D \n lsylvester  if you re able to provide more context that d be great  Otherwise  I would suggest we try removing the  tmp  directories from the workspaces configuration and see if the tests pass ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " 1 for removing those entries  Test   tmp directories shouldn t be workspaces ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "HI  javan   rmacklin  x000D \n x000D \nI can provide some context as to why I added the tmp directories into the workspaces  x000D \n x000D \nAt the time   we were getting errors in the railties tests that generated applications and then needed to compile the assets as the versions that the were being required  which were based on the  Rails  VERSION  hadn t been published  x000D \n x000D \nI added in the yarn workspaces in order to allow the Rails application that were generated in the tmp directory visibility of the different required packages  Without the tmp directories in workspace the generated rails applications didn t have visibility of the unpublished packages  x000D \n x000D \nSince then  the version of the packages that is required was relaxed  https   github com rails rails pull 33079 commits fbd45978effd8d83a29f95493c59e3e715ceca76  to  include published versions  This was done after a discussion about the differences in the versioning schemes between npm and ruby gems where  Rails  VERSION  STRING  could not be directly used  x000D \n x000D \nI am not sure what version of the packages was being used in the tests prior to this being merged  ie latest on npm or alpha version that is in the rails repo  but I think that without the tmp directories in the workspace  it will be the 5 2 X versions  I don t know if this is an issue as long as any issues get picked up in the prerelease  All the railties tests are doing are ensuring that the packages can compile  so I think this is unlikely to be an issue unless something is seriously broken  x000D \n x000D \nI don t think that the workspaces are currently providing any value  but expect that that might change once ActionText is merged  as it depends on the ActiveStorage package  x000D \n x000D \nI hope that that clears some things up  x000D \n x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks a bunch for the context  Given that   x000D \n x000D \n  Since then  the version of the packages that is required was relaxed   fbd4597  https   github com rails rails commit fbd45978effd8d83a29f95493c59e3e715ceca76   to include published versions  This was done after a discussion about the differences in the versioning schemes between npm and ruby gems where  Rails  VERSION  STRING  could not be directly used  x000D \n x000D \nit seems like you agree that we can remove the tmp directories from the workspaces  I opened a PR to do that here  https   github com rails rails pull 34630 x000D \n x000D \nI agree  that the workspaces should provide value when ActionText is merged  so I did  not  remove the workspaces configuration for the real  actioncable    actionview   and  activestorage  packages ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " marceloperini Thanks ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Could you explain what benefit these provide  They seem like something that should already be there inherited from the upstream base config ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This changes some of the default Descriptions from https   github com rubocop hq rubocop blob master config default yml  Is that desirable  I don t quite see the benefit  x000D \n x000D \nEdit  Oh I didn t see Matthew s question  I have the same question ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think you guys have a good point  Let s close this PR for now  Thanks for the comments \ud83d\udc4d ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Nitpick  Code examples in the changelog should have backticks for markdown code blocks ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I am triggering a form submit with javascript after a button click  and x000D \n x000D \n    x000D \ndocument querySelector  form   dispatchEvent new Event  submit     x000D \n    x000D \nworks perfectly fine with chrome and safari in terms of rails ujs  but with firefox I get a full page request after the ajax request   x000D \n x000D \nWill this also fix this issue  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " grant roy This doesn t fix that  but  Rails fire form   submit     should work  See https   github com rails rails issues 29546", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " gmcgibbon I ve tried that in several different configurations  but I always get Rails not defined on the page   I ve read through all the advice and issues with Webpack  which this issue seems to be related to  and nothing works   I ve upgraded everything and still Rails is undefined clientside  even when I can see it in the on page js   ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " grant roy If you can reproduce it on a dummy rails app  feel free to open a separate issue  Maybe its a minification issue ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " gmcgibbon I added tests around click events on links and buttons  x000D \nIf I should add more I m happy to so  but I d like to hear your feedback ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "CI fail was related to a timeout because the connection to the ujs server couldn t be established  x000D \n x000D \n   Travis CI  actionview x000D \nRunning command  bundle exec rake test ujs x000D \nTimed out after 5 seconds x000D \n x000D \nI am not sure why that would happen especially since I don t think editing the changelog affected that   laughing  The tests themselves are very similar to the ones checking the ctrl click behavior  I doubt they introduced the issue   confused  If I missed something I d gladly accept hints ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The implementation here looks reasonable in that it follows existing conventions  but\u2014pardon the following rant\u2014they are not good conventions  For example  this should not be implemented as 7 separate event listeners  x000D \nhttps   github com rails rails blob ef4ea9aded4e92467cd437da6df69412d37134db actionview app assets javascripts rails ujs start coffee L38 L44 x000D \nAnd   ignoring  an event should not cancel it or stop it from propagating  https   github com rails rails blob ef4ea9aded4e92467cd437da6df69412d37134db actionview app assets javascripts rails ujs features remote coffee L85 L90 x000D \n x000D \nInstead  there should be a single listener for a given event type   selector that  first tests the event for things like mouse button and meta key before acting on it  Here s a rough sketch using  a helper borrowed from Turbolinks  https   github com turbolinks turbolinks blob c340c42e2ece8c057aec611074971462a6e76c71 src turbolinks controller coffee L209 L218   x000D \n   coffee x000D \ndelegate document  Rails linkClickSelector   click    event     x000D \n  if clickEventIsSignificant event  x000D \n    handleConfirm event  x000D \n    handleRemote event  x000D \n    handleMethod event  x000D \n x000D \nclickEventIsSignificant    event     x000D \n  not   x000D \n    event defaultPrevented or x000D \n    event target isContentEditable or x000D \n    event which   1 or x000D \n    event altKey or x000D \n    event ctrlKey or x000D \n    event metaKey or x000D \n    event shiftKey x000D \n    x000D \n    x000D \nThat \ud83d\udc46 probably won t work as is  but I suspect it s not far off ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I m gonna hand this one off to you   guilleiguaran ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " javan Would you like to see that refactoring within this PR  x000D \n x000D \nE  I m open to adding this onto this PR  but I d prefer to do that seperately ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " WoH  perhaps you could start by combining your  handleNonPrimaryClick    handler with the existing  handleMetaClick     and renaming them appropriately   That way we re not adding yet another event listener  ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I incorporated feedback as far as the combining the two methods goes  Since we don t really handle anything except stopping propagation  using prevent in the method name sounded reasonable to me  x000D \nWe can use insignificant as a combination of non primary   some meta clicks here aswell  so I  borrowed  that name  laughing  ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Unless the patch is completely different we will apply the original commit manually without need for other PR  Thanks", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We don t accept changes in Rails 4 anymore  I m pretty sure this also happens on master  Care to change the branch to point to master ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "My question for the Rails expert here  why pass  connection id  and not  connection  in this event  If someone wants to get the connection object  then they have to use  ObjectSpace  id2ref connection id   which isn t performant or supported by platforms like JRuby  x000D \n x000D \nIf possible  I d like to see a change like this that exposes the connection object directly ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The id is just an identifier  We prefer to not pass complex objects in the instrumentation system since it can be distributed  Most apps don t use a distributed backend but passing complex objects in the framework make it harder  x000D \n x000D \nI think we should pass the connection name so the subscriber can use it to grab a new connection in for the same pool  I find it difficult that you need the exact same instance of the connection for an instrumentation ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "cc  tenderlove  matthewd I think we discussed something related to this before  x000D \n x000D \nBTW we have a similar implementation to get the connection name in our app but we don t use   id2ref   we loop through all connections to find the right now ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca Wasn t aware of the distributed nature  but that s a good consideration  x000D \n x000D \nYou re right though  at least in our use case  we don t use the connection object itself  we just want the connection so we can get its connection configuration  so we can extract  host    port    database    adapter   etc  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can t we use something like  ActiveRecord  Base connection handler  to access to these connection configuration   x000D \n x000D \n img width  1243  alt  screenshot 2018 11 30 10 32 51  src  https   user images githubusercontent com 1193670 49280839 66f89a00 f48b 11e8 9cb6 eaddb759e712 png   x000D \n x000D \n    x000D \n x000D \n Edit   x000D \n x000D \nIt seems that there s a better way to access to these connections  And we can even find the one we re looking for with the  object id  as we can see here  x000D \n x000D \n img width  1680  alt  screenshot 2018 11 30 10 37 47  src  https   user images githubusercontent com 1193670 49281265 6dd3dc80 f48c 11e8 9f5e 3cd254992471 png   x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I close the PR since I think I ve found the solution to our problem  x000D \n x000D \nI you have any comment about anything  I look forward for them   x000D \n x000D \nI m not a Rails expert at all  so maybe I m doing something wrong or maybe there an easiest way to access to these connections", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I don t think this solves the issue at hand  At least in my case  each time a  sql active record  event is fired  I want to record the  host    port    database  and other configuration name from the connection used  x000D \n x000D \nIf we had to loop through the entire pool of connections to compare   connection id  each time  sql active record  was fired  I suspect that would severely hurt performance  I would still suggest that Rails exposes some kind of connection information via the  sql active record  event that either simplifies or eliminates the need to do such searching ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "That loops doesn t hurt performance  trust me  Of course I agree we should expose something else that is not the id  The name would be ideal since you want the connection pool that the connection uses and you can get the connection pool using the name", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " matthewd just pointed out that we are already sending complex objects in the notification https   github com rails rails pull 22856  So we have precedent to add the connection  Can you open a PR against the master branch ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca Connection name would work just fine  I think  Thank you ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca I opened a new PR here https   github com rails rails pull 34602 x000D \n x000D \nThanks for your help     ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you  Please use   ci skip   next time in commits when you open a PR in documentations so CI won t run for those commits ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sure  will do  I have put   ci skip   in a few places actually  but it seems all the wrong ones    ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Use lazy load hook instead x000D \n x000D \n   ruby x000D \nActiveSupport on load  action dispatch integration test  do x000D \n  include SignInHelper x000D \nend x000D \n   ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Interesting  I hadn t come across this before  Is there much benefit here  since by this point  test helper  has required the Rails environment already  x000D \n x000D \nI can switch to this if it s the preferred pattern  but I basically just copied the code from earlier in the same guide  Should I switch it in both places ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  since by this point test helper has required the Rails environment already x000D \n x000D \nThat s fine  loading the Rails environment doesn t mean the ActionDispatch  IntegrationTest class was loaded   x000D \nAbout benefit  referencing constant too prematurely can lead to some bug that are hard to track down  so better to avoid it ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I would prefer this to say  Using Separate Files ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think there s an extra t in cluttering ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Should we be promoting using pathnames with  require  or appending the  lib test  to the   LOAD PATH  ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve never seen this used for test code  but I m not against it  In your test helper  its fairly safe to assume that  ActionDispatch  IntegrationTest  is loaded  I think ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "https   github com rails rails blob 5bb4546439ed20a864c6df18788dce0eb45d8326 railties lib rails test help rb", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yes  it is used in Rails   test help   I mainly mean I have never seen an app use that syntax in its  test helper   Above these changes  we recommend opening the integration test class directly in the sign in helper example  We also open  ActiveSupport  TestCase  in the  generated test helper  https   github com rails rails blob 5bb4546439ed20a864c6df18788dce0eb45d8326 railties lib rails generators rails app templates test test helper rb tt  ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I could open a follow up PR where I update all the places that re open  IntegrationTest  to be consistent  in this file  and in the generated test helper  ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sorry  Forgot to answer \ud83d\ude05    x000D \n x000D \nI think the generated test helper rb isn t up to date  but anyway using a lazy load hook for ActiveSupport  TestCase or even ActionDispatch  IntegrationTest isn t a big deal compare to using a lazy load hook for ActiveRecord or ActionController for example  so I m fine with either     x000D \n x000D \n sambostock Feel free to open another PR to make everything consistent  x000D \n x000D \n", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sounds good to me  we can use consistent syntax for now and discuss changing it in another PR ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " lib  is actually already in the load path so we can just use regular strings instead of pathnames ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yes  it is a big deal   ActionDispatch  IntegrationTest  loads  ActionController  Base   For test helpers the current syntax is fine since this is after the environment is loaded and the application is initialized  but for gems it is a problem ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "So I d replace this with x000D \n   ruby x000D \nrequire  test multiple assertions  x000D \n    x000D \n x000D \nIf so  perhaps the directory should be renamed to something like  test support    test helpers  or something  \ud83e\udd14 ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Correct  The rails root isn t part of the load paths  so I don t think its entirely misleading ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Addressed in  34619  x000D \n  If this is merged first  I ll update  34619  x000D \n  If  34619 is merged first  I ll update this  x000D \n  If  34619 is closed without merging  I ll leave this as is ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Done \ud83d\udc4d", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you for the pull request  Can you revert the break up of the long sentences  I don t think it make it easier to understand and just increase the overhead to review ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks  rafaelfranca  I reverted the line wrapping and updated the commit message to reflect this ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Why is this using the original class ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It dupes it  so the original class is unchanged  Since duping seems to have the same affect and doesn t need type columns  I ll change my code to just use a dup of  Topic  everywhere ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "why this use      and not      ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I believe it is an array  The previous version implied it was ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Duh  Yeah  that makes sense  can we use  concat  instead  Don t think we need to allocate other array ", "annotation": {"notes": "", "label": ["greeting"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Absolutely  done  I agonised a little over how to construct an array  then decided to just do something which aligned prettily and just wait for feedback  \ud83d\ude05", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think we can avoid all those concats  too  I just don t know how I feel about the syntax  x000D \n x000D \n   ruby x000D \nActiveSupport  Deprecation silence do x000D \n  log array logger    x000D \n          x000D \n       exception class     exception message      x000D \n      exception annoted source code if exception respond to   annoted source code    x000D \n          x000D \n     trace x000D \n     x000D \nend x000D \n   ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think you can do  require relative  here  right ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This is misleading  I would adjust the comment to say    shouldn t raise when module is required more than once   I would also consider renaming the module to  SomeConcern ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Using  require relative  rather than  load  would result in a no op on the second iteration  no ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Happy with the renaming and I ll expand the comment tho  as above  I think it needs to be  when module loaded more than once  rather than     required     ", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "1  What s the reason for this  x000D \n2  Does this work in case when source location is the same  code changed  and reloaded ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " simi  Please review the discussion on  14802 for context  x000D \n x000D \nRegarding  2    it depends what you mean by  work    I don t think it works    I ve reopened a discussion about that aspect of this change on  14802  can you add your view there please  x000D \n x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you squash your commits ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca  yup  was just going to wait until they were all done first  but can do that now  np ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Is the first commit necessary ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "No  I just wanted to ensure the original author of the patch   razum2um  received sufficient credit ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We usually give him credit in the commit message for the rails contributors app to pickup on  You can do   name   other name   or   name   other name   in a commit message to credit multiple people   Example  https   github com rails rails commit bcccf8b6a23d66f78d8b1349f92dcc19373daa9d ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ok  thanks for the example  Squashed and modified accordingly  \ud83d\ude04 ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for fixing this ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Backported to 5 2 stable in a69b5b1533557f2b29eb4f04aef7514ff1f53060", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Any chance this gets released as  5 2 1 2  any time soon ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "No  You are free to use the 5 2 stable branch ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Commenting because some folks have reached out to me to ask why we re not releasing a 5 2 1 2 x000D \n x000D \nTo clarify what Rafael means is we are releasing 5 2 2 v soon and that will include the bug fix  Building the gem from 5 2 stable is also a viable in the meantime ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "There is three costs of releasing a security fix version  x000D \n x000D \n  maintainer overhead   it is very stressful and full of manual steps and verifications to release a security fix version  x000D \n  psychologic pressure   because it is a security release people think they need to upgrade ASAP  x000D \n  time pressure   The release needs to be done ASAP  x000D \n x000D \nSince this is fixing a bug I d prefer to release this in a bug fix release without of those costs  Bundler is here to help everyone  There is no reason why you can t use the 5 2 stable branch  it contains the same code that would be contained in the 5 2 2 release  x000D \n x000D \nThat being said  I m planning to do a release  but not because of this issue and with no time commitment ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca Any chance of updating the post at https   weblog rubyonrails org 2018 11 27 Rails 4 2 5 0 5 1 5 2 have been released  with a note about this issue  I spent a while this morning tracking down this issue in one of my apps before finding this PR and I dare say others will experience the same ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "5 2 2 rc1 was released just to address this issue  I can update the blog post for the new release with that information ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " rafaelfranca  did you have in mind that you re breaking all third party active storage services implementations by changing  Service upload  ActiveStorage API call  x000D \nFor example  chaadow activestorage openstack and others  x000D \n x000D \nMaybe it s better to revert this change before pulling it in 5 2 2 and find another way of hacking this feature ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " kugaevsky Just saw your comment by accident  I m going to fix this and my gem altogether with the most recent  fog openstack  version  Thank you ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " chaadow thank you  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " shipit  5 2 stable is also broken  Can you take a look ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "There was a test that I missed in one place  so I fixed it in addition  x000D \n x000D \n  Can you take a look  x000D \n x000D \n ok man  I will do ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " modosc Thanks ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you for the pull request  When we added the  or  implementation we considered doing this by we chose to not add because it is hard to support not simple scenarios  That being said we prefer to not add two ways to build OR clauses  See https   github com rails rails pull 16052 and https   github com rails rails pull 32086", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve reverted this PR in 93c94973ab574083a8cd1868aae03993ca156c34 since  scope take  is not the same with  scope to a first  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you add a test so the regression doesn t happen again ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sure  I ll do that later ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I can t see how  scope take  can be different from  scope to a first   for the  scope  with  limit 1    If can explain it here  I can make the regression test myself and save you some time ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve already added the regression test ba4e68f577efc76f351d30a2914e29942b97830e ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " must  implies to me that the framework is checking the type  Since no check is being done   should  might be more appropriate  So  x000D \n x000D \n   suggestion x000D \nScoping allows you to specify commonly used queries which can be referenced as method calls on the association objects or models  With these scopes  you can use every method previously covered such as  where    joins  and  includes   All scope bodies should return an  ActiveRecord  Relation  or  nil  to allow for further methods  such as other scopes  to be called on it  x000D \n    x000D \nWhat do you think ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "A scope will never return  nil  and if it did then this documentation would be wrong because you would not be able to chain another scope on a  nil  result ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The scope body can return  nil  but the scope method will not   scope  foo         all if false    ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "\ud83d\udc4d ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Have you folks seen  https   github com rails rails pull 32846  It tries to tackles that by issuing runtime warnings ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Yes  but I don t think it is worth the overhead of checking if it is a relation or not every time a scope is executed  People who always do the right thing would have to execute an unneeded  if  just to protect people that do the wrong thing  I think it is better to not check anything at runtime in that case ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Not excluding the idea of merging  32846  I still think it is overkill  but maybe the performance concern I have is not justified ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It seems that it is better to always use the  connection schema cache columns hash  here   attributes to define after schema loads  can contain attributes that are not in the database and we use this just to remove from  column types ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What you are seeing is the expected behavior in my opinion  Because you ignored the column Rails should not know how to handle it coming from the database ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the feedback  x000D \n x000D \nThis behaviour seemed confusing to me  because  the doc  https   api rubyonrails org classes ActiveRecord ModelSchema ClassMethods html method i ignored columns  says that  Ignored columns won t have attribute accessors defined   but since we do have the accessor  because of  select        I expect it to work    Also  I believe that behavior should be consistent across the databases   my test passes for MySQL and SQLite", "annotation": {"notes": "", "label": ["commit"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I agree the behavior should be consistent  so we need to understand why with no changes your test pass in MySQL and SQLite and not in PostgreSQL and make it work in PostgreSQL without adding  attributes to define after schema loads  back to  column hash  again before removing it from  column type  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve traced the code to figure out why this issue does not affect other adapters   DatabaseStatements exec query  returns  ActiveRecord  Result   which accepts  columns    rows  and  column types  to it s initializer  PostgreSQL  DatabaseStatements   provide  https   github com rails rails blob master activerecord lib active record connection adapters postgresql database statements rb L93  all three arguments  while MySQL  one  https   github com rails rails blob master activerecord lib active record connection adapters mysql database statements rb L37    only two  so  column types  are always empty in that case   Querying find by sql  calls  result set column types  as a part of instantiation ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Cool  Thank you for investigating  What do you think on my suggestion of always using the column hash returned by the schema cache on that line ", "annotation": {"notes": "", "label": ["greeting"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve added it to my commit  waiting for the tests to pass    Thanks for the suggestion", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " connection schema cache columns hash  works perfectly fine  I only had to add a small warmup setup to the instrumentation test  please let me know if there is a better way to do it  to make sure we have cache initialized before the first test   otherwise  the first event would be about the warmup instead of the desired one  Now all the specs are green", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Great work on this", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "The example doesn t make a lot of sense for cache key with version  only  id  is used inside of the  fetch  block so  cache key  would be enough  x000D \n x000D \nI would rewrite the example to use  Product sku  instead of  id  for example and pass the  self  instead of the explicit call to the  cache key with version  to the fetch method or pass  cache key  and  cache version  separately to  fetch   This way it would be true use case and true  low level      x000D \n", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you address the  test dumping composite primary key out of order  too  x000D \n x000D \nhttps   github com rails rails blob f5261909c517edc89b335ff5e025fd3f0f89e2b1 activerecord test cases primary keys test rb L377 L381", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I guess the trailing  if result  isn t necessary anymore ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Use  assert instance of  instead ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This test case should be passed by all adapters  add it in generic test cases  e g  in  test cases adapter test rb   not in adapter specific test cases  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Oh  I ve missed that ", "annotation": {"notes": "", "label": ["apology"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "How can I run specific test files using    bin test  script  ", "annotation": {"notes": "", "label": ["suggestion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "e g   bin test test cases adapter test rb  n test select all always return activerecord result ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Failed  x000D \nhttps   travis ci org rails rails jobs 459404009 L1328 L1333", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I wanted to come up with a more creative idea to return an empty result but I thought maybe it d be over engineering  So I just used simple if else statements to avoid complexity ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Any time  eileencodes ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Is this query deterministic order even if the ORDER BY is removed ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the comment   x000D \n x000D \nIn my environment  it returns the primary key order as expected without order by but It does not look like deterministic since it does not  Sort  at the end of the query   x000D \n x000D \nWas thinking about adding  order by a attnum  but it just shows the  column  order of the table  not the index key order  x000D \n x000D \n   ruby x000D \n  create table  countries treaties  force  true  primary key    country id   treaty id  do  t  x000D \n    t string  country id  null  false x000D \n    t string  treaty id  null  false x000D \n  end x000D \n    x000D \n x000D \n  Without  ORDER BY i idx  x000D \n x000D \n x000D \n   sql x000D \nactiverecord unittest                 SELECT a attname x000D \n              FROM   x000D \n                     SELECT indrelid  indkey  generate subscripts indkey  1  idx x000D \n                       FROM pg index x000D \n                      WHERE indrelid    countries treaties   regclass x000D \n                        AND indisprimary x000D \n                     i x000D \n              JOIN pg attribute a x000D \n                ON a attrelid   i indrelid x000D \n               AND a attnum   i indkey i idx   x000D \n  attname x000D \n             x000D \n country id x000D \n treaty id x000D \n 2 rows  x000D \n x000D \n x000D \nactiverecord unittest   explain SELECT a attname x000D \nactiverecord unittest                 FROM   x000D \nactiverecord unittest                        SELECT indrelid  indkey  generate subscripts indkey  1  idx x000D \nactiverecord unittest                          FROM pg index x000D \nactiverecord unittest                         WHERE indrelid    countries treaties   regclass x000D \nactiverecord unittest                           AND indisprimary x000D \nactiverecord unittest                        i x000D \nactiverecord unittest                 JOIN pg attribute a x000D \nactiverecord unittest                   ON a attrelid   i indrelid x000D \nactiverecord unittest                  AND a attnum   i indkey i idx   x000D \n                                                         QUERY PLAN x000D \n                                                                                                                              x000D \n Hash Join   cost 329 65  357 92 rows 43 width 64  x000D \n   Hash Cond    pg index indrelid   a attrelid  AND  pg index indkey  generate subscripts pg index indkey  1      a attnum   x000D \n       ProjectSet   cost 0 27  13 30 rows 1000 width 34  x000D \n             Index Scan using pg index indrelid index on pg index   cost 0 27  8 29 rows 1 width 30  x000D \n               Index Cond   indrelid    207561   oid  x000D \n               Filter  indisprimary x000D \n       Hash   cost 218 75  218 75 rows 7375 width 70  x000D \n             Seq Scan on pg attribute a   cost 0 00  218 75 rows 7375 width 70  x000D \n 8 rows  x000D \n x000D \nactiverecord unittest   x000D \n    x000D \n x000D \n  WITH  ORDER BY i idx  x000D \n   sql x000D \nactiverecord unittest   explain SELECT a attname x000D \n              FROM   x000D \n                     SELECT indrelid  indkey  generate subscripts indkey  1  idx x000D \n                       FROM pg index x000D \n                      WHERE indrelid    countries treaties   regclass x000D \n                        AND indisprimary x000D \n                     i x000D \n              JOIN pg attribute a x000D \n                ON a attrelid   i indrelid x000D \n               AND a attnum   i indkey i idx  ORDER BY i idx  x000D \n                                                            QUERY PLAN x000D \n                                                                                                                                    x000D \n Sort   cost 359 09  359 20 rows 43 width 68  x000D \n   Sort Key   generate subscripts pg index indkey  1   x000D \n       Hash Join   cost 329 65  357 92 rows 43 width 68  x000D \n         Hash Cond    pg index indrelid   a attrelid  AND  pg index indkey  generate subscripts pg index indkey  1      a attnum   x000D \n             ProjectSet   cost 0 27  13 30 rows 1000 width 34  x000D \n                   Index Scan using pg index indrelid index on pg index   cost 0 27  8 29 rows 1 width 30  x000D \n                     Index Cond   indrelid    207561   oid  x000D \n                     Filter  indisprimary x000D \n             Hash   cost 218 75  218 75 rows 7375 width 70  x000D \n                   Seq Scan on pg attribute a   cost 0 00  218 75 rows 7375 width 70  x000D \n 10 rows  x000D \n x000D \nactiverecord unittest   x000D \n   ", "annotation": {"notes": "", "label": [0]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Well  in the meantime I m restoring this change to the current master one since it looks difficult  for me  to guarantee the order of index key  not table column order ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can also remove branch condition in  test reconnection after actual disconnection with verify   x000D \nhttps   github com rails rails blob d6fcc419fe4f99d3f9414d39d081bd6355842018 activerecord test cases adapters postgresql connection test rb L163 L176 x000D \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Removed PostgreSQL version condition and  with manual interventions  from   test reconnection after actual disconnection with verify  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Backport of https   github com rails rails pull 34524 ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "What do you think about freezing  enum values  instead  That way we would get an error if we try to mutate the values  rather than failing silently  x000D \n x000D \nWe would have to do it after all the values are set  https   github com rails rails blob 8f2caec401c8e97d9eb1ea84d8263911c50e1ed6 activerecord lib active record enum rb L185 x000D \n x000D \n", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It seems a smarter way to fix it  will push the change ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Fixing code style ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Does   name   name   work in the commit message  I know square braces are supported  but unsure about using asterisks ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Not that I can see in the code  I think only     works", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I just checked locally  it doesn t   albertoalmagro can you fix the syntax on your commit message  Thanks ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Done  gmcgibbon  rafaelfranca   I ve written it now as    name     name     x000D \n x000D \nThanks for checking it \ud83d\udc4f ", "annotation": {"notes": "", "label": ["question"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This was not a doc change but since it is not related to production code it was fine to merge ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We do have code to do the same thing  So this would be useful for us  x000D \n x000D \nWe define it as  is a query that is not reading   ie not select  etc    and we use  x000D \n x000D \n    x000D \n      build union regexp       parts  do x000D \n        parts   parts map    part    A s   part  i   x000D \n        Regexp union  parts  x000D \n      end x000D \n      READ QUERY   build union regexp call  select   show   set  x000D \n    x000D \n x000D \nas definition ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I like the idea of it  because it d provide a good foundation to run a read write split application against a single database in development  x000D \n x000D \nI don t think it s practical to detect read only queries via string matching  though  even something that explicitly starts with  SELECT  can end up writing  I wonder about using  SET SESSION TRANSACTION READ ONLY  to have the DB enforce it instead   Also worth noting I believe most write ish queries go via  execute   not  exec query    x000D \n x000D \nOn a specific API note  I d prefer a synonym for  blocking   just because it conflicts with   thread  blocking I O  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Changed  while blocking writes  to  while preventing writes  to address  matthewd s concern  I also updated the SQL matcher to use the regex from  rafaelfranca and added some more tests  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Oh right I also need to move this to execute   \ud83d\ude04 ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I agree with  matthewd that detecting read only queries via string matching might be problematic  For example  SELECT     INTO  is definitely not a read only query but would pass the check  I am not sure what the best alternative is  though  but making the DB enforce it sounds much better ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Ok I moved this to execute and added tests for create delete update where first to ensure these were all getting caught  x000D \n x000D \nI updated the changelog to note that the purpose of preventing write queries when choosing readonly mode is for testing  catching accidental writes  and for switching to a readonly connection without opening a second connection  It s purpose isn t to catch ALL writes to a database   it s not meant as a replacement for a replica  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thank you for the PR  We prefer to not implement stopgap solutions in the codebase  Let s wait for  34378", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This bug can cause quite severe performance regression from my experience  and it largely goes unnoticed  unless you actively measure performance  Hope that  34378 gets merged quickly and also backported  to fix existing versions of rails affected by this regression ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "  will show only those emails that have been queued for delivery x000D \n x000D \nI think this sentence is confusing  the  queued for delivery  might make people think about  deliver later   but that s actually the opposite  email sent with with  deliver now  will be in the deliveries array   x000D \n x000D \nMaybe we can say  The  ActionMailer  Base deliveries  method will show only those emails that have been performed  ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "We could inherit from  ActionDispatch  SystemTestCase  if someone copy pastes this but we would need to add a  driven by  line ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This isn t quite right  I think we should promote using  assert enqueued emails  when wanting to check email jobs enqueued without needing access to the actual message  Otherwise  use  assert emails   These assertions no longer has strict relationships with delivery methods ", "annotation": {"notes": "", "label": ["emoji"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " gmcgibbon yeah  I may need to make this PR for the 5 2 version of Rails and then modify the note for version 6  Does that sound right ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "No problem  gmcgibbon I can add that  I wasn t sure if the Rails opinion was they should be inheriting from ApplicationSystemTestCase since the generator does that by default ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " gmcgibbon I wasn t sure about this  include ActionMailer  TestHelper  for Rails 6 either ", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "You can remove it     it gets included automatically on rails 6 0 https   github com rails rails commit 64a9759aff949761f1d79b010e4817a91f3ee226", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sure  Reword this for the  master  patch  and then if you want to backport this patch to  5 2 stable   in another PR  you can keep this wording ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " gmcgibbon I m happy to make the updates  Anything else we should include  Should we remove the previous Functional Testing example that uses the  ActionMailer  Base deliveries size  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Good idea  Let s update the example to use test helpers  You can change  assert difference  ActionMailer  Base deliveries size    1 do  to  assert emails do  in the test above your changes ", "annotation": {"notes": "", "label": ["citation"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I just pushed up some changes  I kept a note in there about the difference between  assert emails  and  assert enqueued emails   Let me know if you think that is clear  x000D \n x000D \nAs more people move away from integration and functional tests  I thought it may be good to include a system test example ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I ve used Rails for years  but am just now learning about participating in open source  I m going to start with looking for documentation that can be improved  so please let me know if there are any sections you would like someone to tackle ", "annotation": {"notes": "", "label": ["opinion"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Oh man  I think I just blew the squash when I rebased it  Were these  instructions  https   github com todotxt todo txt android wiki Squash All Commits Related to a Single Issue into a Single Commit  the best way to do it  ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think you squashed a commit that wasn t yours  You may have to do some git surgery to fix that  For future reference  if you just do  git rebase master  i  from your branch  it will give you a list of all the different commits from master  From there  you can replace  pick  with  squash  or  fixup   Be sure to leave the top commit in your rebase as a pick otherwise you ll squash into the tip of your master branch  x000D \n x000D \nI think you can squash what you have  amend the commit author to yourself  and revert the code changes to ActiveRecord ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "It may be easier for me to just submit a new PR  Is that okay  Sorry ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Sure  whatever you are comfortable with ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I submitted a new PR  and the commit had  ci skip   but it looks like it is still running the tests ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Code climate  linting  checks still run  but the Travis CI  test suite  check does not  Thanks for contributing ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "    is not part of column name  and also     isn t necessary ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Can you add an extra test case that mixed with default opclass like   connection execute  CREATE INDEX trains name and position ON trains USING btree name  position text pattern ops    ", "annotation": {"notes": "", "label": ["code"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the pull request  and welcome  The Rails team is excited to review your changes  and you should hear from  sgrif  or someone else  soon \n\nIf any changes to this PR are deemed necessary  please add them as extra commits  This ensures that the reviewer can see what has changed since they last reviewed the code  Due to the way GitHub handles out of date commits  this should also make it reasonably obvious what issues have or haven t been addressed  Large or tricky changes may require several passes of review and changes \n\nThis repository is being automatically checked for code quality issues using  a href  https   codeclimate com  Code Climate  a   You can see results for this analysis in the PR status below  Newly introduced issues should be fixed before a Pull Request is considered ready to review \n\nPlease see  the contribution instructions  http   edgeguides rubyonrails org contributing to ruby on rails html  for more information \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the pull request  and welcome  The Rails team is excited to review your changes  and you should hear from  eileencodes  or someone else  soon \n\nIf any changes to this PR are deemed necessary  please add them as extra commits  This ensures that the reviewer can see what has changed since they last reviewed the code  Due to the way GitHub handles out of date commits  this should also make it reasonably obvious what issues have or haven t been addressed  Large or tricky changes may require several passes of review and changes \n\nThis repository is being automatically checked for code quality issues using  a href  https   codeclimate com  Code Climate  a   You can see results for this analysis in the PR status below  Newly introduced issues should be fixed before a Pull Request is considered ready to review \n\nPlease see  the contribution instructions  http   edgeguides rubyonrails org contributing to ruby on rails html  for more information \n", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "I think this is good   Database connections are backed by a file descriptor  so I expect them to be thread  unsafe  but safe for fibers since fibers can t interrupt calls inside the database connection  x000D \n x000D \nWe were investigating  fxn s comments about making actual thread locals easier to use  via  mattr accessor    but I don t know that using real thread locals is popular enough to warrant such an abstraction   I like the idea of generalization  but I also like the idea of  smallest patch to fix the bug   \ud83d\ude09", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": " tenderlove my main concern at the time was  if we call this thread local  it should be thread local   As you said in your closing keynote in Chicago re computer science  I can t really believe I have to say this \ud83d\ude04   x000D \n x000D \nIf the real thread local use case doesn t warrant API  then there s no need to generalize  but naming should reflect that the thing is fiber local ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "sweet  thanks  eileencodes ", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "This will need a changelog entry", "annotation": {"notes": "", "label": ["requirement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Thanks for the pull request  and welcome  The Rails team is excited to review your changes  and you should hear from  sgrif  or someone else  soon \n\nIf any changes to this PR are deemed necessary  please add them as extra commits  This ensures that the reviewer can see what has changed since they last reviewed the code  Due to the way GitHub handles out of date commits  this should also make it reasonably obvious what issues have or haven t been addressed  Large or tricky changes may require several passes of review and changes \n\nThis repository is being automatically checked for code quality issues using  a href  https   codeclimate com  Code Climate  a   You can see results for this analysis in the PR status below  Newly introduced issues should be fixed before a Pull Request is considered ready to review \n\nPlease see  the contribution instructions  http   edgeguides rubyonrails org contributing to ruby on rails html  for more information \n", "annotation": {"notes": "", "label": ["statement"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
{"content": "Welcome to Rails  alfonsojimenez   \ud83d\udc4f ", "annotation": {"notes": "", "label": ["action"]}, "extras": "null", "metadata": {"first_done_at": 1, "last_updated_at": 1, "sec_taken": 0, "last_updated_by": "nlYZXxNBQefF2u9VX52CdONFp0C3", "status": "done", "evaluation": "NONE"}}
